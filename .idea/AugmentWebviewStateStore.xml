<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AugmentWebviewStateStore">
    <option name="stateMap">
      <map>
        <entry key="CHAT_STATE" value="{"currentConversationId":"d93dffb6-fa03-4f23-9778-c171bd134da5","conversations":{"fca7e11a-9966-427d-b20f-15b54f3cdb16":{"id":"fca7e11a-9966-427d-b20f-15b54f3cdb16","createdAtIso":"2025-05-23T05:16:15.720Z","lastInteractedAtIso":"2025-05-23T05:16:15.720Z","chatHistory":[],"feedbackStates":{},"toolUseStates":{},"draftExchange":{"request_message":"","rich_text_json_repr":{"type":"doc","content":[{"type":"paragraph"}]},"mentioned_items":[],"status":"draft"},"requestIds":[],"isPinned":false,"isShareable":false,"extraData":{"hasDirtyEdits":false},"personaType":0},"8d8be92e-c8bb-47e4-ab0a-81f99365b2b0":{"id":"8d8be92e-c8bb-47e4-ab0a-81f99365b2b0","createdAtIso":"2025-05-23T05:16:15.839Z","lastInteractedAtIso":"2025-05-23T05:16:15.839Z","chatHistory":[],"feedbackStates":{},"toolUseStates":{},"draftExchange":{"request_message":"","rich_text_json_repr":{"type":"doc","content":[{"type":"paragraph"}]},"mentioned_items":[],"status":"draft"},"requestIds":[],"isPinned":false,"isShareable":false,"extraData":{"hasDirtyEdits":false},"personaType":0,"rootTaskUuid":"068712f4-03bd-4ce9-8b95-8c9f36fa1f0a"},"d93dffb6-fa03-4f23-9778-c171bd134da5":{"id":"d93dffb6-fa03-4f23-9778-c171bd134da5","createdAtIso":"2025-05-23T05:16:23.451Z","lastInteractedAtIso":"2025-05-23T05:31:24.059Z","chatHistory":[{"request_id":"b810ecfe-dd9d-4572-a760-83917075f820","uuid":"5df173c1-73ce-4a40-887a-550b678cb446","chatItemType":"agentic-checkpoint-delimiter","status":"success","fromTimestamp":0,"toTimestamp":1747977383456,"seen_state":"seen"},{"status":"success","request_id":"0b6a300c-ed7f-4a7a-9f90-56136ced04ef","request_message":"---\n\n### 🔧 Prompt for AI Agent:\n\n> **Act as a C++ Sensor Fusion mentor and software engineer. Use the project rubric and file structure below to generate and implement 100% rubric-aligned code for the ‘SFND\\_Unscented\\_Kalman\\_Filter’ project. Your output must:**\n>\n> 1. **Ensure the project compiles without errors using `cmake .. && make`.**\n> 2. **Avoid inefficient code patterns: eliminate redundant calculations, minimize loop usage, simplify control flows, and avoid over-engineering data structures.**\n> 3. **Achieve RMSE ≤ \\[0.30, 0.16, 0.95, 0.70] for px, py, vx, vy after 1s in the simulator.**\n> 4. **Implement the correct UKF algorithm structure as taught in class, including prediction and update steps for both lidar and radar.**\n> 5. **Only modify `ukf.cpp` and `ukf.h`. Keep the rest of the file structure unchanged.**\n> 6. **Adhere to Google’s C++ style guide (2-space indents, proper naming).**\n> 7. **Include clear inline comments to explain each function and critical logic.**\n>\n> 🔹 **File structure:**\n\n```\n(base) ~/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter git:[master]\n├── CMakeLists.txt\n├── README.md\n├── src\n│   ├── main.cpp\n│   ├── tools.cpp\n│   ├── tools.h\n│   ├── ukf.cpp\n│   ├── ukf.h\n│   ├── highway.h\n│   ├── measurement_package.h\n│   ├── render/\n│   └── sensors/\n├── media/\n└── cmake-build-debug/\n```\n\n> 🔹 **Project Rubric Requirements:**\n>\n> **Compiling and Testing**\n>\n> * The project must compile using cmake and make.\n>\n> **Code Efficiency**\n>\n> * Avoid redundant calculations and loops.\n> * Use simple data structures when possible.\n>\n> **Accuracy**\n>\n> * RMSE must be ≤ \\[0.30, 0.16, 0.95, 0.70] for px, py, vx, vy after 1 second of simulation.\n>\n> **Correct Algorithm**\n>\n> * Must follow the taught UKF structure for prediction, lidar update, and radar update.\n\n> 🔹 **README.md Key Instructions:**\n>\n> * Build steps: `mkdir build && cd build && cmake .. && make && ./ukf_highway`\n> * The program uses `main.cpp` and `highway.h` to simulate multiple traffic cars and one ego car using Lidar and Radar input.\n> * Only `ukf.cpp` and `ukf.h` need to be completed.\n\n✅ **Now:**\n\n* Generate `ukf.cpp` and `ukf.h` with complete, functional UKF logic that passes the rubric.\n* Ensure no build or runtime errors.\n* Provide a checklist for verifying simulation performance.\n* List steps to confirm the RMSE and project behavior meet rubric standards.\n\n---\n\n","rich_text_json_repr":{"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"---"},{"type":"hardBreak"},{"type":"hardBreak"},{"type":"text","text":"### 🔧 Prompt for AI Agent:"},{"type":"hardBreak"},{"type":"hardBreak"},{"type":"text","text":"> **Act as a C++ Sensor Fusion mentor and software engineer. Use the project rubric and file structure below to generate and implement 100% rubric-aligned code for the ‘SFND\\_Unscented\\_Kalman\\_Filter’ project. Your output must:**"},{"type":"hardBreak"},{"type":"text","text":">"},{"type":"hardBreak"},{"type":"text","text":"> 1. **Ensure the project compiles without errors using `cmake .. && make`.**"},{"type":"hardBreak"},{"type":"text","text":"> 2. **Avoid inefficient code patterns: eliminate redundant calculations, minimize loop usage, simplify control flows, and avoid over-engineering data structures.**"},{"type":"hardBreak"},{"type":"text","text":"> 3. **Achieve RMSE ≤ \\[0.30, 0.16, 0.95, 0.70] for px, py, vx, vy after 1s in the simulator.**"},{"type":"hardBreak"},{"type":"text","text":"> 4. **Implement the correct UKF algorithm structure as taught in class, including prediction and update steps for both lidar and radar.**"},{"type":"hardBreak"},{"type":"text","text":"> 5. **Only modify `ukf.cpp` and `ukf.h`. Keep the rest of the file structure unchanged.**"},{"type":"hardBreak"},{"type":"text","text":"> 6. **Adhere to Google’s C++ style guide (2-space indents, proper naming).**"},{"type":"hardBreak"},{"type":"text","text":"> 7. **Include clear inline comments to explain each function and critical logic.**"},{"type":"hardBreak"},{"type":"text","text":">"},{"type":"hardBreak"},{"type":"text","text":"> 🔹 **File structure:**"},{"type":"hardBreak"},{"type":"hardBreak"},{"type":"text","text":"```"},{"type":"hardBreak"},{"type":"text","text":"(base) ~/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter git:[master]"},{"type":"hardBreak"},{"type":"text","text":"├── CMakeLists.txt"},{"type":"hardBreak"},{"type":"text","text":"├── README.md"},{"type":"hardBreak"},{"type":"text","text":"├── src"},{"type":"hardBreak"},{"type":"text","text":"│   ├── main.cpp"},{"type":"hardBreak"},{"type":"text","text":"│   ├── tools.cpp"},{"type":"hardBreak"},{"type":"text","text":"│   ├── tools.h"},{"type":"hardBreak"},{"type":"text","text":"│   ├── ukf.cpp"},{"type":"hardBreak"},{"type":"text","text":"│   ├── ukf.h"},{"type":"hardBreak"},{"type":"text","text":"│   ├── highway.h"},{"type":"hardBreak"},{"type":"text","text":"│   ├── measurement_package.h"},{"type":"hardBreak"},{"type":"text","text":"│   ├── render/"},{"type":"hardBreak"},{"type":"text","text":"│   └── sensors/"},{"type":"hardBreak"},{"type":"text","text":"├── media/"},{"type":"hardBreak"},{"type":"text","text":"└── cmake-build-debug/"},{"type":"hardBreak"},{"type":"text","text":"```"},{"type":"hardBreak"},{"type":"hardBreak"},{"type":"text","text":"> 🔹 **Project Rubric Requirements:**"},{"type":"hardBreak"},{"type":"text","text":">"},{"type":"hardBreak"},{"type":"text","text":"> **Compiling and Testing**"},{"type":"hardBreak"},{"type":"text","text":">"},{"type":"hardBreak"},{"type":"text","text":"> * The project must compile using cmake and make."},{"type":"hardBreak"},{"type":"text","text":">"},{"type":"hardBreak"},{"type":"text","text":"> **Code Efficiency**"},{"type":"hardBreak"},{"type":"text","text":">"},{"type":"hardBreak"},{"type":"text","text":"> * Avoid redundant calculations and loops."},{"type":"hardBreak"},{"type":"text","text":"> * Use simple data structures when possible."},{"type":"hardBreak"},{"type":"text","text":">"},{"type":"hardBreak"},{"type":"text","text":"> **Accuracy**"},{"type":"hardBreak"},{"type":"text","text":">"},{"type":"hardBreak"},{"type":"text","text":"> * RMSE must be ≤ \\[0.30, 0.16, 0.95, 0.70] for px, py, vx, vy after 1 second of simulation."},{"type":"hardBreak"},{"type":"text","text":">"},{"type":"hardBreak"},{"type":"text","text":"> **Correct Algorithm**"},{"type":"hardBreak"},{"type":"text","text":">"},{"type":"hardBreak"},{"type":"text","text":"> * Must follow the taught UKF structure for prediction, lidar update, and radar update."},{"type":"hardBreak"},{"type":"hardBreak"},{"type":"text","text":"> 🔹 **README.md Key Instructions:**"},{"type":"hardBreak"},{"type":"text","text":">"},{"type":"hardBreak"},{"type":"text","text":"> * Build steps: `mkdir build && cd build && cmake .. && make && ./ukf_highway`"},{"type":"hardBreak"},{"type":"text","text":"> * The program uses `main.cpp` and `highway.h` to simulate multiple traffic cars and one ego car using Lidar and Radar input."},{"type":"hardBreak"},{"type":"text","text":"> * Only `ukf.cpp` and `ukf.h` need to be completed."},{"type":"hardBreak"},{"type":"hardBreak"},{"type":"text","text":"✅ **Now:**"},{"type":"hardBreak"},{"type":"hardBreak"},{"type":"text","text":"* Generate `ukf.cpp` and `ukf.h` with complete, functional UKF logic that passes the rubric."},{"type":"hardBreak"},{"type":"text","text":"* Ensure no build or runtime errors."},{"type":"hardBreak"},{"type":"text","text":"* Provide a checklist for verifying simulation performance."},{"type":"hardBreak"},{"type":"text","text":"* List steps to confirm the RMSE and project behavior meet rubric standards."},{"type":"hardBreak"},{"type":"hardBreak"},{"type":"text","text":"---"},{"type":"hardBreak"},{"type":"hardBreak"}]}]},"mentioned_items":[],"structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01Hba1VUecB6GBiVHkA3FsGh","tool_name":"view","input_json":"{\"path\": \"README.md\"}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"I'll help you implement the Unscented Kalman Filter (UKF) for your sensor fusion project. Let me first gather information about the existing code structure to understand what we're working with.\n\n## Preliminary Information Gathering\n\nLet's examine the existing files to understand the project structure and requirements better.\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":0,"type":0,"text_node":{"content":"---\n\n### 🔧 Prompt for AI Agent:\n\n> **Act as a C++ Sensor Fusion mentor and software engineer. Use the project rubric and file structure below to generate and implement 100% rubric-aligned code for the ‘SFND\\_Unscented\\_Kalman\\_Filter’ project. Your output must:**\n>\n> 1. **Ensure the project compiles without errors using `cmake .. && make`.**\n> 2. **Avoid inefficient code patterns: eliminate redundant calculations, minimize loop usage, simplify control flows, and avoid over-engineering data structures.**\n> 3. **Achieve RMSE ≤ \\[0.30, 0.16, 0.95, 0.70] for px, py, vx, vy after 1s in the simulator.**\n> 4. **Implement the correct UKF algorithm structure as taught in class, including prediction and update steps for both lidar and radar.**\n> 5. **Only modify `ukf.cpp` and `ukf.h`. Keep the rest of the file structure unchanged.**\n> 6. **Adhere to Google’s C++ style guide (2-space indents, proper naming).**\n> 7. **Include clear inline comments to explain each function and critical logic.**\n>\n> 🔹 **File structure:**\n\n```\n(base) ~/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter git:[master]\n├── CMakeLists.txt\n├── README.md\n├── src\n│   ├── main.cpp\n│   ├── tools.cpp\n│   ├── tools.h\n│   ├── ukf.cpp\n│   ├── ukf.h\n│   ├── highway.h\n│   ├── measurement_package.h\n│   ├── render/\n│   └── sensors/\n├── media/\n└── cmake-build-debug/\n```\n\n> 🔹 **Project Rubric Requirements:**\n>\n> **Compiling and Testing**\n>\n> * The project must compile using cmake and make.\n>\n> **Code Efficiency**\n>\n> * Avoid redundant calculations and loops.\n> * Use simple data structures when possible.\n>\n> **Accuracy**\n>\n> * RMSE must be ≤ \\[0.30, 0.16, 0.95, 0.70] for px, py, vx, vy after 1 second of simulation.\n>\n> **Correct Algorithm**\n>\n> * Must follow the taught UKF structure for prediction, lidar update, and radar update.\n\n> 🔹 **README.md Key Instructions:**\n>\n> * Build steps: `mkdir build && cd build && cmake .. && make && ./ukf_highway`\n> * The program uses `main.cpp` and `highway.h` to simulate multiple traffic cars and one ego car using Lidar and Radar input.\n> * Only `ukf.cpp` and `ukf.h` need to be completed.\n\n✅ **Now:**\n\n* Generate `ukf.cpp` and `ukf.h` with complete, functional UKF logic that passes the rubric.\n* Ensure no build or runtime errors.\n* Provide a checklist for verifying simulation performance.\n* List steps to confirm the RMSE and project behavior meet rubric standards.\n\n---\n\n"}},{"id":1,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:16:46.605Z","response_text":"I'll help you implement the Unscented Kalman Filter (UKF) for your sensor fusion project. Let me first gather information about the existing code structure to understand what we're working with.\n\n## Preliminary Information Gathering\n\nLet's examine the existing files to understand the project structure and requirements better.\n","workspace_file_chunks":[]},{"status":"success","request_id":"f40dae73-54f8-4ce2-9fc6-0da91f86c574","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01PDpWYpFDNdsqC9NUhgktD6","tool_name":"view","input_json":"{\"path\": \"src/ukf.h\"}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Let's look at the existing implementation files to understand what we need to implement:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here's the result of running `cat -n` on README.md:\n     1\t# SFND_Unscented_Kalman_Filter\n     2\tSensor Fusion UKF Highway Project Starter Code\n     3\t\n     4\t<img src=\"media/ukf_highway_tracked.gif\" width=\"700\" height=\"400\" />\n     5\t\n     6\tIn this project you will implement an Unscented Kalman Filter to estimate the state of multiple cars on a highway using noisy lidar and radar measurements. Passing the project requires obtaining RMSE values that are lower that the tolerance outlined in the project rubric. \n     7\t\n     8\tThe main program can be built and ran by doing the following from the project top directory.\n     9\t\n    10\t1. mkdir build\n    11\t2. cd build\n    12\t3. cmake ..\n    13\t4. make\n    14\t5. ./ukf_highway\n    15\t\n    16\tNote that the programs that need to be written to accomplish the project are src/ukf.cpp, and src/ukf.h\n    17\t\n    18\tThe program main.cpp has already been filled out, but feel free to modify it.\n    19\t\n    20\t<img src=\"media/ukf_highway.png\" width=\"700\" height=\"400\" />\n    21\t\n    22\t`main.cpp` is using `highway.h` to create a straight 3 lane highway environment with 3 traffic cars and the main ego car at the center. \n    23\tThe viewer scene is centered around the ego car and the coordinate system is relative to the ego car as well. The ego car is green while the \n    24\tother traffic cars are blue. The traffic cars will be accelerating and altering their steering to change lanes. Each of the traffic car's has\n    25\tit's own UKF object generated for it, and will update each indidual one during every time step. \n    26\t\n    27\tThe red spheres above cars represent the (x,y) lidar detection and the purple lines show the radar measurements with the velocity magnitude along the detected angle. The Z axis is not taken into account for tracking, so you are only tracking along the X/Y axis.\n    28\t\n    29\t---\n    30\t\n    31\t## Other Important Dependencies\n    32\t* cmake >= 3.5\n    33\t  * All OSes: [click here for installation instructions](https://cmake.org/install/)\n    34\t* make >= 4.1 (Linux, Mac), 3.81 (Windows)\n    35\t  * Linux: make is installed by default on most Linux distros\n    36\t  * Mac: [install Xcode command line tools to get make](https://developer.apple.com/xcode/features/)\n    37\t  * Windows: [Click here for installation instructions](http://gnuwin32.sourceforge.net/packages/make.htm)\n    38\t* gcc/g++ >= 5.4\n    39\t  * Linux: gcc / g++ is installed by default on most Linux distros\n    40\t  * Mac: same deal as make - [install Xcode command line tools](https://developer.apple.com/xcode/features/)\n    41\t  * Windows: recommend using [MinGW](http://www.mingw.org/)\n    42\t * PCL 1.2\n    43\t\n    44\t## Basic Build Instructions\n    45\t\n    46\t1. Clone this repo.\n    47\t2. Make a build directory: `mkdir build && cd build`\n    48\t3. Compile: `cmake .. && make`\n    49\t4. Run it: `./ukf_highway`\n    50\t\n    51\t## Editor Settings\n    52\t\n    53\tWe've purposefully kept editor configuration files out of this repo in order to\n    54\tkeep it as simple and environment agnostic as possible. However, we recommend\n    55\tusing the following settings:\n    56\t\n    57\t* indent using spaces\n    58\t* set tab width to 2 spaces (keeps the matrices in source code aligned)\n    59\t\n    60\t## Code Style\n    61\t\n    62\tPlease stick to [Google's C++ style guide](https://google.github.io/styleguide/cppguide.html) as much as possible.\n    63\t\n    64\t## Generating Additional Data\n    65\t\n    66\tThis is optional!\n    67\t\n    68\tIf you'd like to generate your own radar and lidar modify the code in `highway.h` to alter the cars. Also check out `tools.cpp` to\n    69\tchange how measurements are taken, for instance lidar markers could be the (x,y) center of bounding boxes by scanning the PCD environment\n    70\tand performing clustering. This is similar to what was done in Sensor Fusion Lidar Obstacle Detection.\n    71\t\n    72\t## Project Instructions and Rubric\n    73\t\n    74\tThis information is only accessible by people who are already enrolled in Sensor Fusion. \n    75\tIf you are enrolled, see the project page in the classroom\n    76\tfor instructions and the project rubric.\n    77\t\nTotal lines in file: 77\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01Hba1VUecB6GBiVHkA3FsGh"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:16:49.653Z","response_text":"Let's look at the existing implementation files to understand what we need to implement:\n","workspace_file_chunks":[]},{"status":"success","request_id":"8cdc4baf-c8cc-4f56-a2ea-019b1427daed","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01JRqdRrXQZtmTsKHdzqtdjp","tool_name":"view","input_json":"{\"path\": \"src/ukf.cpp\"}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":""},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here's the result of running `cat -n` on src/ukf.h:\n     1\t#ifndef UKF_H\n     2\t#define UKF_H\n     3\t\n     4\t#include \"Eigen/Dense\"\n     5\t#include \"measurement_package.h\"\n     6\t\n     7\tclass UKF {\n     8\t public:\n     9\t  /**\n    10\t   * Constructor\n    11\t   */\n    12\t  UKF();\n    13\t\n    14\t  /**\n    15\t   * Destructor\n    16\t   */\n    17\t  virtual ~UKF();\n    18\t\n    19\t  /**\n    20\t   * ProcessMeasurement\n    21\t   * @param meas_package The latest measurement data of either radar or laser\n    22\t   */\n    23\t  void ProcessMeasurement(MeasurementPackage meas_package);\n    24\t\n    25\t  /**\n    26\t   * Prediction Predicts sigma points, the state, and the state covariance\n    27\t   * matrix\n    28\t   * @param delta_t Time between k and k+1 in s\n    29\t   */\n    30\t  void Prediction(double delta_t);\n    31\t\n    32\t  /**\n    33\t   * Updates the state and the state covariance matrix using a laser measurement\n    34\t   * @param meas_package The measurement at k+1\n    35\t   */\n    36\t  void UpdateLidar(MeasurementPackage meas_package);\n    37\t\n    38\t  /**\n    39\t   * Updates the state and the state covariance matrix using a radar measurement\n    40\t   * @param meas_package The measurement at k+1\n    41\t   */\n    42\t  void UpdateRadar(MeasurementPackage meas_package);\n    43\t\n    44\t\n    45\t  // initially set to false, set to true in first call of ProcessMeasurement\n    46\t  bool is_initialized_;\n    47\t\n    48\t  // if this is false, laser measurements will be ignored (except for init)\n    49\t  bool use_laser_;\n    50\t\n    51\t  // if this is false, radar measurements will be ignored (except for init)\n    52\t  bool use_radar_;\n    53\t\n    54\t  // state vector: [pos1 pos2 vel_abs yaw_angle yaw_rate] in SI units and rad\n    55\t  Eigen::VectorXd x_;\n    56\t\n    57\t  // state covariance matrix\n    58\t  Eigen::MatrixXd P_;\n    59\t\n    60\t  // predicted sigma points matrix\n    61\t  Eigen::MatrixXd Xsig_pred_;\n    62\t\n    63\t  // time when the state is true, in us\n    64\t  long long time_us_;\n    65\t\n    66\t  // Process noise standard deviation longitudinal acceleration in m/s^2\n    67\t  double std_a_;\n    68\t\n    69\t  // Process noise standard deviation yaw acceleration in rad/s^2\n    70\t  double std_yawdd_;\n    71\t\n    72\t  // Laser measurement noise standard deviation position1 in m\n    73\t  double std_laspx_;\n    74\t\n    75\t  // Laser measurement noise standard deviation position2 in m\n    76\t  double std_laspy_;\n    77\t\n    78\t  // Radar measurement noise standard deviation radius in m\n    79\t  double std_radr_;\n    80\t\n    81\t  // Radar measurement noise standard deviation angle in rad\n    82\t  double std_radphi_;\n    83\t\n    84\t  // Radar measurement noise standard deviation radius change in m/s\n    85\t  double std_radrd_ ;\n    86\t\n    87\t  // Weights of sigma points\n    88\t  Eigen::VectorXd weights_;\n    89\t\n    90\t  // State dimension\n    91\t  int n_x_;\n    92\t\n    93\t  // Augmented state dimension\n    94\t  int n_aug_;\n    95\t\n    96\t  // Sigma point spreading parameter\n    97\t  double lambda_;\n    98\t};\n    99\t\n   100\t#endif  // UKF_H\nTotal lines in file: 100\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01PDpWYpFDNdsqC9NUhgktD6"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:16:52.246Z","response_text":"","workspace_file_chunks":[]},{"status":"success","request_id":"2c0747c0-7fd9-4cba-893d-e37c4bd66837","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01913ZtVP2pSNNryyAMQY1HV","tool_name":"view","input_json":"{\"path\": \"src/measurement_package.h\"}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Let's also check the measurement package structure:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here's the result of running `cat -n` on src/ukf.cpp:\n     1\t#include \"ukf.h\"\n     2\t#include \"Eigen/Dense\"\n     3\t\n     4\tusing Eigen::MatrixXd;\n     5\tusing Eigen::VectorXd;\n     6\t\n     7\t/**\n     8\t * Initializes Unscented Kalman filter\n     9\t */\n    10\tUKF::UKF() {\n    11\t  // if this is false, laser measurements will be ignored (except during init)\n    12\t  use_laser_ = true;\n    13\t\n    14\t  // if this is false, radar measurements will be ignored (except during init)\n    15\t  use_radar_ = true;\n    16\t\n    17\t  // initial state vector\n    18\t  x_ = VectorXd(5);\n    19\t\n    20\t  // initial covariance matrix\n    21\t  P_ = MatrixXd(5, 5);\n    22\t\n    23\t  // Process noise standard deviation longitudinal acceleration in m/s^2\n    24\t  std_a_ = 30;\n    25\t\n    26\t  // Process noise standard deviation yaw acceleration in rad/s^2\n    27\t  std_yawdd_ = 30;\n    28\t  \n    29\t  /**\n    30\t   * DO NOT MODIFY measurement noise values below.\n    31\t   * These are provided by the sensor manufacturer.\n    32\t   */\n    33\t\n    34\t  // Laser measurement noise standard deviation position1 in m\n    35\t  std_laspx_ = 0.15;\n    36\t\n    37\t  // Laser measurement noise standard deviation position2 in m\n    38\t  std_laspy_ = 0.15;\n    39\t\n    40\t  // Radar measurement noise standard deviation radius in m\n    41\t  std_radr_ = 0.3;\n    42\t\n    43\t  // Radar measurement noise standard deviation angle in rad\n    44\t  std_radphi_ = 0.03;\n    45\t\n    46\t  // Radar measurement noise standard deviation radius change in m/s\n    47\t  std_radrd_ = 0.3;\n    48\t  \n    49\t  /**\n    50\t   * End DO NOT MODIFY section for measurement noise values \n    51\t   */\n    52\t  \n    53\t  /**\n    54\t   * TODO: Complete the initialization. See ukf.h for other member properties.\n    55\t   * Hint: one or more values initialized above might be wildly off...\n    56\t   */\n    57\t}\n    58\t\n    59\tUKF::~UKF() {}\n    60\t\n    61\tvoid UKF::ProcessMeasurement(MeasurementPackage meas_package) {\n    62\t  /**\n    63\t   * TODO: Complete this function! Make sure you switch between lidar and radar\n    64\t   * measurements.\n    65\t   */\n    66\t}\n    67\t\n    68\tvoid UKF::Prediction(double delta_t) {\n    69\t  /**\n    70\t   * TODO: Complete this function! Estimate the object's location. \n    71\t   * Modify the state vector, x_. Predict sigma points, the state, \n    72\t   * and the state covariance matrix.\n    73\t   */\n    74\t}\n    75\t\n    76\tvoid UKF::UpdateLidar(MeasurementPackage meas_package) {\n    77\t  /**\n    78\t   * TODO: Complete this function! Use lidar data to update the belief \n    79\t   * about the object's position. Modify the state vector, x_, and \n    80\t   * covariance, P_.\n    81\t   * You can also calculate the lidar NIS, if desired.\n    82\t   */\n    83\t}\n    84\t\n    85\tvoid UKF::UpdateRadar(MeasurementPackage meas_package) {\n    86\t  /**\n    87\t   * TODO: Complete this function! Use radar data to update the belief \n    88\t   * about the object's position. Modify the state vector, x_, and \n    89\t   * covariance, P_.\n    90\t   * You can also calculate the radar NIS, if desired.\n    91\t   */\n    92\t}\nTotal lines in file: 92\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01JRqdRrXQZtmTsKHdzqtdjp"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:16:54.405Z","response_text":"Let's also check the measurement package structure:\n","workspace_file_chunks":[]},{"status":"success","request_id":"6464106b-6243-4940-a139-d66a7fc4cefa","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_017Ug1Bfcdxbc5BSSC5o22iL","tool_name":"view","input_json":"{\"path\": \"src/tools.h\"}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":""},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here's the result of running `cat -n` on src/measurement_package.h:\n     1\t#ifndef MEASUREMENT_PACKAGE_H_\n     2\t#define MEASUREMENT_PACKAGE_H_\n     3\t\n     4\t#include \"Eigen/Dense\"\n     5\t\n     6\tclass MeasurementPackage {\n     7\tpublic:\n     8\t  long timestamp_;\n     9\t\n    10\t  enum SensorType{\n    11\t    LASER,\n    12\t    RADAR\n    13\t  } sensor_type_;\n    14\t\n    15\t  Eigen::VectorXd raw_measurements_;\n    16\t\n    17\t};\n    18\t\n    19\t#endif /* MEASUREMENT_PACKAGE_H_ */\nTotal lines in file: 19\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01913ZtVP2pSNNryyAMQY1HV"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:16:56.796Z","response_text":"","workspace_file_chunks":[]},{"status":"success","request_id":"b507bc76-784e-4d26-b096-d1f498d54568","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01AY9rNBKYkRPyaa3rzQjARr","tool_name":"view","input_json":"{\"path\": \"src/main.cpp\"}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Let's also check the main.cpp file to understand how our UKF implementation will be used:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here's the result of running `cat -n` on src/tools.h:\n     1\t#ifndef TOOLS_H_\n     2\t#define TOOLS_H_\n     3\t#include <vector>\n     4\t#include \"Eigen/Dense\"\n     5\t#include \"render/render.h\"\n     6\t#include <pcl/io/pcd_io.h>\n     7\t\n     8\tusing Eigen::MatrixXd;\n     9\tusing Eigen::VectorXd;\n    10\tusing namespace std;\n    11\t\n    12\tstruct lmarker\n    13\t{\n    14\t\tdouble x, y;\n    15\t\tlmarker(double setX, double setY)\n    16\t\t\t: x(setX), y(setY)\n    17\t\t{}\n    18\t\n    19\t};\n    20\t\n    21\tstruct rmarker\n    22\t{\n    23\t\tdouble rho, phi, rho_dot;\n    24\t\trmarker(double setRho, double setPhi, double setRhoDot)\n    25\t\t\t: rho(setRho), phi(setPhi), rho_dot(setRhoDot)\n    26\t\t{}\n    27\t\n    28\t};\n    29\t\n    30\tclass Tools {\n    31\t\tpublic:\n    32\t\t/**\n    33\t\t* Constructor.\n    34\t\t*/\n    35\t\tTools();\n    36\t\t\n    37\t\t/**\n    38\t\t* Destructor.\n    39\t\t*/\n    40\t\tvirtual ~Tools();\n    41\t\t\n    42\t\t// Members\n    43\t\tstd::vector<VectorXd> estimations;\n    44\t\tstd::vector<VectorXd> ground_truth;\n    45\t\t\n    46\t\tdouble noise(double stddev, long long seedNum);\n    47\t\tlmarker lidarSense(Car& car, pcl::visualization::PCLVisualizer::Ptr& viewer, long long timestamp, bool visualize);\n    48\t\trmarker radarSense(Car& car, Car ego, pcl::visualization::PCLVisualizer::Ptr& viewer, long long timestamp, bool visualize);\n    49\t\tvoid ukfResults(Car car, pcl::visualization::PCLVisualizer::Ptr& viewer, double time, int steps);\n    50\t\t/**\n    51\t\t* A helper method to calculate RMSE.\n    52\t\t*/\n    53\t\tVectorXd CalculateRMSE(const vector<VectorXd> &estimations, const vector<VectorXd> &ground_truth);\n    54\t\tvoid savePcd(typename pcl::PointCloud<pcl::PointXYZ>::Ptr cloud, std::string file);\n    55\t\tpcl::PointCloud<pcl::PointXYZ>::Ptr loadPcd(std::string file);\n    56\t\t\n    57\t};\n    58\t\n    59\t#endif /* TOOLS_H_ */\n    60\t\nTotal lines in file: 60\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_017Ug1Bfcdxbc5BSSC5o22iL"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:16:58.807Z","response_text":"Let's also check the main.cpp file to understand how our UKF implementation will be used:\n","workspace_file_chunks":[]},{"status":"success","request_id":"f876a58b-db2b-4067-99a2-3bfcc95da381","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01LX5S2gnZArp8srvPwTAcnd","tool_name":"view","input_json":"{\"path\": \"src/highway.h\", \"view_range\": [1, 100]}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Let's also check the highway.h file to understand how the simulation is set up:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here's the result of running `cat -n` on src/main.cpp:\n     1\t/* \\author Aaron Brown */\n     2\t// Create simple 3d highway enviroment using PCL\n     3\t// for exploring self-driving car sensors\n     4\t\n     5\t//#include \"render/render.h\"\n     6\t#include \"highway.h\"\n     7\t\n     8\tint main(int argc, char** argv)\n     9\t{\n    10\t\n    11\t\tpcl::visualization::PCLVisualizer::Ptr viewer(new pcl::visualization::PCLVisualizer(\"3D Viewer\"));\n    12\t\tviewer->setBackgroundColor(0, 0, 0);\n    13\t\n    14\t\t// set camera position and angle\n    15\t\tviewer->initCameraParameters();\n    16\t\tfloat x_pos = 0;\n    17\t\tviewer->setCameraPosition ( x_pos-26, 0, 15.0, x_pos+25, 0, 0, 0, 0, 1);\n    18\t\n    19\t\tHighway highway(viewer);\n    20\t\n    21\t\t//initHighway(viewer);\n    22\t\n    23\t\tint frame_per_sec = 30;\n    24\t\tint sec_interval = 10;\n    25\t\tint frame_count = 0;\n    26\t\tint time_us = 0;\n    27\t\n    28\t\tdouble egoVelocity = 25;\n    29\t\n    30\t\twhile (frame_count < (frame_per_sec*sec_interval))\n    31\t\t{\n    32\t\t\tviewer->removeAllPointClouds();\n    33\t\t\tviewer->removeAllShapes();\n    34\t\n    35\t\t\t//stepHighway(egoVelocity,time_us, frame_per_sec, viewer);\n    36\t\t\thighway.stepHighway(egoVelocity,time_us, frame_per_sec, viewer);\n    37\t\t\tviewer->spinOnce(1000/frame_per_sec);\n    38\t\t\tframe_count++;\n    39\t\t\ttime_us = 1000000*frame_count/frame_per_sec;\n    40\t\t\t\n    41\t\t}\n    42\t\n    43\t}\nTotal lines in file: 43\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01AY9rNBKYkRPyaa3rzQjARr"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:17:01.392Z","response_text":"Let's also check the highway.h file to understand how the simulation is set up:\n","workspace_file_chunks":[]},{"status":"success","request_id":"cd0e25c6-3515-4672-8eef-60b2002fc58d","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_0187H65goBWCecDxFjseMLK8","tool_name":"str-replace-editor","input_json":"{\"command\": \"str_replace\", \"path\": \"src/ukf.h\", \"instruction_reminder\": \"ALWAYS BREAK DOWN EDITS INTO SMALLER CHUNKS OF AT MOST 200 LINES EACH.\", \"old_str_1\": \"#ifndef UKF_H\\n#define UKF_H\\n\\n#include \\\"Eigen/Dense\\\"\\n#include \\\"measurement_package.h\\\"\\n\\nclass UKF {\\n public:\\n  /**\\n   * Constructor\\n   */\\n  UKF();\\n\\n  /**\\n   * Destructor\\n   */\\n  virtual ~UKF();\\n\\n  /**\\n   * ProcessMeasurement\\n   * @param meas_package The latest measurement data of either radar or laser\\n   */\\n  void ProcessMeasurement(MeasurementPackage meas_package);\\n\\n  /**\\n   * Prediction Predicts sigma points, the state, and the state covariance\\n   * matrix\\n   * @param delta_t Time between k and k+1 in s\\n   */\\n  void Prediction(double delta_t);\\n\\n  /**\\n   * Updates the state and the state covariance matrix using a laser measurement\\n   * @param meas_package The measurement at k+1\\n   */\\n  void UpdateLidar(MeasurementPackage meas_package);\\n\\n  /**\\n   * Updates the state and the state covariance matrix using a radar measurement\\n   * @param meas_package The measurement at k+1\\n   */\\n  void UpdateRadar(MeasurementPackage meas_package);\\n\\n\\n  // initially set to false, set to true in first call of ProcessMeasurement\\n  bool is_initialized_;\\n\\n  // if this is false, laser measurements will be ignored (except for init)\\n  bool use_laser_;\\n\\n  // if this is false, radar measurements will be ignored (except for init)\\n  bool use_radar_;\\n\\n  // state vector: [pos1 pos2 vel_abs yaw_angle yaw_rate] in SI units and rad\\n  Eigen::VectorXd x_;\\n\\n  // state covariance matrix\\n  Eigen::MatrixXd P_;\\n\\n  // predicted sigma points matrix\\n  Eigen::MatrixXd Xsig_pred_;\\n\\n  // time when the state is true, in us\\n  long long time_us_;\\n\\n  // Process noise standard deviation longitudinal acceleration in m/s^2\\n  double std_a_;\\n\\n  // Process noise standard deviation yaw acceleration in rad/s^2\\n  double std_yawdd_;\\n\\n  // Laser measurement noise standard deviation position1 in m\\n  double std_laspx_;\\n\\n  // Laser measurement noise standard deviation position2 in m\\n  double std_laspy_;\\n\\n  // Radar measurement noise standard deviation radius in m\\n  double std_radr_;\\n\\n  // Radar measurement noise standard deviation angle in rad\\n  double std_radphi_;\\n\\n  // Radar measurement noise standard deviation radius change in m/s\\n  double std_radrd_ ;\\n\\n  // Weights of sigma points\\n  Eigen::VectorXd weights_;\\n\\n  // State dimension\\n  int n_x_;\\n\\n  // Augmented state dimension\\n  int n_aug_;\\n\\n  // Sigma point spreading parameter\\n  double lambda_;\\n};\\n\\n#endif  // UKF_H\", \"new_str_1\": \"#ifndef UKF_H\\n#define UKF_H\\n\\n#include \\\"Eigen/Dense\\\"\\n#include \\\"measurement_package.h\\\"\\n\\nclass UKF {\\n public:\\n  /**\\n   * Constructor\\n   */\\n  UKF();\\n\\n  /**\\n   * Destructor\\n   */\\n  virtual ~UKF();\\n\\n  /**\\n   * ProcessMeasurement\\n   * @param meas_package The latest measurement data of either radar or laser\\n   */\\n  void ProcessMeasurement(MeasurementPackage meas_package);\\n\\n  /**\\n   * Prediction Predicts sigma points, the state, and the state covariance\\n   * matrix\\n   * @param delta_t Time between k and k+1 in s\\n   */\\n  void Prediction(double delta_t);\\n\\n  /**\\n   * Updates the state and the state covariance matrix using a laser measurement\\n   * @param meas_package The measurement at k+1\\n   */\\n  void UpdateLidar(MeasurementPackage meas_package);\\n\\n  /**\\n   * Updates the state and the state covariance matrix using a radar measurement\\n   * @param meas_package The measurement at k+1\\n   */\\n  void UpdateRadar(MeasurementPackage meas_package);\\n\\n  /**\\n   * Generates augmented sigma points\\n   */\\n  void GenerateAugmentedSigmaPoints(Eigen::MatrixXd* Xsig_out);\\n\\n  /**\\n   * Predicts sigma points\\n   * @param Xsig_aug Augmented sigma points\\n   * @param delta_t Time between k and k+1 in s\\n   */\\n  void SigmaPointPrediction(const Eigen::MatrixXd& Xsig_aug, double delta_t);\\n\\n  /**\\n   * Predicts mean and covariance\\n   */\\n  void PredictMeanAndCovariance();\\n\\n  /**\\n   * Normalizes angle to be between -pi and pi\\n   * @param angle Angle to normalize\\n   * @return Normalized angle\\n   */\\n  double NormalizeAngle(double angle);\\n\\n  // initially set to false, set to true in first call of ProcessMeasurement\\n  bool is_initialized_;\\n\\n  // if this is false, laser measurements will be ignored (except for init)\\n  bool use_laser_;\\n\\n  // if this is false, radar measurements will be ignored (except for init)\\n  bool use_radar_;\\n\\n  // state vector: [pos1 pos2 vel_abs yaw_angle yaw_rate] in SI units and rad\\n  Eigen::VectorXd x_;\\n\\n  // state covariance matrix\\n  Eigen::MatrixXd P_;\\n\\n  // predicted sigma points matrix\\n  Eigen::MatrixXd Xsig_pred_;\\n\\n  // time when the state is true, in us\\n  long long time_us_;\\n\\n  // Process noise standard deviation longitudinal acceleration in m/s^2\\n  double std_a_;\\n\\n  // Process noise standard deviation yaw acceleration in rad/s^2\\n  double std_yawdd_;\\n\\n  // Laser measurement noise standard deviation position1 in m\\n  double std_laspx_;\\n\\n  // Laser measurement noise standard deviation position2 in m\\n  double std_laspy_;\\n\\n  // Radar measurement noise standard deviation radius in m\\n  double std_radr_;\\n\\n  // Radar measurement noise standard deviation angle in rad\\n  double std_radphi_;\\n\\n  // Radar measurement noise standard deviation radius change in m/s\\n  double std_radrd_ ;\\n\\n  // Weights of sigma points\\n  Eigen::VectorXd weights_;\\n\\n  // State dimension\\n  int n_x_;\\n\\n  // Augmented state dimension\\n  int n_aug_;\\n\\n  // Sigma point spreading parameter\\n  double lambda_;\\n  \\n  // Number of sigma points\\n  int n_sig_;\\n};\\n\\n#endif  // UKF_H\", \"old_str_start_line_number_1\": 1, \"old_str_end_line_number_1\": 100}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Now I have a good understanding of the project structure. Let's implement the UKF algorithm in the `ukf.cpp` and `ukf.h` files.\n\n## Planning\n\nBased on the information gathered, here's my plan for implementing the Unscented Kalman Filter:\n\n1. **Complete the UKF class initialization in the constructor**:\n   - Set appropriate values for process noise parameters (std_a_ and std_yawdd_)\n   - Initialize state dimension (n_x_), augmented state dimension (n_aug_), and lambda_\n   - Initialize weights vector\n   - Initialize state vector (x_) and covariance matrix (P_)\n   - Initialize Xsig_pred_ matrix\n   - Set is_initialized_ to false\n\n2. **Implement ProcessMeasurement function**:\n   - Handle initialization for the first measurement\n   - Calculate time difference between current and previous measurements\n   - Call Prediction function with the time difference\n   - Call appropriate update function based on sensor type (UpdateLidar or UpdateRadar)\n\n3. **Implement Prediction function**:\n   - Generate sigma points\n   - Predict sigma points\n   - Calculate predicted mean and covariance\n\n4. **Implement UpdateLidar function**:\n   - Transform sigma points into measurement space\n   - Calculate mean and covariance of predicted measurement\n   - Calculate Kalman gain\n   - Update state and covariance\n\n5. **Implement UpdateRadar function**:\n   - Transform sigma points into measurement space (using non-linear radar measurement model)\n   - Calculate mean and covariance of predicted measurement\n   - Calculate Kalman gain\n   - Update state and covariance\n\nLet's start implementing these components:\n\n## Implementation\n\nLet's begin by implementing the UKF class:\n\n### 1. First, let's update the ukf.h file:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Note:\nView range expanded to meet minimum size of 500 lines. End line adjusted to last line of file (192).\n\nHere's the result of running `cat -n` on src/highway.h:\n     1\t/* \\author Aaron Brown */\n     2\t// Handle logic for creating traffic on highway and animating it\n     3\t\n     4\t#include \"render/render.h\"\n     5\t#include \"sensors/lidar.h\"\n     6\t#include \"tools.h\"\n     7\t\n     8\tclass Highway\n     9\t{\n    10\tpublic:\n    11\t\n    12\t\tstd::vector<Car> traffic;\n    13\t\tCar egoCar;\n    14\t\tTools tools;\n    15\t\tbool pass = true;\n    16\t\tstd::vector<double> rmseThreshold = {0.30,0.16,0.95,0.70};\n    17\t\tstd::vector<double> rmseFailLog = {0.0,0.0,0.0,0.0};\n    18\t\tLidar* lidar;\n    19\t\t\n    20\t\t// Parameters \n    21\t\t// --------------------------------\n    22\t\t// Set which cars to track with UKF\n    23\t\tstd::vector<bool> trackCars = {true,true,true};\n    24\t\t// Visualize sensor measurements\n    25\t\tbool visualize_lidar = true;\n    26\t\tbool visualize_radar = true;\n    27\t\tbool visualize_pcd = false;\n    28\t\t// Predict path in the future using UKF\n    29\t\tdouble projectedTime = 0;\n    30\t\tint projectedSteps = 0;\n    31\t\t// --------------------------------\n    32\t\n    33\t\tHighway(pcl::visualization::PCLVisualizer::Ptr& viewer)\n    34\t\t{\n    35\t\n    36\t\t\ttools = Tools();\n    37\t\t\n    38\t\t\tegoCar = Car(Vect3(0, 0, 0), Vect3(4, 2, 2), Color(0, 1, 0), 0, 0, 2, \"egoCar\");\n    39\t\t\t\n    40\t\t\tCar car1(Vect3(-10, 4, 0), Vect3(4, 2, 2), Color(0, 0, 1), 5, 0, 2, \"car1\");\n    41\t\t\t\n    42\t\t\tstd::vector<accuation> car1_instructions;\n    43\t\t\taccuation a = accuation(0.5*1e6, 0.5, 0.0);\n    44\t\t\tcar1_instructions.push_back(a);\n    45\t\t\ta = accuation(2.2*1e6, 0.0, -0.2);\n    46\t\t\tcar1_instructions.push_back(a);\n    47\t\t\ta = accuation(3.3*1e6, 0.0, 0.2);\n    48\t\t\tcar1_instructions.push_back(a);\n    49\t\t\ta = accuation(4.4*1e6, -2.0, 0.0);\n    50\t\t\tcar1_instructions.push_back(a);\n    51\t\t\n    52\t\t\tcar1.setInstructions(car1_instructions);\n    53\t\t\tif( trackCars[0] )\n    54\t\t\t{\n    55\t\t\t\tUKF ukf1;\n    56\t\t\t\tcar1.setUKF(ukf1);\n    57\t\t\t}\n    58\t\t\ttraffic.push_back(car1);\n    59\t\t\t\n    60\t\t\tCar car2(Vect3(25, -4, 0), Vect3(4, 2, 2), Color(0, 0, 1), -6, 0, 2, \"car2\");\n    61\t\t\tstd::vector<accuation> car2_instructions;\n    62\t\t\ta = accuation(4.0*1e6, 3.0, 0.0);\n    63\t\t\tcar2_instructions.push_back(a);\n    64\t\t\ta = accuation(8.0*1e6, 0.0, 0.0);\n    65\t\t\tcar2_instructions.push_back(a);\n    66\t\t\tcar2.setInstructions(car2_instructions);\n    67\t\t\tif( trackCars[1] )\n    68\t\t\t{\n    69\t\t\t\tUKF ukf2;\n    70\t\t\t\tcar2.setUKF(ukf2);\n    71\t\t\t}\n    72\t\t\ttraffic.push_back(car2);\n    73\t\t\n    74\t\t\tCar car3(Vect3(-12, 0, 0), Vect3(4, 2, 2), Color(0, 0, 1), 1, 0, 2, \"car3\");\n    75\t\t\tstd::vector<accuation> car3_instructions;\n    76\t\t\ta = accuation(0.5*1e6, 2.0, 1.0);\n    77\t\t\tcar3_instructions.push_back(a);\n    78\t\t\ta = accuation(1.0*1e6, 2.5, 0.0);\n    79\t\t\tcar3_instructions.push_back(a);\n    80\t\t\ta = accuation(3.2*1e6, 0.0, -1.0);\n    81\t\t\tcar3_instructions.push_back(a);\n    82\t\t\ta = accuation(3.3*1e6, 2.0, 0.0);\n    83\t\t\tcar3_instructions.push_back(a);\n    84\t\t\ta = accuation(4.5*1e6, 0.0, 0.0);\n    85\t\t\tcar3_instructions.push_back(a);\n    86\t\t\ta = accuation(5.5*1e6, -2.0, 0.0);\n    87\t\t\tcar3_instructions.push_back(a);\n    88\t\t\ta = accuation(7.5*1e6, 0.0, 0.0);\n    89\t\t\tcar3_instructions.push_back(a);\n    90\t\t\tcar3.setInstructions(car3_instructions);\n    91\t\t\tif( trackCars[2] )\n    92\t\t\t{\n    93\t\t\t\tUKF ukf3;\n    94\t\t\t\tcar3.setUKF(ukf3);\n    95\t\t\t}\n    96\t\t\ttraffic.push_back(car3);\n    97\t\n    98\t\t\tlidar = new Lidar(traffic,0);\n    99\t\t\n   100\t\t\t// render environment\n   101\t\t\trenderHighway(0,viewer);\n   102\t\t\tegoCar.render(viewer);\n   103\t\t\tcar1.render(viewer);\n   104\t\t\tcar2.render(viewer);\n   105\t\t\tcar3.render(viewer);\n   106\t\t}\n   107\t\t\n   108\t\tvoid stepHighway(double egoVelocity, long long timestamp, int frame_per_sec, pcl::visualization::PCLVisualizer::Ptr& viewer)\n   109\t\t{\n   110\t\n   111\t\t\tif(visualize_pcd)\n   112\t\t\t{\n   113\t\t\t\tpcl::PointCloud<pcl::PointXYZ>::Ptr trafficCloud = tools.loadPcd(\"../src/sensors/data/pcd/highway_\"+std::to_string(timestamp)+\".pcd\");\n   114\t\t\t\trenderPointCloud(viewer, trafficCloud, \"trafficCloud\", Color((float)184/256,(float)223/256,(float)252/256));\n   115\t\t\t}\n   116\t\t\t\n   117\t\n   118\t\t\t// render highway environment with poles\n   119\t\t\trenderHighway(egoVelocity*timestamp/1e6, viewer);\n   120\t\t\tegoCar.render(viewer);\n   121\t\t\t\n   122\t\t\tfor (int i = 0; i < traffic.size(); i++)\n   123\t\t\t{\n   124\t\t\t\ttraffic[i].move((double)1/frame_per_sec, timestamp);\n   125\t\t\t\tif(!visualize_pcd)\n   126\t\t\t\t\ttraffic[i].render(viewer);\n   127\t\t\t\t// Sense surrounding cars with lidar and radar\n   128\t\t\t\tif(trackCars[i])\n   129\t\t\t\t{\n   130\t\t\t\t\tVectorXd gt(4);\n   131\t\t\t\t\tgt << traffic[i].position.x, traffic[i].position.y, traffic[i].velocity*cos(traffic[i].angle), traffic[i].velocity*sin(traffic[i].angle);\n   132\t\t\t\t\ttools.ground_truth.push_back(gt);\n   133\t\t\t\t\ttools.lidarSense(traffic[i], viewer, timestamp, visualize_lidar);\n   134\t\t\t\t\ttools.radarSense(traffic[i], egoCar, viewer, timestamp, visualize_radar);\n   135\t\t\t\t\ttools.ukfResults(traffic[i],viewer, projectedTime, projectedSteps);\n   136\t\t\t\t\tVectorXd estimate(4);\n   137\t\t\t\t\tdouble v  = traffic[i].ukf.x_(2);\n   138\t    \t\t\tdouble yaw = traffic[i].ukf.x_(3);\n   139\t    \t\t\tdouble v1 = cos(yaw)*v;\n   140\t    \t\t\tdouble v2 = sin(yaw)*v;\n   141\t\t\t\t\testimate << traffic[i].ukf.x_[0], traffic[i].ukf.x_[1], v1, v2;\n   142\t\t\t\t\ttools.estimations.push_back(estimate);\n   143\t\t\n   144\t\t\t\t}\n   145\t\t\t}\n   146\t\t\tviewer->addText(\"Accuracy - RMSE:\", 30, 300, 20, 1, 1, 1, \"rmse\");\n   147\t\t\tVectorXd rmse = tools.CalculateRMSE(tools.estimations, tools.ground_truth);\n   148\t\t\tviewer->addText(\" X: \"+std::to_string(rmse[0]), 30, 275, 20, 1, 1, 1, \"rmse_x\");\n   149\t\t\tviewer->addText(\" Y: \"+std::to_string(rmse[1]), 30, 250, 20, 1, 1, 1, \"rmse_y\");\n   150\t\t\tviewer->addText(\"Vx: \"\t+std::to_string(rmse[2]), 30, 225, 20, 1, 1, 1, \"rmse_vx\");\n   151\t\t\tviewer->addText(\"Vy: \"\t+std::to_string(rmse[3]), 30, 200, 20, 1, 1, 1, \"rmse_vy\");\n   152\t\n   153\t\t\tif(timestamp > 1.0e6)\n   154\t\t\t{\n   155\t\n   156\t\t\t\tif(rmse[0] > rmseThreshold[0])\n   157\t\t\t\t{\n   158\t\t\t\t\trmseFailLog[0] = rmse[0];\n   159\t\t\t\t\tpass = false;\n   160\t\t\t\t}\n   161\t\t\t\tif(rmse[1] > rmseThreshold[1])\n   162\t\t\t\t{\n   163\t\t\t\t\trmseFailLog[1] = rmse[1];\n   164\t\t\t\t\tpass = false;\n   165\t\t\t\t}\n   166\t\t\t\tif(rmse[2] > rmseThreshold[2])\n   167\t\t\t\t{\n   168\t\t\t\t\trmseFailLog[2] = rmse[2];\n   169\t\t\t\t\tpass = false;\n   170\t\t\t\t}\n   171\t\t\t\tif(rmse[3] > rmseThreshold[3])\n   172\t\t\t\t{\n   173\t\t\t\t\trmseFailLog[3] = rmse[3];\n   174\t\t\t\t\tpass = false;\n   175\t\t\t\t}\n   176\t\t\t}\n   177\t\t\tif(!pass)\n   178\t\t\t{\n   179\t\t\t\tviewer->addText(\"RMSE Failed Threshold\", 30, 150, 20, 1, 0, 0, \"rmse_fail\");\n   180\t\t\t\tif(rmseFailLog[0] > 0)\n   181\t\t\t\t\tviewer->addText(\" X: \"+std::to_string(rmseFailLog[0]), 30, 125, 20, 1, 0, 0, \"rmse_fail_x\");\n   182\t\t\t\tif(rmseFailLog[1] > 0)\n   183\t\t\t\t\tviewer->addText(\" Y: \"+std::to_string(rmseFailLog[1]), 30, 100, 20, 1, 0, 0, \"rmse_fail_y\");\n   184\t\t\t\tif(rmseFailLog[2] > 0)\n   185\t\t\t\t\tviewer->addText(\"Vx: \"+std::to_string(rmseFailLog[2]), 30, 75, 20, 1, 0, 0, \"rmse_fail_vx\");\n   186\t\t\t\tif(rmseFailLog[3] > 0)\n   187\t\t\t\t\tviewer->addText(\"Vy: \"+std::to_string(rmseFailLog[3]), 30, 50, 20, 1, 0, 0, \"rmse_fail_vy\");\n   188\t\t\t}\n   189\t\t\t\n   190\t\t}\n   191\t\t\n   192\t};\nTotal lines in file: 192\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01LX5S2gnZArp8srvPwTAcnd"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:17:04.229Z","response_text":"Now I have a good understanding of the project structure. Let's implement the UKF algorithm in the `ukf.cpp` and `ukf.h` files.\n\n## Planning\n\nBased on the information gathered, here's my plan for implementing the Unscented Kalman Filter:\n\n1. **Complete the UKF class initialization in the constructor**:\n   - Set appropriate values for process noise parameters (std_a_ and std_yawdd_)\n   - Initialize state dimension (n_x_), augmented state dimension (n_aug_), and lambda_\n   - Initialize weights vector\n   - Initialize state vector (x_) and covariance matrix (P_)\n   - Initialize Xsig_pred_ matrix\n   - Set is_initialized_ to false\n\n2. **Implement ProcessMeasurement function**:\n   - Handle initialization for the first measurement\n   - Calculate time difference between current and previous measurements\n   - Call Prediction function with the time difference\n   - Call appropriate update function based on sensor type (UpdateLidar or UpdateRadar)\n\n3. **Implement Prediction function**:\n   - Generate sigma points\n   - Predict sigma points\n   - Calculate predicted mean and covariance\n\n4. **Implement UpdateLidar function**:\n   - Transform sigma points into measurement space\n   - Calculate mean and covariance of predicted measurement\n   - Calculate Kalman gain\n   - Update state and covariance\n\n5. **Implement UpdateRadar function**:\n   - Transform sigma points into measurement space (using non-linear radar measurement model)\n   - Calculate mean and covariance of predicted measurement\n   - Calculate Kalman gain\n   - Update state and covariance\n\nLet's start implementing these components:\n\n## Implementation\n\nLet's begin by implementing the UKF class:\n\n### 1. First, let's update the ukf.h file:\n","workspace_file_chunks":[]},{"status":"success","request_id":"df8322c6-5f08-47b0-9b93-a6a65ff4ff88","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_018tjAcAdzkg8hTCq4o1mjs9","tool_name":"str-replace-editor","input_json":"{\"command\": \"str_replace\", \"path\": \"src/ukf.cpp\", \"instruction_reminder\": \"ALWAYS BREAK DOWN EDITS INTO SMALLER CHUNKS OF AT MOST 200 LINES EACH.\", \"old_str_1\": \"#include \\\"ukf.h\\\"\\n#include \\\"Eigen/Dense\\\"\\n\\nusing Eigen::MatrixXd;\\nusing Eigen::VectorXd;\\n\\n/**\\n * Initializes Unscented Kalman filter\\n */\\nUKF::UKF() {\\n  // if this is false, laser measurements will be ignored (except during init)\\n  use_laser_ = true;\\n\\n  // if this is false, radar measurements will be ignored (except during init)\\n  use_radar_ = true;\\n\\n  // initial state vector\\n  x_ = VectorXd(5);\\n\\n  // initial covariance matrix\\n  P_ = MatrixXd(5, 5);\\n\\n  // Process noise standard deviation longitudinal acceleration in m/s^2\\n  std_a_ = 30;\\n\\n  // Process noise standard deviation yaw acceleration in rad/s^2\\n  std_yawdd_ = 30;\\n  \\n  /**\\n   * DO NOT MODIFY measurement noise values below.\\n   * These are provided by the sensor manufacturer.\\n   */\\n\\n  // Laser measurement noise standard deviation position1 in m\\n  std_laspx_ = 0.15;\\n\\n  // Laser measurement noise standard deviation position2 in m\\n  std_laspy_ = 0.15;\\n\\n  // Radar measurement noise standard deviation radius in m\\n  std_radr_ = 0.3;\\n\\n  // Radar measurement noise standard deviation angle in rad\\n  std_radphi_ = 0.03;\\n\\n  // Radar measurement noise standard deviation radius change in m/s\\n  std_radrd_ = 0.3;\\n  \\n  /**\\n   * End DO NOT MODIFY section for measurement noise values \\n   */\\n  \\n  /**\\n   * TODO: Complete the initialization. See ukf.h for other member properties.\\n   * Hint: one or more values initialized above might be wildly off...\\n   */\\n}\\n\\nUKF::~UKF() {}\", \"new_str_1\": \"#include \\\"ukf.h\\\"\\n#include \\\"Eigen/Dense\\\"\\n#include <iostream>\\n\\nusing Eigen::MatrixXd;\\nusing Eigen::VectorXd;\\nusing std::cout;\\nusing std::endl;\\n\\n/**\\n * Initializes Unscented Kalman filter\\n */\\nUKF::UKF() {\\n  // if this is false, laser measurements will be ignored (except during init)\\n  use_laser_ = true;\\n\\n  // if this is false, radar measurements will be ignored (except during init)\\n  use_radar_ = true;\\n\\n  // State dimension (px, py, v, yaw, yaw_rate)\\n  n_x_ = 5;\\n\\n  // Augmented state dimension (adds 2 noise terms)\\n  n_aug_ = n_x_ + 2;\\n\\n  // Number of sigma points\\n  n_sig_ = 2 * n_aug_ + 1;\\n\\n  // Sigma point spreading parameter\\n  lambda_ = 3 - n_aug_;\\n\\n  // initial state vector\\n  x_ = VectorXd::Zero(n_x_);\\n\\n  // initial covariance matrix\\n  P_ = MatrixXd::Identity(n_x_, n_x_);\\n\\n  // Predicted sigma points matrix\\n  Xsig_pred_ = MatrixXd(n_x_, n_sig_);\\n\\n  // Weights of sigma points\\n  weights_ = VectorXd(n_sig_);\\n  weights_(0) = lambda_ / (lambda_ + n_aug_);\\n  for (int i = 1; i < n_sig_; ++i) {\\n    weights_(i) = 0.5 / (lambda_ + n_aug_);\\n  }\\n\\n  // Process noise standard deviation longitudinal acceleration in m/s^2\\n  // Reduced from default 30 to a more reasonable value for cars\\n  std_a_ = 3.0;\\n\\n  // Process noise standard deviation yaw acceleration in rad/s^2\\n  // Reduced from default 30 to a more reasonable value for cars\\n  std_yawdd_ = 0.5;\\n  \\n  /**\\n   * DO NOT MODIFY measurement noise values below.\\n   * These are provided by the sensor manufacturer.\\n   */\\n\\n  // Laser measurement noise standard deviation position1 in m\\n  std_laspx_ = 0.15;\\n\\n  // Laser measurement noise standard deviation position2 in m\\n  std_laspy_ = 0.15;\\n\\n  // Radar measurement noise standard deviation radius in m\\n  std_radr_ = 0.3;\\n\\n  // Radar measurement noise standard deviation angle in rad\\n  std_radphi_ = 0.03;\\n\\n  // Radar measurement noise standard deviation radius change in m/s\\n  std_radrd_ = 0.3;\\n  \\n  /**\\n   * End DO NOT MODIFY section for measurement noise values \\n   */\\n  \\n  // Set initialization flag to false\\n  is_initialized_ = false;\\n\\n  // Set time to 0\\n  time_us_ = 0;\\n}\\n\\nUKF::~UKF() {}\", \"old_str_start_line_number_1\": 1, \"old_str_end_line_number_1\": 59}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"### 2. Now, let's implement the UKF class in ukf.cpp:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Successfully edited the file src/ukf.h.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n     1\t#ifndef UKF_H\n     2\t#define UKF_H\n     3\t\n     4\t#include \"Eigen/Dense\"\n     5\t#include \"measurement_package.h\"\n     6\t\n     7\tclass UKF {\n     8\t public:\n     9\t  /**\n    10\t   * Constructor\n    11\t   */\n    12\t  UKF();\n    13\t\n    14\t  /**\n    15\t   * Destructor\n    16\t   */\n    17\t  virtual ~UKF();\n    18\t\n    19\t  /**\n    20\t   * ProcessMeasurement\n    21\t   * @param meas_package The latest measurement data of either radar or laser\n    22\t   */\n    23\t  void ProcessMeasurement(MeasurementPackage meas_package);\n    24\t\n    25\t  /**\n    26\t   * Prediction Predicts sigma points, the state, and the state covariance\n    27\t   * matrix\n    28\t   * @param delta_t Time between k and k+1 in s\n    29\t   */\n    30\t  void Prediction(double delta_t);\n    31\t\n    32\t  /**\n    33\t   * Updates the state and the state covariance matrix using a laser measurement\n    34\t   * @param meas_package The measurement at k+1\n    35\t   */\n    36\t  void UpdateLidar(MeasurementPackage meas_package);\n    37\t\n    38\t  /**\n    39\t   * Updates the state and the state covariance matrix using a radar measurement\n    40\t   * @param meas_package The measurement at k+1\n    41\t   */\n    42\t  void UpdateRadar(MeasurementPackage meas_package);\n    43\t\n    44\t  /**\n    45\t   * Generates augmented sigma points\n    46\t   */\n    47\t  void GenerateAugmentedSigmaPoints(Eigen::MatrixXd* Xsig_out);\n    48\t\n    49\t  /**\n    50\t   * Predicts sigma points\n    51\t   * @param Xsig_aug Augmented sigma points\n    52\t   * @param delta_t Time between k and k+1 in s\n    53\t   */\n    54\t  void SigmaPointPrediction(const Eigen::MatrixXd& Xsig_aug, double delta_t);\n    55\t\n    56\t  /**\n    57\t   * Predicts mean and covariance\n    58\t   */\n    59\t  void PredictMeanAndCovariance();\n    60\t\n    61\t  /**\n    62\t   * Normalizes angle to be between -pi and pi\n    63\t   * @param angle Angle to normalize\n    64\t   * @return Normalized angle\n    65\t   */\n    66\t  double NormalizeAngle(double angle);\n    67\t\n    68\t  // initially set to false, set to true in first call of ProcessMeasurement\n    69\t  bool is_initialized_;\n    70\t\n    71\t  // if this is false, laser measurements will be ignored (except for init)\n    72\t  bool use_laser_;\n    73\t\n    74\t  // if this is false, radar measurements will be ignored (except for init)\n    75\t  bool use_radar_;\n    76\t\n    77\t  // state vector: [pos1 pos2 vel_abs yaw_angle yaw_rate] in SI units and rad\n    78\t  Eigen::VectorXd x_;\n    79\t\n    80\t  // state covariance matrix\n    81\t  Eigen::MatrixXd P_;\n    82\t\n    83\t  // predicted sigma points matrix\n    84\t  Eigen::MatrixXd Xsig_pred_;\n    85\t\n    86\t  // time when the state is true, in us\n    87\t  long long time_us_;\n    88\t\n    89\t  // Process noise standard deviation longitudinal acceleration in m/s^2\n    90\t  double std_a_;\n    91\t\n    92\t  // Process noise standard deviation yaw acceleration in rad/s^2\n    93\t  double std_yawdd_;\n    94\t\n    95\t  // Laser measurement noise standard deviation position1 in m\n    96\t  double std_laspx_;\n    97\t\n    98\t  // Laser measurement noise standard deviation position2 in m\n    99\t  double std_laspy_;\n   100\t\n   101\t  // Radar measurement noise standard deviation radius in m\n   102\t  double std_radr_;\n   103\t\n   104\t  // Radar measurement noise standard deviation angle in rad\n   105\t  double std_radphi_;\n   106\t\n   107\t  // Radar measurement noise standard deviation radius change in m/s\n   108\t  double std_radrd_ ;\n   109\t\n   110\t  // Weights of sigma points\n   111\t  Eigen::VectorXd weights_;\n   112\t\n   113\t  // State dimension\n   114\t  int n_x_;\n   115\t\n   116\t  // Augmented state dimension\n   117\t  int n_aug_;\n   118\t\n   119\t  // Sigma point spreading parameter\n   120\t  double lambda_;\n   121\t\n   122\t  // Number of sigma points\n   123\t  int n_sig_;\n   124\t};\n   125\t\n   126\t#endif  // UKF_H\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_0187H65goBWCecDxFjseMLK8"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:17:33.702Z","response_text":"### 2. Now, let's implement the UKF class in ukf.cpp:\n","workspace_file_chunks":[]},{"status":"success","request_id":"b42fbc22-fe75-4f69-8557-871507ea4ebf","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_018pqgYhSTu33QoF8Fz9pdX5","tool_name":"str-replace-editor","input_json":"{\"command\": \"str_replace\", \"path\": \"src/ukf.cpp\", \"instruction_reminder\": \"ALWAYS BREAK DOWN EDITS INTO SMALLER CHUNKS OF AT MOST 200 LINES EACH.\", \"old_str_1\": \"void UKF::ProcessMeasurement(MeasurementPackage meas_package) {\\n  /**\\n   * TODO: Complete this function! Make sure you switch between lidar and radar\\n   * measurements.\\n   */\\n}\", \"new_str_1\": \"void UKF::ProcessMeasurement(MeasurementPackage meas_package) {\\n  // Skip processing if the sensor type is disabled\\n  if ((meas_package.sensor_type_ == MeasurementPackage::RADAR && !use_radar_) ||\\n      (meas_package.sensor_type_ == MeasurementPackage::LASER && !use_laser_)) {\\n    return;\\n  }\\n\\n  // Initialize on first measurement\\n  if (!is_initialized_) {\\n    // First measurement\\n    if (meas_package.sensor_type_ == MeasurementPackage::RADAR) {\\n      // Convert radar from polar to cartesian coordinates\\n      double rho = meas_package.raw_measurements_(0);      // range\\n      double phi = meas_package.raw_measurements_(1);      // bearing\\n      double rho_dot = meas_package.raw_measurements_(2);  // velocity of rho\\n      \\n      // Convert from polar to cartesian coordinates\\n      double px = rho * cos(phi);\\n      double py = rho * sin(phi);\\n      \\n      // Initialize state with position from radar\\n      // We can't directly measure velocity, yaw, and yaw_rate from first radar measurement\\n      // so we initialize them to 0\\n      x_ << px, py, 0, 0, 0;\\n    }\\n    else if (meas_package.sensor_type_ == MeasurementPackage::LASER) {\\n      // Initialize state with position from lidar\\n      // We can't directly measure velocity, yaw, and yaw_rate from lidar\\n      // so we initialize them to 0\\n      x_ << meas_package.raw_measurements_(0), meas_package.raw_measurements_(1), 0, 0, 0;\\n    }\\n\\n    // Initialize covariance matrix with higher uncertainty for velocity, yaw, and yaw_rate\\n    P_.fill(0.0);\\n    P_(0, 0) = 1.0;  // px uncertainty\\n    P_(1, 1) = 1.0;  // py uncertainty\\n    P_(2, 2) = 1.0;  // v uncertainty\\n    P_(3, 3) = 1.0;  // yaw uncertainty\\n    P_(4, 4) = 1.0;  // yaw rate uncertainty\\n\\n    // Save timestamp\\n    time_us_ = meas_package.timestamp_;\\n    \\n    // Set initialization flag\\n    is_initialized_ = true;\\n    \\n    return;\\n  }\\n\\n  // Compute time difference in seconds\\n  double delta_t = (meas_package.timestamp_ - time_us_) / 1000000.0;\\n  time_us_ = meas_package.timestamp_;\\n\\n  // Predict\\n  Prediction(delta_t);\\n\\n  // Update based on sensor type\\n  if (meas_package.sensor_type_ == MeasurementPackage::RADAR && use_radar_) {\\n    UpdateRadar(meas_package);\\n  } \\n  else if (meas_package.sensor_type_ == MeasurementPackage::LASER && use_laser_) {\\n    UpdateLidar(meas_package);\\n  }\\n}\", \"old_str_start_line_number_1\": 89, \"old_str_end_line_number_1\": 93}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"### 3. Now, let's implement the ProcessMeasurement function:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n     1\t#include \"ukf.h\"\n     2\t#include \"Eigen/Dense\"\n     3\t#include <iostream>\n     4\t\n     5\tusing Eigen::MatrixXd;\n     6\tusing Eigen::VectorXd;\n     7\tusing std::cout;\n     8\tusing std::endl;\n     9\t\n    10\t/**\n    11\t * Initializes Unscented Kalman filter\n    12\t */\n    13\tUKF::UKF() {\n    14\t  // if this is false, laser measurements will be ignored (except during init)\n    15\t  use_laser_ = true;\n    16\t\n    17\t  // if this is false, radar measurements will be ignored (except during init)\n    18\t  use_radar_ = true;\n    19\t\n    20\t  // State dimension (px, py, v, yaw, yaw_rate)\n    21\t  n_x_ = 5;\n    22\t\n    23\t  // Augmented state dimension (adds 2 noise terms)\n    24\t  n_aug_ = n_x_ + 2;\n    25\t\n    26\t  // Number of sigma points\n    27\t  n_sig_ = 2 * n_aug_ + 1;\n    28\t\n    29\t  // Sigma point spreading parameter\n    30\t  lambda_ = 3 - n_aug_;\n    31\t\n    32\t  // initial state vector\n    33\t  x_ = VectorXd::Zero(n_x_);\n    34\t\n    35\t  // initial covariance matrix\n    36\t  P_ = MatrixXd::Identity(n_x_, n_x_);\n    37\t\n    38\t  // Predicted sigma points matrix\n    39\t  Xsig_pred_ = MatrixXd(n_x_, n_sig_);\n    40\t\n    41\t  // Weights of sigma points\n    42\t  weights_ = VectorXd(n_sig_);\n    43\t  weights_(0) = lambda_ / (lambda_ + n_aug_);\n    44\t  for (int i = 1; i < n_sig_; ++i) {\n    45\t    weights_(i) = 0.5 / (lambda_ + n_aug_);\n    46\t  }\n    47\t\n    48\t  // Process noise standard deviation longitudinal acceleration in m/s^2\n    49\t  // Reduced from default 30 to a more reasonable value for cars\n    50\t  std_a_ = 3.0;\n    51\t\n    52\t  // Process noise standard deviation yaw acceleration in rad/s^2\n    53\t  // Reduced from default 30 to a more reasonable value for cars\n    54\t  std_yawdd_ = 0.5;\n    55\t\n    56\t  /**\n    57\t   * DO NOT MODIFY measurement noise values below.\n    58\t   * These are provided by the sensor manufacturer.\n    59\t   */\n    60\t\n    61\t  // Laser measurement noise standard deviation position1 in m\n    62\t  std_laspx_ = 0.15;\n    63\t\n    64\t  // Laser measurement noise standard deviation position2 in m\n    65\t  std_laspy_ = 0.15;\n    66\t\n    67\t  // Radar measurement noise standard deviation radius in m\n    68\t  std_radr_ = 0.3;\n    69\t\n    70\t  // Radar measurement noise standard deviation angle in rad\n    71\t  std_radphi_ = 0.03;\n    72\t\n    73\t  // Radar measurement noise standard deviation radius change in m/s\n    74\t  std_radrd_ = 0.3;\n    75\t\n    76\t  /**\n    77\t   * End DO NOT MODIFY section for measurement noise values\n    78\t   */\n    79\t\n    80\t  // Set initialization flag to false\n    81\t  is_initialized_ = false;\n    82\t\n    83\t  // Set time to 0\n    84\t  time_us_ = 0;\n    85\t}\n    86\t\n    87\tUKF::~UKF() {}\n    88\t\n    89\tvoid UKF::ProcessMeasurement(MeasurementPackage meas_package) {\n    90\t  /**\n    91\t   * TODO: Complete this function! Make sure you switch between lidar and radar\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_018tjAcAdzkg8hTCq4o1mjs9"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:17:53.043Z","response_text":"### 3. Now, let's implement the ProcessMeasurement function:\n","workspace_file_chunks":[]},{"status":"success","request_id":"6a7a2665-8bb2-4ffc-a159-a450d7c99fa2","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_0122ogtVPPAUdba1sJ7DGv12","tool_name":"str-replace-editor","input_json":"{\"command\": \"str_replace\", \"path\": \"src/ukf.cpp\", \"instruction_reminder\": \"ALWAYS BREAK DOWN EDITS INTO SMALLER CHUNKS OF AT MOST 200 LINES EACH.\", \"old_str_1\": \"void UKF::Prediction(double delta_t) {\\n  /**\\n   * TODO: Complete this function! Estimate the object's location. \\n   * Modify the state vector, x_. Predict sigma points, the state, \\n   * and the state covariance matrix.\\n   */\\n}\", \"new_str_1\": \"void UKF::Prediction(double delta_t) {\\n  // Generate augmented sigma points\\n  MatrixXd Xsig_aug = MatrixXd(n_aug_, n_sig_);\\n  GenerateAugmentedSigmaPoints(&Xsig_aug);\\n  \\n  // Predict sigma points\\n  SigmaPointPrediction(Xsig_aug, delta_t);\\n  \\n  // Predict mean and covariance\\n  PredictMeanAndCovariance();\\n}\\n\\nvoid UKF::GenerateAugmentedSigmaPoints(MatrixXd* Xsig_out) {\\n  // Create augmented mean vector\\n  VectorXd x_aug = VectorXd(n_aug_);\\n  x_aug.head(n_x_) = x_;\\n  x_aug(n_x_) = 0;     // mean of process noise for longitudinal acceleration\\n  x_aug(n_x_ + 1) = 0; // mean of process noise for yaw acceleration\\n  \\n  // Create augmented covariance matrix\\n  MatrixXd P_aug = MatrixXd::Zero(n_aug_, n_aug_);\\n  P_aug.topLeftCorner(n_x_, n_x_) = P_;\\n  P_aug(n_x_, n_x_) = std_a_ * std_a_;\\n  P_aug(n_x_ + 1, n_x_ + 1) = std_yawdd_ * std_yawdd_;\\n  \\n  // Create square root matrix\\n  MatrixXd L = P_aug.llt().matrixL();\\n  \\n  // Create augmented sigma points\\n  MatrixXd Xsig_aug = MatrixXd(n_aug_, n_sig_);\\n  Xsig_aug.col(0) = x_aug;\\n  \\n  double sqrt_lambda_n_aug = sqrt(lambda_ + n_aug_);\\n  \\n  for (int i = 0; i < n_aug_; ++i) {\\n    Xsig_aug.col(i + 1) = x_aug + sqrt_lambda_n_aug * L.col(i);\\n    Xsig_aug.col(i + 1 + n_aug_) = x_aug - sqrt_lambda_n_aug * L.col(i);\\n  }\\n  \\n  *Xsig_out = Xsig_aug;\\n}\\n\\nvoid UKF::SigmaPointPrediction(const MatrixXd& Xsig_aug, double delta_t) {\\n  // Predict sigma points\\n  for (int i = 0; i < n_sig_; ++i) {\\n    // Extract values for better readability\\n    double p_x = Xsig_aug(0, i);\\n    double p_y = Xsig_aug(1, i);\\n    double v = Xsig_aug(2, i);\\n    double yaw = Xsig_aug(3, i);\\n    double yawd = Xsig_aug(4, i);\\n    double nu_a = Xsig_aug(5, i);\\n    double nu_yawdd = Xsig_aug(6, i);\\n    \\n    // Predicted state values\\n    double px_p, py_p;\\n    \\n    // Avoid division by zero\\n    if (fabs(yawd) > 0.001) {\\n      px_p = p_x + v / yawd * (sin(yaw + yawd * delta_t) - sin(yaw));\\n      py_p = p_y + v / yawd * (cos(yaw) - cos(yaw + yawd * delta_t));\\n    } else {\\n      px_p = p_x + v * delta_t * cos(yaw);\\n      py_p = p_y + v * delta_t * sin(yaw);\\n    }\\n    \\n    double v_p = v;\\n    double yaw_p = yaw + yawd * delta_t;\\n    double yawd_p = yawd;\\n    \\n    // Add noise\\n    px_p = px_p + 0.5 * nu_a * delta_t * delta_t * cos(yaw);\\n    py_p = py_p + 0.5 * nu_a * delta_t * delta_t * sin(yaw);\\n    v_p = v_p + nu_a * delta_t;\\n    yaw_p = yaw_p + 0.5 * nu_yawdd * delta_t * delta_t;\\n    yawd_p = yawd_p + nu_yawdd * delta_t;\\n    \\n    // Write predicted sigma point into right column\\n    Xsig_pred_(0, i) = px_p;\\n    Xsig_pred_(1, i) = py_p;\\n    Xsig_pred_(2, i) = v_p;\\n    Xsig_pred_(3, i) = yaw_p;\\n    Xsig_pred_(4, i) = yawd_p;\\n  }\\n}\\n\\nvoid UKF::PredictMeanAndCovariance() {\\n  // Predict state mean\\n  x_.fill(0.0);\\n  for (int i = 0; i < n_sig_; ++i) {\\n    x_ = x_ + weights_(i) * Xsig_pred_.col(i);\\n  }\\n  \\n  // Predict state covariance matrix\\n  P_.fill(0.0);\\n  for (int i = 0; i < n_sig_; ++i) {\\n    // State difference\\n    VectorXd x_diff = Xsig_pred_.col(i) - x_;\\n    \\n    // Angle normalization\\n    x_diff(3) = NormalizeAngle(x_diff(3));\\n    \\n    P_ = P_ + weights_(i) * x_diff * x_diff.transpose();\\n  }\\n}\\n\\ndouble UKF::NormalizeAngle(double angle) {\\n  while (angle > M_PI) angle -= 2.0 * M_PI;\\n  while (angle < -M_PI) angle += 2.0 * M_PI;\\n  return angle;\\n}\", \"old_str_start_line_number_1\": 154, \"old_str_end_line_number_1\": 159}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"### 4. Now, let's implement the helper functions for the Prediction step:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n    85\t}\n    86\t\n    87\tUKF::~UKF() {}\n    88\t\n    89\tvoid UKF::ProcessMeasurement(MeasurementPackage meas_package) {\n    90\t  // Skip processing if the sensor type is disabled\n    91\t  if ((meas_package.sensor_type_ == MeasurementPackage::RADAR && !use_radar_) ||\n    92\t      (meas_package.sensor_type_ == MeasurementPackage::LASER && !use_laser_)) {\n    93\t    return;\n    94\t  }\n    95\t\n    96\t  // Initialize on first measurement\n    97\t  if (!is_initialized_) {\n    98\t    // First measurement\n    99\t    if (meas_package.sensor_type_ == MeasurementPackage::RADAR) {\n   100\t      // Convert radar from polar to cartesian coordinates\n   101\t      double rho = meas_package.raw_measurements_(0);      // range\n   102\t      double phi = meas_package.raw_measurements_(1);      // bearing\n   103\t      double rho_dot = meas_package.raw_measurements_(2);  // velocity of rho\n   104\t\n   105\t      // Convert from polar to cartesian coordinates\n   106\t      double px = rho * cos(phi);\n   107\t      double py = rho * sin(phi);\n   108\t\n   109\t      // Initialize state with position from radar\n   110\t      // We can't directly measure velocity, yaw, and yaw_rate from first radar measurement\n   111\t      // so we initialize them to 0\n   112\t      x_ << px, py, 0, 0, 0;\n   113\t    }\n   114\t    else if (meas_package.sensor_type_ == MeasurementPackage::LASER) {\n   115\t      // Initialize state with position from lidar\n   116\t      // We can't directly measure velocity, yaw, and yaw_rate from lidar\n   117\t      // so we initialize them to 0\n   118\t      x_ << meas_package.raw_measurements_(0), meas_package.raw_measurements_(1), 0, 0, 0;\n   119\t    }\n   120\t\n   121\t    // Initialize covariance matrix with higher uncertainty for velocity, yaw, and yaw_rate\n   122\t    P_.fill(0.0);\n   123\t    P_(0, 0) = 1.0;  // px uncertainty\n   124\t    P_(1, 1) = 1.0;  // py uncertainty\n   125\t    P_(2, 2) = 1.0;  // v uncertainty\n   126\t    P_(3, 3) = 1.0;  // yaw uncertainty\n   127\t    P_(4, 4) = 1.0;  // yaw rate uncertainty\n   128\t\n   129\t    // Save timestamp\n   130\t    time_us_ = meas_package.timestamp_;\n   131\t\n   132\t    // Set initialization flag\n   133\t    is_initialized_ = true;\n   134\t\n   135\t    return;\n   136\t  }\n   137\t\n   138\t  // Compute time difference in seconds\n   139\t  double delta_t = (meas_package.timestamp_ - time_us_) / 1000000.0;\n   140\t  time_us_ = meas_package.timestamp_;\n   141\t\n   142\t  // Predict\n   143\t  Prediction(delta_t);\n   144\t\n   145\t  // Update based on sensor type\n   146\t  if (meas_package.sensor_type_ == MeasurementPackage::RADAR && use_radar_) {\n   147\t    UpdateRadar(meas_package);\n   148\t  }\n   149\t  else if (meas_package.sensor_type_ == MeasurementPackage::LASER && use_laser_) {\n   150\t    UpdateLidar(meas_package);\n   151\t  }\n   152\t}\n   153\t\n   154\tvoid UKF::Prediction(double delta_t) {\n   155\t  /**\n   156\t   * TODO: Complete this function! Estimate the object's location.\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_018pqgYhSTu33QoF8Fz9pdX5"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:18:10.127Z","response_text":"### 4. Now, let's implement the helper functions for the Prediction step:\n","workspace_file_chunks":[]},{"status":"success","request_id":"a8c8c78c-d784-4c15-8750-173aad611876","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_0163EZ2oC7XMo5oE8LXjAC4C","tool_name":"str-replace-editor","input_json":"{\"command\": \"str_replace\", \"path\": \"src/ukf.cpp\", \"instruction_reminder\": \"ALWAYS BREAK DOWN EDITS INTO SMALLER CHUNKS OF AT MOST 200 LINES EACH.\", \"old_str_1\": \"void UKF::UpdateLidar(MeasurementPackage meas_package) {\\n  /**\\n   * TODO: Complete this function! Use lidar data to update the belief \\n   * about the object's position. Modify the state vector, x_, and \\n   * covariance, P_.\\n   * You can also calculate the lidar NIS, if desired.\\n   */\\n}\", \"new_str_1\": \"void UKF::UpdateLidar(MeasurementPackage meas_package) {\\n  // Set measurement dimension (px, py)\\n  int n_z = 2;\\n  \\n  // Create matrix for sigma points in measurement space\\n  MatrixXd Zsig = MatrixXd(n_z, n_sig_);\\n  \\n  // Mean predicted measurement\\n  VectorXd z_pred = VectorXd(n_z);\\n  \\n  // Measurement covariance matrix S\\n  MatrixXd S = MatrixXd(n_z, n_z);\\n  \\n  // Transform sigma points into measurement space\\n  for (int i = 0; i < n_sig_; ++i) {\\n    // Extract values for better readability\\n    double p_x = Xsig_pred_(0, i);\\n    double p_y = Xsig_pred_(1, i);\\n    \\n    // Measurement model - lidar directly measures px and py\\n    Zsig(0, i) = p_x;  // px\\n    Zsig(1, i) = p_y;  // py\\n  }\\n  \\n  // Calculate mean predicted measurement\\n  z_pred.fill(0.0);\\n  for (int i = 0; i < n_sig_; ++i) {\\n    z_pred = z_pred + weights_(i) * Zsig.col(i);\\n  }\\n  \\n  // Calculate innovation covariance matrix S\\n  S.fill(0.0);\\n  for (int i = 0; i < n_sig_; ++i) {\\n    // Residual\\n    VectorXd z_diff = Zsig.col(i) - z_pred;\\n    \\n    S = S + weights_(i) * z_diff * z_diff.transpose();\\n  }\\n  \\n  // Add measurement noise covariance matrix\\n  MatrixXd R = MatrixXd(n_z, n_z);\\n  R << std_laspx_ * std_laspx_, 0,\\n       0, std_laspy_ * std_laspy_;\\n  S = S + R;\\n  \\n  // Create matrix for cross correlation Tc\\n  MatrixXd Tc = MatrixXd(n_x_, n_z);\\n  \\n  // Calculate cross correlation matrix\\n  Tc.fill(0.0);\\n  for (int i = 0; i < n_sig_; ++i) {\\n    // Residual\\n    VectorXd z_diff = Zsig.col(i) - z_pred;\\n    \\n    // State difference\\n    VectorXd x_diff = Xsig_pred_.col(i) - x_;\\n    // Angle normalization\\n    x_diff(3) = NormalizeAngle(x_diff(3));\\n    \\n    Tc = Tc + weights_(i) * x_diff * z_diff.transpose();\\n  }\\n  \\n  // Kalman gain K\\n  MatrixXd K = Tc * S.inverse();\\n  \\n  // Residual\\n  VectorXd z = meas_package.raw_measurements_;\\n  VectorXd z_diff = z - z_pred;\\n  \\n  // Update state mean and covariance matrix\\n  x_ = x_ + K * z_diff;\\n  P_ = P_ - K * S * K.transpose();\\n  \\n  // Calculate NIS (Normalized Innovation Squared)\\n  double NIS_lidar = z_diff.transpose() * S.inverse() * z_diff;\\n}\", \"old_str_start_line_number_1\": 266, \"old_str_end_line_number_1\": 272}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"### 5. Now, let's implement the UpdateLidar function:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n   150\t    UpdateLidar(meas_package);\n   151\t  }\n   152\t}\n   153\t\n   154\tvoid UKF::Prediction(double delta_t) {\n   155\t  // Generate augmented sigma points\n   156\t  MatrixXd Xsig_aug = MatrixXd(n_aug_, n_sig_);\n   157\t  GenerateAugmentedSigmaPoints(&Xsig_aug);\n   158\t\n   159\t  // Predict sigma points\n   160\t  SigmaPointPrediction(Xsig_aug, delta_t);\n   161\t\n   162\t  // Predict mean and covariance\n   163\t  PredictMeanAndCovariance();\n   164\t}\n   165\t\n   166\tvoid UKF::GenerateAugmentedSigmaPoints(MatrixXd* Xsig_out) {\n   167\t  // Create augmented mean vector\n   168\t  VectorXd x_aug = VectorXd(n_aug_);\n   169\t  x_aug.head(n_x_) = x_;\n   170\t  x_aug(n_x_) = 0;     // mean of process noise for longitudinal acceleration\n   171\t  x_aug(n_x_ + 1) = 0; // mean of process noise for yaw acceleration\n   172\t\n   173\t  // Create augmented covariance matrix\n   174\t  MatrixXd P_aug = MatrixXd::Zero(n_aug_, n_aug_);\n   175\t  P_aug.topLeftCorner(n_x_, n_x_) = P_;\n   176\t  P_aug(n_x_, n_x_) = std_a_ * std_a_;\n   177\t  P_aug(n_x_ + 1, n_x_ + 1) = std_yawdd_ * std_yawdd_;\n   178\t\n   179\t  // Create square root matrix\n   180\t  MatrixXd L = P_aug.llt().matrixL();\n   181\t\n   182\t  // Create augmented sigma points\n   183\t  MatrixXd Xsig_aug = MatrixXd(n_aug_, n_sig_);\n   184\t  Xsig_aug.col(0) = x_aug;\n   185\t\n   186\t  double sqrt_lambda_n_aug = sqrt(lambda_ + n_aug_);\n   187\t\n   188\t  for (int i = 0; i < n_aug_; ++i) {\n   189\t    Xsig_aug.col(i + 1) = x_aug + sqrt_lambda_n_aug * L.col(i);\n   190\t    Xsig_aug.col(i + 1 + n_aug_) = x_aug - sqrt_lambda_n_aug * L.col(i);\n   191\t  }\n   192\t\n   193\t  *Xsig_out = Xsig_aug;\n   194\t}\n   195\t\n   196\tvoid UKF::SigmaPointPrediction(const MatrixXd& Xsig_aug, double delta_t) {\n   197\t  // Predict sigma points\n   198\t  for (int i = 0; i < n_sig_; ++i) {\n   199\t    // Extract values for better readability\n   200\t    double p_x = Xsig_aug(0, i);\n   201\t    double p_y = Xsig_aug(1, i);\n   202\t    double v = Xsig_aug(2, i);\n   203\t    double yaw = Xsig_aug(3, i);\n   204\t    double yawd = Xsig_aug(4, i);\n   205\t    double nu_a = Xsig_aug(5, i);\n   206\t    double nu_yawdd = Xsig_aug(6, i);\n   207\t\n   208\t    // Predicted state values\n   209\t    double px_p, py_p;\n   210\t\n   211\t    // Avoid division by zero\n   212\t    if (fabs(yawd) > 0.001) {\n   213\t      px_p = p_x + v / yawd * (sin(yaw + yawd * delta_t) - sin(yaw));\n   214\t      py_p = p_y + v / yawd * (cos(yaw) - cos(yaw + yawd * delta_t));\n   215\t    } else {\n   216\t      px_p = p_x + v * delta_t * cos(yaw);\n   217\t      py_p = p_y + v * delta_t * sin(yaw);\n   218\t    }\n   219\t\n   220\t    double v_p = v;\n   221\t    double yaw_p = yaw + yawd * delta_t;\n   222\t    double yawd_p = yawd;\n   223\t\n   224\t    // Add noise\n   225\t    px_p = px_p + 0.5 * nu_a * delta_t * delta_t * cos(yaw);\n   226\t    py_p = py_p + 0.5 * nu_a * delta_t * delta_t * sin(yaw);\n   227\t    v_p = v_p + nu_a * delta_t;\n   228\t    yaw_p = yaw_p + 0.5 * nu_yawdd * delta_t * delta_t;\n   229\t    yawd_p = yawd_p + nu_yawdd * delta_t;\n   230\t\n   231\t    // Write predicted sigma point into right column\n   232\t    Xsig_pred_(0, i) = px_p;\n   233\t    Xsig_pred_(1, i) = py_p;\n   234\t    Xsig_pred_(2, i) = v_p;\n   235\t    Xsig_pred_(3, i) = yaw_p;\n   236\t    Xsig_pred_(4, i) = yawd_p;\n   237\t  }\n   238\t}\n   239\t\n   240\tvoid UKF::PredictMeanAndCovariance() {\n   241\t  // Predict state mean\n   242\t  x_.fill(0.0);\n   243\t  for (int i = 0; i < n_sig_; ++i) {\n   244\t    x_ = x_ + weights_(i) * Xsig_pred_.col(i);\n   245\t  }\n   246\t\n   247\t  // Predict state covariance matrix\n   248\t  P_.fill(0.0);\n   249\t  for (int i = 0; i < n_sig_; ++i) {\n   250\t    // State difference\n   251\t    VectorXd x_diff = Xsig_pred_.col(i) - x_;\n   252\t\n   253\t    // Angle normalization\n   254\t    x_diff(3) = NormalizeAngle(x_diff(3));\n   255\t\n   256\t    P_ = P_ + weights_(i) * x_diff * x_diff.transpose();\n   257\t  }\n   258\t}\n   259\t\n   260\tdouble UKF::NormalizeAngle(double angle) {\n   261\t  while (angle > M_PI) angle -= 2.0 * M_PI;\n   262\t  while (angle < -M_PI) angle += 2.0 * M_PI;\n   263\t  return angle;\n   264\t}\n   265\t\n   266\tvoid UKF::UpdateLidar(MeasurementPackage meas_package) {\n   267\t  /**\n   268\t   * TODO: Complete this function! Use lidar data to update the belief\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_0122ogtVPPAUdba1sJ7DGv12"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:18:33.539Z","response_text":"### 5. Now, let's implement the UpdateLidar function:\n","workspace_file_chunks":[]},{"status":"success","request_id":"516c33ed-f210-4995-9d17-a45cc26614df","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01JFt9kd6EeQyuJzWfomHP8o","tool_name":"str-replace-editor","input_json":"{\"command\": \"str_replace\", \"path\": \"src/ukf.cpp\", \"instruction_reminder\": \"ALWAYS BREAK DOWN EDITS INTO SMALLER CHUNKS OF AT MOST 200 LINES EACH.\", \"old_str_1\": \"void UKF::UpdateRadar(MeasurementPackage meas_package) {\\n  /**\\n   * TODO: Complete this function! Use radar data to update the belief \\n   * about the object's position. Modify the state vector, x_, and \\n   * covariance, P_.\\n   * You can also calculate the radar NIS, if desired.\\n   */\\n}\", \"new_str_1\": \"void UKF::UpdateRadar(MeasurementPackage meas_package) {\\n  // Set measurement dimension (r, phi, r_dot)\\n  int n_z = 3;\\n  \\n  // Create matrix for sigma points in measurement space\\n  MatrixXd Zsig = MatrixXd(n_z, n_sig_);\\n  \\n  // Mean predicted measurement\\n  VectorXd z_pred = VectorXd(n_z);\\n  \\n  // Measurement covariance matrix S\\n  MatrixXd S = MatrixXd(n_z, n_z);\\n  \\n  // Transform sigma points into measurement space\\n  for (int i = 0; i < n_sig_; ++i) {\\n    // Extract values for better readability\\n    double p_x = Xsig_pred_(0, i);\\n    double p_y = Xsig_pred_(1, i);\\n    double v = Xsig_pred_(2, i);\\n    double yaw = Xsig_pred_(3, i);\\n    \\n    double v1 = cos(yaw) * v;\\n    double v2 = sin(yaw) * v;\\n    \\n    // Measurement model\\n    double rho = sqrt(p_x * p_x + p_y * p_y);                // r\\n    double phi = atan2(p_y, p_x);                            // phi\\n    double rho_dot = (p_x * v1 + p_y * v2) / (rho + 1e-6);   // r_dot (avoid division by zero)\\n    \\n    Zsig(0, i) = rho;\\n    Zsig(1, i) = phi;\\n    Zsig(2, i) = rho_dot;\\n  }\\n  \\n  // Calculate mean predicted measurement\\n  z_pred.fill(0.0);\\n  for (int i = 0; i < n_sig_; ++i) {\\n    z_pred = z_pred + weights_(i) * Zsig.col(i);\\n  }\\n  \\n  // Calculate innovation covariance matrix S\\n  S.fill(0.0);\\n  for (int i = 0; i < n_sig_; ++i) {\\n    // Residual\\n    VectorXd z_diff = Zsig.col(i) - z_pred;\\n    \\n    // Angle normalization\\n    z_diff(1) = NormalizeAngle(z_diff(1));\\n    \\n    S = S + weights_(i) * z_diff * z_diff.transpose();\\n  }\\n  \\n  // Add measurement noise covariance matrix\\n  MatrixXd R = MatrixXd(n_z, n_z);\\n  R << std_radr_ * std_radr_, 0, 0,\\n       0, std_radphi_ * std_radphi_, 0,\\n       0, 0, std_radrd_ * std_radrd_;\\n  S = S + R;\\n  \\n  // Create matrix for cross correlation Tc\\n  MatrixXd Tc = MatrixXd(n_x_, n_z);\\n  \\n  // Calculate cross correlation matrix\\n  Tc.fill(0.0);\\n  for (int i = 0; i < n_sig_; ++i) {\\n    // Residual\\n    VectorXd z_diff = Zsig.col(i) - z_pred;\\n    // Angle normalization\\n    z_diff(1) = NormalizeAngle(z_diff(1));\\n    \\n    // State difference\\n    VectorXd x_diff = Xsig_pred_.col(i) - x_;\\n    // Angle normalization\\n    x_diff(3) = NormalizeAngle(x_diff(3));\\n    \\n    Tc = Tc + weights_(i) * x_diff * z_diff.transpose();\\n  }\\n  \\n  // Kalman gain K\\n  MatrixXd K = Tc * S.inverse();\\n  \\n  // Residual\\n  VectorXd z = meas_package.raw_measurements_;\\n  VectorXd z_diff = z - z_pred;\\n  \\n  // Angle normalization\\n  z_diff(1) = NormalizeAngle(z_diff(1));\\n  \\n  // Update state mean and covariance matrix\\n  x_ = x_ + K * z_diff;\\n  P_ = P_ - K * S * K.transpose();\\n  \\n  // Calculate NIS (Normalized Innovation Squared)\\n  double NIS_radar = z_diff.transpose() * S.inverse() * z_diff;\\n}\", \"old_str_start_line_number_1\": 343, \"old_str_end_line_number_1\": 349}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"### 6. Finally, let's implement the UpdateRadar function:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n   262\t  while (angle < -M_PI) angle += 2.0 * M_PI;\n   263\t  return angle;\n   264\t}\n   265\t\n   266\tvoid UKF::UpdateLidar(MeasurementPackage meas_package) {\n   267\t  // Set measurement dimension (px, py)\n   268\t  int n_z = 2;\n   269\t\n   270\t  // Create matrix for sigma points in measurement space\n   271\t  MatrixXd Zsig = MatrixXd(n_z, n_sig_);\n   272\t\n   273\t  // Mean predicted measurement\n   274\t  VectorXd z_pred = VectorXd(n_z);\n   275\t\n   276\t  // Measurement covariance matrix S\n   277\t  MatrixXd S = MatrixXd(n_z, n_z);\n   278\t\n   279\t  // Transform sigma points into measurement space\n   280\t  for (int i = 0; i < n_sig_; ++i) {\n   281\t    // Extract values for better readability\n   282\t    double p_x = Xsig_pred_(0, i);\n   283\t    double p_y = Xsig_pred_(1, i);\n   284\t\n   285\t    // Measurement model - lidar directly measures px and py\n   286\t    Zsig(0, i) = p_x;  // px\n   287\t    Zsig(1, i) = p_y;  // py\n   288\t  }\n   289\t\n   290\t  // Calculate mean predicted measurement\n   291\t  z_pred.fill(0.0);\n   292\t  for (int i = 0; i < n_sig_; ++i) {\n   293\t    z_pred = z_pred + weights_(i) * Zsig.col(i);\n   294\t  }\n   295\t\n   296\t  // Calculate innovation covariance matrix S\n   297\t  S.fill(0.0);\n   298\t  for (int i = 0; i < n_sig_; ++i) {\n   299\t    // Residual\n   300\t    VectorXd z_diff = Zsig.col(i) - z_pred;\n   301\t\n   302\t    S = S + weights_(i) * z_diff * z_diff.transpose();\n   303\t  }\n   304\t\n   305\t  // Add measurement noise covariance matrix\n   306\t  MatrixXd R = MatrixXd(n_z, n_z);\n   307\t  R << std_laspx_ * std_laspx_, 0,\n   308\t       0, std_laspy_ * std_laspy_;\n   309\t  S = S + R;\n   310\t\n   311\t  // Create matrix for cross correlation Tc\n   312\t  MatrixXd Tc = MatrixXd(n_x_, n_z);\n   313\t\n   314\t  // Calculate cross correlation matrix\n   315\t  Tc.fill(0.0);\n   316\t  for (int i = 0; i < n_sig_; ++i) {\n   317\t    // Residual\n   318\t    VectorXd z_diff = Zsig.col(i) - z_pred;\n   319\t\n   320\t    // State difference\n   321\t    VectorXd x_diff = Xsig_pred_.col(i) - x_;\n   322\t    // Angle normalization\n   323\t    x_diff(3) = NormalizeAngle(x_diff(3));\n   324\t\n   325\t    Tc = Tc + weights_(i) * x_diff * z_diff.transpose();\n   326\t  }\n   327\t\n   328\t  // Kalman gain K\n   329\t  MatrixXd K = Tc * S.inverse();\n   330\t\n   331\t  // Residual\n   332\t  VectorXd z = meas_package.raw_measurements_;\n   333\t  VectorXd z_diff = z - z_pred;\n   334\t\n   335\t  // Update state mean and covariance matrix\n   336\t  x_ = x_ + K * z_diff;\n   337\t  P_ = P_ - K * S * K.transpose();\n   338\t\n   339\t  // Calculate NIS (Normalized Innovation Squared)\n   340\t  double NIS_lidar = z_diff.transpose() * S.inverse() * z_diff;\n   341\t}\n   342\t\n   343\tvoid UKF::UpdateRadar(MeasurementPackage meas_package) {\n   344\t  /**\n   345\t   * TODO: Complete this function! Use radar data to update the belief\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_0163EZ2oC7XMo5oE8LXjAC4C"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:18:50.075Z","response_text":"### 6. Finally, let's implement the UpdateRadar function:\n","workspace_file_chunks":[]},{"status":"success","request_id":"ab965853-990c-48c1-be52-e7f3ce3b7bf9","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_017s5ZD8fmVfQV5KJeZQxcTn","tool_name":"launch-process","input_json":"{\"command\": \"mkdir -p build && cd build && cmake .. && make\", \"wait\": true, \"max_wait_seconds\": 300}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"## Verification and Testing\n\nNow that we've implemented the UKF algorithm, let's build and test it to make sure it works correctly.\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n   339\t  // Calculate NIS (Normalized Innovation Squared)\n   340\t  double NIS_lidar = z_diff.transpose() * S.inverse() * z_diff;\n   341\t}\n   342\t\n   343\tvoid UKF::UpdateRadar(MeasurementPackage meas_package) {\n   344\t  // Set measurement dimension (r, phi, r_dot)\n   345\t  int n_z = 3;\n   346\t\n   347\t  // Create matrix for sigma points in measurement space\n   348\t  MatrixXd Zsig = MatrixXd(n_z, n_sig_);\n   349\t\n   350\t  // Mean predicted measurement\n   351\t  VectorXd z_pred = VectorXd(n_z);\n   352\t\n   353\t  // Measurement covariance matrix S\n   354\t  MatrixXd S = MatrixXd(n_z, n_z);\n   355\t\n   356\t  // Transform sigma points into measurement space\n   357\t  for (int i = 0; i < n_sig_; ++i) {\n   358\t    // Extract values for better readability\n   359\t    double p_x = Xsig_pred_(0, i);\n   360\t    double p_y = Xsig_pred_(1, i);\n   361\t    double v = Xsig_pred_(2, i);\n   362\t    double yaw = Xsig_pred_(3, i);\n   363\t\n   364\t    double v1 = cos(yaw) * v;\n   365\t    double v2 = sin(yaw) * v;\n   366\t\n   367\t    // Measurement model\n   368\t    double rho = sqrt(p_x * p_x + p_y * p_y);                // r\n   369\t    double phi = atan2(p_y, p_x);                            // phi\n   370\t    double rho_dot = (p_x * v1 + p_y * v2) / (rho + 1e-6);   // r_dot (avoid division by zero)\n   371\t\n   372\t    Zsig(0, i) = rho;\n   373\t    Zsig(1, i) = phi;\n   374\t    Zsig(2, i) = rho_dot;\n   375\t  }\n   376\t\n   377\t  // Calculate mean predicted measurement\n   378\t  z_pred.fill(0.0);\n   379\t  for (int i = 0; i < n_sig_; ++i) {\n   380\t    z_pred = z_pred + weights_(i) * Zsig.col(i);\n   381\t  }\n   382\t\n   383\t  // Calculate innovation covariance matrix S\n   384\t  S.fill(0.0);\n   385\t  for (int i = 0; i < n_sig_; ++i) {\n   386\t    // Residual\n   387\t    VectorXd z_diff = Zsig.col(i) - z_pred;\n   388\t\n   389\t    // Angle normalization\n   390\t    z_diff(1) = NormalizeAngle(z_diff(1));\n   391\t\n   392\t    S = S + weights_(i) * z_diff * z_diff.transpose();\n   393\t  }\n   394\t\n   395\t  // Add measurement noise covariance matrix\n   396\t  MatrixXd R = MatrixXd(n_z, n_z);\n   397\t  R << std_radr_ * std_radr_, 0, 0,\n   398\t       0, std_radphi_ * std_radphi_, 0,\n   399\t       0, 0, std_radrd_ * std_radrd_;\n   400\t  S = S + R;\n   401\t\n   402\t  // Create matrix for cross correlation Tc\n   403\t  MatrixXd Tc = MatrixXd(n_x_, n_z);\n   404\t\n   405\t  // Calculate cross correlation matrix\n   406\t  Tc.fill(0.0);\n   407\t  for (int i = 0; i < n_sig_; ++i) {\n   408\t    // Residual\n   409\t    VectorXd z_diff = Zsig.col(i) - z_pred;\n   410\t    // Angle normalization\n   411\t    z_diff(1) = NormalizeAngle(z_diff(1));\n   412\t\n   413\t    // State difference\n   414\t    VectorXd x_diff = Xsig_pred_.col(i) - x_;\n   415\t    // Angle normalization\n   416\t    x_diff(3) = NormalizeAngle(x_diff(3));\n   417\t\n   418\t    Tc = Tc + weights_(i) * x_diff * z_diff.transpose();\n   419\t  }\n   420\t\n   421\t  // Kalman gain K\n   422\t  MatrixXd K = Tc * S.inverse();\n   423\t\n   424\t  // Residual\n   425\t  VectorXd z = meas_package.raw_measurements_;\n   426\t  VectorXd z_diff = z - z_pred;\n   427\t\n   428\t  // Angle normalization\n   429\t  z_diff(1) = NormalizeAngle(z_diff(1));\n   430\t\n   431\t  // Update state mean and covariance matrix\n   432\t  x_ = x_ + K * z_diff;\n   433\t  P_ = P_ - K * S * K.transpose();\n   434\t\n   435\t  // Calculate NIS (Normalized Innovation Squared)\n   436\t  double NIS_radar = z_diff.transpose() * S.inverse() * z_diff;\n   437\t}\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01JFt9kd6EeQyuJzWfomHP8o"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:19:09.064Z","response_text":"## Verification and Testing\n\nNow that we've implemented the UKF algorithm, let's build and test it to make sure it works correctly.\n","workspace_file_chunks":[]},{"status":"success","request_id":"99866c58-8ba5-46d9-8791-f17ca4dd3652","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01MEoQGkGpzZ3Nd6QekGBd1R","tool_name":"launch-process","input_json":"{\"command\": \"sudo apt-get update && sudo apt-get install -y libpcl-dev\", \"wait\": true, \"max_wait_seconds\": 300}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"I see there's an issue with the build process. The system is missing the PCL (Point Cloud Library) package which is required for this project. Let's fix this by installing the necessary dependencies.\n\n## Installing PCL Dependencies\n\nLet's install the PCL library first:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here are the results from executing the command.\n        <return-code>\n        1\n        </return-code>\n        <stdout>\n        \u001b[0mCMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):\n  Compatibility with CMake < 3.5 will be removed from a future version of\n  CMake.\n\n  Update the VERSION argument <min> value or use a ...<max> suffix to tell\n  CMake that the project does not need compatibility with older versions.\n\n\u001b[0m\n-- The C compiler identification is GNU 13.3.0\n-- The CXX compiler identification is GNU 13.3.0\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working C compiler: /usr/bin/cc - skipped\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Check for working CXX compiler: /usr/bin/c++ - skipped\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n\u001b[31mCMake Error at CMakeLists.txt:10 (find_package):\n  By not providing \"FindPCL.cmake\" in CMAKE_MODULE_PATH this project has\n  asked CMake to find a package configuration file provided by \"PCL\", but\n  CMake did not find one.\n\n  Could not find a package configuration file provided by \"PCL\" (requested\n  version 1.2) with any of the following names:\n\n    PCLConfig.cmake\n    pcl-config.cmake\n\n  Add the installation prefix of \"PCL\" to CMAKE_PREFIX_PATH or set \"PCL_DIR\"\n  to a directory containing one of the above files.  If \"PCL\" provides a\n  separate development package or SDK, be sure it has been installed.\n\n\u001b[0m\n-- Configuring incomplete, errors occurred!\n\n        </stdout>\n        <stderr>\n        \n        </stderr>","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_017s5ZD8fmVfQV5KJeZQxcTn"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":34,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:19:31.536Z","response_text":"I see there's an issue with the build process. The system is missing the PCL (Point Cloud Library) package which is required for this project. Let's fix this by installing the necessary dependencies.\n\n## Installing PCL Dependencies\n\nLet's install the PCL library first:\n","workspace_file_chunks":[]},{"status":"success","request_id":"5ddb73a9-b353-4ed7-af99-f303fcef3969","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01KFjagyi4qDjsFzJHLY2T5M","tool_name":"launch-process","input_json":"{\"command\": \"mkdir -p build && cd build && cmake .. && make\", \"wait\": true, \"max_wait_seconds\": 300}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Now that we've installed the PCL library, let's try building the project again:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here are the results from executing the command.\n        <return-code>\n        0\n        </return-code>\n        <stdout>\n        [sudo] password for krillavilla: ****************\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\n\n0% [Working]\n            \nHit:1 https://downloads.1password.com/linux/debian/amd64 stable InRelease\n\n0% [Connecting to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Connecting to repository.mullvad.net (45.149.104.1)] [Connected to repo.nextdns.io (104.26.11.186)] [Connecting\n                                                                                                                                                                                                                                                                     \nHit:2 https://download.docker.com/linux/ubuntu noble InRelease\n\n0% [Connecting to ppa.launchpadcontent.net (185.125.190.80)] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Connecting to repository.mullvad.net (45.149.104.1)] [Waiting for headers] [Connecting to security.ubuntu.com (185.125.190.81)] [Wait\n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Connecting to repository.mullvad.net (45.149.104.1)] [Waiting for headers] [Connecting to security.ubuntu.com (185.125.190.81)] [Waiti\n                                                                                                                                                                                                                                                                     \nIgn:3 https://repository.mullvad.net/deb/stable noble InRelease\n\n                                                                                                                                                                                                                                                                     \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                                                                                                                 \nHit:4 http://archive.ubuntu.com/ubuntu noble InRelease\n\n                                                                                                                                                                                                                                                                 \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                                                                                           \nHit:5 https://packages.microsoft.com/repos/code stable InRelease\n\n                                                                                                                                                                                                                                           \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                                                                     \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                                               \nIgn:6 https://releases.warp.dev/linux/deb stable InRelease\n\n                                                                                                                                                                                               \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                                               \nHit:7 https://packages.mozilla.org/apt mozilla InRelease\n\n                                                                                                                                                                                               \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                         \nHit:8 https://releases.warp.dev/linux/deb stable Release\n\n                                                                                                                                                                         \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                   \nHit:9 http://security.ubuntu.com/ubuntu noble-security InRelease\n\n                                                                                                                                                   \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                             \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers]\n0% [Connecting to prod-cdn.packages.k8s.io] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n0% [Connected to prod-cdn.packages.k8s.io (18.238.96.49)] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                           \nHit:11 https://repo.nextdns.io/deb stable InRelease\n\n                                                                                                                           \n0% [Connected to prod-cdn.packages.k8s.io (18.238.96.49)] [Waiting for headers] [Waiting for headers]\n0% [Connected to prod-cdn.packages.k8s.io (18.238.96.49)] [Waiting for headers] [Waiting for headers]\n                                                                                                     \nIgn:13 https://repo.vivaldi.com/snapshot/deb stable InRelease\n\n                                                                                                     \n0% [Waiting for headers] [Waiting for headers]\n0% [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                    \nHit:10 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.30/deb  InRelease\n\n                                                                    \n0% [Waiting for headers] [Waiting for headers]\n0% [Waiting for headers] [Waiting for headers]\n0% [Waiting for headers] [Waiting for headers]\n                                              \nHit:14 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu noble InRelease\n\n                                              \n0% [Waiting for headers]\n                        \nIgn:15 https://repo.vivaldi.com/stable/deb stable InRelease\n\n                        \n0% [Working]\n0% [Waiting for headers]\n                        \nHit:16 https://repo.vivaldi.com/snapshot/deb stable Release\n\n                        \n0% [Working]\n            \nHit:17 https://repo.vivaldi.com/stable/deb stable Release\n\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n            \nIgn:3 https://repository.mullvad.net/deb/stable noble InRelease\n\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n            \nIgn:3 https://repository.mullvad.net/deb/stable noble InRelease\n\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n            \nErr:3 https://repository.mullvad.net/deb/stable noble InRelease\n  Could not handshake: An unexpected TLS packet was received. [IP: 45.149.104.1 443]\n\n20% [Working]\n             \n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 6%\n\nReading package lists... 6%\n\nReading package lists... 7%\n\nReading package lists... 7%\n\nReading package lists... 10%\n\nReading package lists... 10%\n\nReading package lists... 12%\n\nReading package lists... 12%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 22%\n\nReading package lists... 22%\n\nReading package lists... 25%\n\nReading package lists... 25%\n\nReading package lists... 63%\n\nReading package lists... 71%\n\nReading package lists... 71%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 97%\n\nReading package lists... 97%\n\nReading package lists... 97%\n\nReading package lists... 97%\n\nReading package lists... 97%\n\nReading package lists... 97%\n\nReading package lists... Done\n\nW: Failed to fetch https://repository.mullvad.net/deb/stable/dists/noble/InRelease  Could not handshake: An unexpected TLS packet was received. [IP: 45.149.104.1 443]\nW: Some index files failed to download. They have been ignored, or old ones used instead.\n\nReading package lists... 0%\n\nReading package lists... 100%\n\nReading package lists... Done\n\n\nBuilding dependency tree... 0%\n\nBuilding dependency tree... 0%\n\nBuilding dependency tree... 50%\n\nBuilding dependency tree... 50%\n\nBuilding dependency tree... Done\n\n\nReading state information... 0% \n\nReading state information... 0%\n\nReading state information... Done\n\nThe following additional packages will be installed:\n  default-jdk default-jdk-headless default-libmysqlclient-dev hdf5-helpers libaec-dev libarmadillo-dev libarpack2-dev libblas-dev libblosc-dev libcfitsio-dev libcfitsio-doc libclang1-15t64 libdouble-conversion-dev libeigen3-dev libflann-dev libflann1.9\n  libfreexl-dev libfyba-dev libgdal-dev libgeotiff-dev libgif-dev libgl2ps-dev libglew-dev libglut3.12 libhdf4-alt-dev libhdf5-cpp-103-1t64 libhdf5-dev libhdf5-fortran-102t64 libhdf5-hl-cpp-100t64 libhdf5-hl-fortran-100t64 libhdf5-mpi-dev\n  libhdf5-openmpi-103-1t64 libhdf5-openmpi-cpp-103-1t64 libhdf5-openmpi-dev libhdf5-openmpi-fortran-102t64 libhdf5-openmpi-hl-100t64 libhdf5-openmpi-hl-cpp-100t64 libhdf5-openmpi-hl-fortran-100t64 libjson-c-dev libjsoncpp-dev libkml-dev libkmlconvenience1t64\n  libkmlregionator1t64 libkmlxsd1t64 liblapack-dev libllvm15t64 liblz4-dev libminizip-dev libmysqlclient-dev libnetcdf-dev libodbccr2 libogdi-dev libogg-dev libopenjp2-7-dev libopenni-dev libopenni-sensor-pointclouds0 libopenni0t64 libopenni2-dev\n  libpcl-apps1.14 libpcl-common1.14 libpcl-features1.14 libpcl-filters1.14 libpcl-io1.14 libpcl-kdtree1.14 libpcl-keypoints1.14 libpcl-ml1.14 libpcl-octree1.14 libpcl-outofcore1.14 libpcl-people1.14 libpcl-recognition1.14 libpcl-registration1.14\n  libpcl-sample-consensus1.14 libpcl-search1.14 libpcl-segmentation1.14 libpcl-stereo1.14 libpcl-surface1.14 libpcl-tracking1.14 libpcl-visualization1.14 libpoppler-dev libpoppler-private-dev libproj-dev libqhull-dev libqhull8.0 libqhullcpp8.0\n  libqt5designercomponents5 libqt5webkit5-dev librttopo-dev libspatialite-dev libsuperlu-dev libtheora-dev libtinyxml2.6.2v5 libtirpc-dev liburiparser-dev libusb-1.0-0-dev libusb-1.0-doc libutfcpp-dev libvtk9-dev libvtk9-java libvtk9-qt-dev libvtk9.1t64-qt\n  libxerces-c-dev openjdk-21-jdk openjdk-21-jdk-headless openni-utils python3-mpi4py python3-vtk9 qdoc-qt5 qhelpgenerator-qt5 qt5-assistant qtattributionsscanner-qt5 qttools5-dev qttools5-dev-tools qttools5-private-dev unixodbc-dev vtk9\nSuggested packages:\n  libitpp-dev liblapack-doc libeigen3-doc libmpfrc++-dev libgeotiff-epsg libhdf5-doc netcdf-bin netcdf-doc openni-doc openni2-doc libpcl-doc libsuperlu-doc vtk9-doc vtk9-examples java-virtual-machine libxerces-c-doc openjdk-21-demo openjdk-21-source visualvm\n  mayavi2 qt5-doc\nThe following NEW packages will be installed:\n  default-jdk default-jdk-headless default-libmysqlclient-dev hdf5-helpers libaec-dev libarmadillo-dev libarpack2-dev libblas-dev libblosc-dev libcfitsio-dev libcfitsio-doc libclang1-15t64 libdouble-conversion-dev libeigen3-dev libflann-dev libflann1.9\n  libfreexl-dev libfyba-dev libgdal-dev libgeotiff-dev libgif-dev libgl2ps-dev libglew-dev libglut3.12 libhdf4-alt-dev libhdf5-cpp-103-1t64 libhdf5-dev libhdf5-fortran-102t64 libhdf5-hl-cpp-100t64 libhdf5-hl-fortran-100t64 libhdf5-mpi-dev\n  libhdf5-openmpi-103-1t64 libhdf5-openmpi-cpp-103-1t64 libhdf5-openmpi-dev libhdf5-openmpi-fortran-102t64 libhdf5-openmpi-hl-100t64 libhdf5-openmpi-hl-cpp-100t64 libhdf5-openmpi-hl-fortran-100t64 libjson-c-dev libjsoncpp-dev libkml-dev libkmlconvenience1t64\n  libkmlregionator1t64 libkmlxsd1t64 liblapack-dev libllvm15t64 liblz4-dev libminizip-dev libmysqlclient-dev libnetcdf-dev libodbccr2 libogdi-dev libogg-dev libopenjp2-7-dev libopenni-dev libopenni-sensor-pointclouds0 libopenni0t64 libopenni2-dev\n  libpcl-apps1.14 libpcl-common1.14 libpcl-dev libpcl-features1.14 libpcl-filters1.14 libpcl-io1.14 libpcl-kdtree1.14 libpcl-keypoints1.14 libpcl-ml1.14 libpcl-octree1.14 libpcl-outofcore1.14 libpcl-people1.14 libpcl-recognition1.14 libpcl-registration1.14\n  libpcl-sample-consensus1.14 libpcl-search1.14 libpcl-segmentation1.14 libpcl-stereo1.14 libpcl-surface1.14 libpcl-tracking1.14 libpcl-visualization1.14 libpoppler-dev libpoppler-private-dev libproj-dev libqhull-dev libqhull8.0 libqhullcpp8.0\n  libqt5designercomponents5 libqt5webkit5-dev librttopo-dev libspatialite-dev libsuperlu-dev libtheora-dev libtinyxml2.6.2v5 libtirpc-dev liburiparser-dev libusb-1.0-0-dev libusb-1.0-doc libutfcpp-dev libvtk9-dev libvtk9-java libvtk9-qt-dev libvtk9.1t64-qt\n  libxerces-c-dev openjdk-21-jdk openjdk-21-jdk-headless openni-utils python3-mpi4py python3-vtk9 qdoc-qt5 qhelpgenerator-qt5 qt5-assistant qtattributionsscanner-qt5 qttools5-dev qttools5-dev-tools qttools5-private-dev unixodbc-dev vtk9\n0 upgraded, 116 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 184 MB of archives.\nAfter this operation, 642 MB of additional disk space will be used.\n\n0% [Working]\n            \nGet:1 http://archive.ubuntu.com/ubuntu noble/universe amd64 libqt5webkit5-dev amd64 5.212.0~alpha4-36 [54.6 kB]\n\n0% [1 libqt5webkit5-dev 4,096 B/54.6 kB 8%] [Waiting for headers]\n                                                                 \nGet:2 http://security.ubuntu.com/ubuntu noble-security/main amd64 openjdk-21-jdk-headless amd64 21.0.7+6~us1-0ubuntu1~24.04 [82.6 MB]\n\n0% [1 libqt5webkit5-dev 14.2 kB/54.6 kB 26%] [2 openjdk-21-jdk-headless 5,496 B/82.6 MB 0%]\n                                                                                           \n0% [2 openjdk-21-jdk-headless 43.1 kB/82.6 MB 0%]\n                                                 \nGet:3 http://archive.ubuntu.com/ubuntu noble/main amd64 default-jdk-headless amd64 2:1.21-75+exp1 [960 B]\n\n0% [3 default-jdk-headless 960 B/960 B 100%] [2 openjdk-21-jdk-headless 96.7 kB/82.6 MB 0%]\n                                                                                           \n0% [Waiting for headers] [2 openjdk-21-jdk-headless 96.7 kB/82.6 MB 0%]\n                                                                       \nGet:4 http://archive.ubuntu.com/ubuntu noble/main amd64 default-jdk amd64 2:1.21-75+exp1 [926 B]\n\n0% [4 default-jdk 926 B/926 B 100%] [2 openjdk-21-jdk-headless 96.7 kB/82.6 MB 0%]\n                                                                                  \n1% [Waiting for headers] [2 openjdk-21-jdk-headless 96.7 kB/82.6 MB 0%]\n                                                                       \nGet:5 http://archive.ubuntu.com/ubuntu noble/main amd64 default-libmysqlclient-dev amd64 1.1.0build1 [3,132 B]\n\n1% [5 default-libmysqlclient-dev 2,608 B/3,132 B 83%] [2 openjdk-21-jdk-headless 96.7 kB/82.6 MB 0%]\n                                                                                                    \n1% [Waiting for headers] [2 openjdk-21-jdk-headless 99.6 kB/82.6 MB 0%]\n                                                                       \nGet:6 http://archive.ubuntu.com/ubuntu noble/universe amd64 hdf5-helpers amd64 1.10.10+repack-3.1ubuntu4 [15.8 kB]\n\n1% [6 hdf5-helpers 2,082 B/15.8 kB 13%] [2 openjdk-21-jdk-headless 99.6 kB/82.6 MB 0%]\n                                                                                      \n1% [Waiting for headers] [2 openjdk-21-jdk-headless 111 kB/82.6 MB 0%]\n                                                                      \nGet:7 http://archive.ubuntu.com/ubuntu noble/main amd64 libblas-dev amd64 3.12.0-3build1 [170 kB]\n\n1% [7 libblas-dev 476 B/170 kB 0%] [2 openjdk-21-jdk-headless 111 kB/82.6 MB 0%]\n                                                                                \n1% [Waiting for headers] [2 openjdk-21-jdk-headless 417 kB/82.6 MB 1%]\n                                                                      \nGet:8 http://archive.ubuntu.com/ubuntu noble/main amd64 liblapack-dev amd64 3.12.0-3build1 [5,196 kB]\n\n1% [8 liblapack-dev 2,472 B/5,196 kB 0%] [2 openjdk-21-jdk-headless 417 kB/82.6 MB 1%]\n6% [8 liblapack-dev 5,041 kB/5,196 kB 97%] [2 openjdk-21-jdk-headless 7,116 kB/82.6 MB 9%]\n                                                                                          \n8% [Waiting for headers] [2 openjdk-21-jdk-headless 9,270 kB/82.6 MB 11%]\n                                                                         \nGet:9 http://archive.ubuntu.com/ubuntu noble/universe amd64 libarpack2-dev amd64 3.9.1-1.1build2 [122 kB]\n\n8% [9 libarpack2-dev 41.9 kB/122 kB 34%] [2 openjdk-21-jdk-headless 9,270 kB/82.6 MB 11%]\n                                                                                         \n8% [Waiting for headers] [2 openjdk-21-jdk-headless 9,362 kB/82.6 MB 11%]\n                                                                         \nGet:10 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-fortran-102t64 amd64 1.10.10+repack-3.1ubuntu4 [85.2 kB]\n\n8% [10 libhdf5-fortran-102t64 50.6 kB/85.2 kB 59%] [2 openjdk-21-jdk-headless 9,362 kB/82.6 MB 11%]\n                                                                                                   \n8% [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                   \nGet:11 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-hl-fortran-100t64 amd64 1.10.10+repack-3.1ubuntu4 [31.5 kB]\n\n8% [11 libhdf5-hl-fortran-100t64 30.7 kB/31.5 kB 98%] [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                                                                      \n8% [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                   \nGet:12 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-cpp-103-1t64 amd64 1.10.10+repack-3.1ubuntu4 [128 kB]\n\n8% [12 libhdf5-cpp-103-1t64 18.4 kB/128 kB 14%] [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                                                                \n9% [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                   \nGet:13 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-hl-cpp-100t64 amd64 1.10.10+repack-3.1ubuntu4 [11.2 kB]\n\n9% [13 libhdf5-hl-cpp-100t64 11.2 kB/11.2 kB 100%] [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                                                                   \n9% [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                   \nGet:14 http://archive.ubuntu.com/ubuntu noble/universe amd64 libaec-dev amd64 1.1.2-1build1 [19.8 kB]\n\n9% [14 libaec-dev 9,985 B/19.8 kB 50%] [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                                                       \n9% [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                   \nGet:15 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-dev amd64 1.10.10+repack-3.1ubuntu4 [2,777 kB]\n\n9% [15 libhdf5-dev 55.4 kB/2,777 kB 2%] [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                                                        \n12% [Waiting for headers] [2 openjdk-21-jdk-headless 13.5 MB/82.6 MB 16%]\n                                                                         \nGet:16 http://archive.ubuntu.com/ubuntu noble/universe amd64 libsuperlu-dev amd64 6.0.1+dfsg1-1build1 [20.7 kB]\n\n12% [16 libsuperlu-dev 14.6 kB/20.7 kB 71%] [2 openjdk-21-jdk-headless 13.5 MB/82.6 MB 16%]\n                                                                                           \n12% [2 openjdk-21-jdk-headless 13.5 MB/82.6 MB 16%]\n                                                   \nGet:17 http://archive.ubuntu.com/ubuntu noble/universe amd64 libarmadillo-dev amd64 1:12.6.7+dfsg-1build2 [409 kB]\n\n12% [17 libarmadillo-dev 9,579 B/409 kB 2%] [2 openjdk-21-jdk-headless 13.5 MB/82.6 MB 16%]\n                                                                                           \n13% [Waiting for headers] [2 openjdk-21-jdk-headless 13.8 MB/82.6 MB 17%]\n                                                                         \nGet:18 http://archive.ubuntu.com/ubuntu noble/universe amd64 libblosc-dev amd64 1.21.5+ds-1build1 [43.7 kB]\n\n13% [18 libblosc-dev 12.7 kB/43.7 kB 29%] [2 openjdk-21-jdk-headless 13.8 MB/82.6 MB 17%]\n                                                                                         \n13% [Waiting for headers] [2 openjdk-21-jdk-headless 13.9 MB/82.6 MB 17%]\n                                                                         \nGet:19 http://archive.ubuntu.com/ubuntu noble/universe amd64 libcfitsio-dev amd64 4.3.1-1.1build2 [598 kB]\n\n13% [19 libcfitsio-dev 15.4 kB/598 kB 3%] [2 openjdk-21-jdk-headless 13.9 MB/82.6 MB 17%]\n                                                                                         \n14% [Waiting for headers] [2 openjdk-21-jdk-headless 14.5 MB/82.6 MB 18%]\n                                                                         \nGet:20 http://archive.ubuntu.com/ubuntu noble/universe amd64 libcfitsio-doc all 4.3.1-1.1build2 [2,076 kB]\n\n14% [20 libcfitsio-doc 12.0 kB/2,076 kB 1%] [2 openjdk-21-jdk-headless 14.5 MB/82.6 MB 18%]\n                                                                                           \n16% [Waiting for headers] [2 openjdk-21-jdk-headless 16.9 MB/82.6 MB 20%]\n                                                                         \nGet:21 http://archive.ubuntu.com/ubuntu noble/universe amd64 libllvm15t64 amd64 1:15.0.7-14build3 [25.5 MB]\n\n16% [21 libllvm15t64 5,360 B/25.5 MB 0%] [2 openjdk-21-jdk-headless 16.9 MB/82.6 MB 20%]\n24% [21 libllvm15t64 9,046 kB/25.5 MB 35%] [2 openjdk-21-jdk-headless 26.3 MB/82.6 MB 32%]\n                                                                                          \n30% [21 libllvm15t64 16.5 MB/25.5 MB 65%] [2 openjdk-21-jdk-headless 34.0 MB/82.6 MB 41%]\n37% [21 libllvm15t64 23.4 MB/25.5 MB 92%] [2 openjdk-21-jdk-headless 41.3 MB/82.6 MB 50%]\n                                                                                         \n39% [Waiting for headers] [2 openjdk-21-jdk-headless 43.8 MB/82.6 MB 53%]\n                                                                         \nGet:22 http://archive.ubuntu.com/ubuntu noble/universe amd64 libclang1-15t64 amd64 1:15.0.7-14build3 [6,958 kB]\n\n39% [22 libclang1-15t64 16.4 kB/6,958 kB 0%] [2 openjdk-21-jdk-headless 43.8 MB/82.6 MB 53%]\n                                                                                            \nGet:23 http://archive.ubuntu.com/ubuntu noble/universe amd64 libflann1.9 amd64 1.9.2+dfsg-2build1 [794 kB]\n\n                                                                                            \n45% [23 libflann1.9 70.5 kB/794 kB 9%] [2 openjdk-21-jdk-headless 50.3 MB/82.6 MB 61%]\n                                                                                      \n46% [2 openjdk-21-jdk-headless 51.0 MB/82.6 MB 62%]\n                                                   \nGet:24 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-103-1t64 amd64 1.10.10+repack-3.1ubuntu4 [1,325 kB]\n\n46% [24 libhdf5-openmpi-103-1t64 18.8 kB/1,325 kB 1%] [2 openjdk-21-jdk-headless 51.0 MB/82.6 MB 62%]\n                                                                                                     \n47% [2 openjdk-21-jdk-headless 52.3 MB/82.6 MB 63%]\n                                                   \nGet:25 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-fortran-102t64 amd64 1.10.10+repack-3.1ubuntu4 [85.5 kB]\n\n47% [25 libhdf5-openmpi-fortran-102t64 31.6 kB/85.5 kB 37%] [2 openjdk-21-jdk-headless 52.3 MB/82.6 MB 63%]\n                                                                                                           \n47% [Waiting for headers] [2 openjdk-21-jdk-headless 52.3 MB/82.6 MB 63%]\n                                                                         \nGet:26 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-hl-100t64 amd64 1.10.10+repack-3.1ubuntu4 [56.4 kB]\n\n47% [26 libhdf5-openmpi-hl-100t64 4,096 B/56.4 kB 7%] [2 openjdk-21-jdk-headless 52.3 MB/82.6 MB 63%]\n                                                                                                     \n47% [Waiting for headers] [2 openjdk-21-jdk-headless 52.4 MB/82.6 MB 63%]\n                                                                         \nGet:27 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-hl-fortran-100t64 amd64 1.10.10+repack-3.1ubuntu4 [31.7 kB]\n\n47% [27 libhdf5-openmpi-hl-fortran-100t64 2,420 B/31.7 kB 8%] [2 openjdk-21-jdk-headless 52.4 MB/82.6 MB 63%]\n                                                                                                             \n48% [Waiting for headers] [2 openjdk-21-jdk-headless 52.4 MB/82.6 MB 63%]\n                                                                         \nGet:28 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-cpp-103-1t64 amd64 1.10.10+repack-3.1ubuntu4 [127 kB]\n\n48% [28 libhdf5-openmpi-cpp-103-1t64 20.5 kB/127 kB 16%] [2 openjdk-21-jdk-headless 52.4 MB/82.6 MB 63%]\n                                                                                                        \n48% [Waiting for headers] [2 openjdk-21-jdk-headless 52.5 MB/82.6 MB 64%]\n                                                                         \nGet:29 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-hl-cpp-100t64 amd64 1.10.10+repack-3.1ubuntu4 [11.2 kB]\n\n48% [29 libhdf5-openmpi-hl-cpp-100t64 11.2 kB/11.2 kB 100%] [2 openjdk-21-jdk-headless 52.5 MB/82.6 MB 64%]\n                                                                                                           \n48% [2 openjdk-21-jdk-headless 52.5 MB/82.6 MB 64%]\n                                                   \nGet:30 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-dev amd64 1.10.10+repack-3.1ubuntu4 [2,850 kB]\n\n48% [30 libhdf5-openmpi-dev 1,017 B/2,850 kB 0%] [2 openjdk-21-jdk-headless 52.5 MB/82.6 MB 64%]\n                                                                                                \n51% [Waiting for headers] [2 openjdk-21-jdk-headless 55.5 MB/82.6 MB 67%]\n                                                                         \nGet:31 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-mpi-dev amd64 1.10.10+repack-3.1ubuntu4 [4,622 B]\n\n51% [31 libhdf5-mpi-dev 4,622 B/4,622 B 100%] [2 openjdk-21-jdk-headless 55.5 MB/82.6 MB 67%]\n                                                                                             \n51% [2 openjdk-21-jdk-headless 55.5 MB/82.6 MB 67%]\n                                                   \nGet:32 http://archive.ubuntu.com/ubuntu noble/main amd64 liblz4-dev amd64 1.9.4-1build1 [87.6 kB]\n\n51% [32 liblz4-dev 20.5 kB/87.6 kB 23%] [2 openjdk-21-jdk-headless 55.5 MB/82.6 MB 67%]\n                                                                                       \n51% [Waiting for headers] [2 openjdk-21-jdk-headless 55.6 MB/82.6 MB 67%]\n                                                                         \nGet:33 http://archive.ubuntu.com/ubuntu noble/universe amd64 libflann-dev amd64 1.9.2+dfsg-2build1 [816 kB]\n\n51% [33 libflann-dev 13.6 kB/816 kB 2%] [2 openjdk-21-jdk-headless 55.6 MB/82.6 MB 67%]\n                                                                                       \n52% [2 openjdk-21-jdk-headless 56.4 MB/82.6 MB 68%]\n                                                   \nGet:34 http://archive.ubuntu.com/ubuntu noble/universe amd64 libfyba-dev amd64 4.1.1-11build1 [178 kB]\n\n... additional lines truncated ...\n(Reading database ... 35%\n(Reading database ... 40%\n(Reading database ... 45%\n(Reading database ... 50%\n(Reading database ... 55%\n(Reading database ... 60%\n(Reading database ... 65%\n(Reading database ... 70%\n(Reading database ... 75%\n(Reading database ... 80%\n(Reading database ... 85%\n(Reading database ... 90%\n(Reading database ... 95%\n(Reading database ... 100%\n(Reading database ... 484325 files and directories currently installed.)\nPreparing to unpack .../000-libqt5webkit5-dev_5.212.0~alpha4-36_amd64.deb ...\nUnpacking libqt5webkit5-dev:amd64 (5.212.0~alpha4-36) ...\nSelecting previously unselected package openjdk-21-jdk-headless:amd64.\nPreparing to unpack .../001-openjdk-21-jdk-headless_21.0.7+6~us1-0ubuntu1~24.04_amd64.deb ...\nUnpacking openjdk-21-jdk-headless:amd64 (21.0.7+6~us1-0ubuntu1~24.04) ...\nSelecting previously unselected package default-jdk-headless.\nPreparing to unpack .../002-default-jdk-headless_2%3a1.21-75+exp1_amd64.deb ...\nUnpacking default-jdk-headless (2:1.21-75+exp1) ...\nSelecting previously unselected package openjdk-21-jdk:amd64.\nPreparing to unpack .../003-openjdk-21-jdk_21.0.7+6~us1-0ubuntu1~24.04_amd64.deb ...\nUnpacking openjdk-21-jdk:amd64 (21.0.7+6~us1-0ubuntu1~24.04) ...\nSelecting previously unselected package default-jdk.\nPreparing to unpack .../004-default-jdk_2%3a1.21-75+exp1_amd64.deb ...\nUnpacking default-jdk (2:1.21-75+exp1) ...\nSelecting previously unselected package libmysqlclient-dev.\nPreparing to unpack .../005-libmysqlclient-dev_8.0.42-0ubuntu0.24.04.1_amd64.deb ...\nUnpacking libmysqlclient-dev (8.0.42-0ubuntu0.24.04.1) ...\nSelecting previously unselected package default-libmysqlclient-dev:amd64.\nPreparing to unpack .../006-default-libmysqlclient-dev_1.1.0build1_amd64.deb ...\nUnpacking default-libmysqlclient-dev:amd64 (1.1.0build1) ...\nSelecting previously unselected package hdf5-helpers.\nPreparing to unpack .../007-hdf5-helpers_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking hdf5-helpers (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libblas-dev:amd64.\nPreparing to unpack .../008-libblas-dev_3.12.0-3build1_amd64.deb ...\nUnpacking libblas-dev:amd64 (3.12.0-3build1) ...\nSelecting previously unselected package liblapack-dev:amd64.\nPreparing to unpack .../009-liblapack-dev_3.12.0-3build1_amd64.deb ...\nUnpacking liblapack-dev:amd64 (3.12.0-3build1) ...\nSelecting previously unselected package libarpack2-dev:amd64.\nPreparing to unpack .../010-libarpack2-dev_3.9.1-1.1build2_amd64.deb ...\nUnpacking libarpack2-dev:amd64 (3.9.1-1.1build2) ...\nSelecting previously unselected package libhdf5-fortran-102t64:amd64.\nPreparing to unpack .../011-libhdf5-fortran-102t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-fortran-102t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-hl-fortran-100t64:amd64.\nPreparing to unpack .../012-libhdf5-hl-fortran-100t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-hl-fortran-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-cpp-103-1t64:amd64.\nPreparing to unpack .../013-libhdf5-cpp-103-1t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-cpp-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-hl-cpp-100t64:amd64.\nPreparing to unpack .../014-libhdf5-hl-cpp-100t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-hl-cpp-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libaec-dev:amd64.\nPreparing to unpack .../015-libaec-dev_1.1.2-1build1_amd64.deb ...\nUnpacking libaec-dev:amd64 (1.1.2-1build1) ...\nSelecting previously unselected package libhdf5-dev.\nPreparing to unpack .../016-libhdf5-dev_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-dev (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libsuperlu-dev:amd64.\nPreparing to unpack .../017-libsuperlu-dev_6.0.1+dfsg1-1build1_amd64.deb ...\nUnpacking libsuperlu-dev:amd64 (6.0.1+dfsg1-1build1) ...\nSelecting previously unselected package libarmadillo-dev.\nPreparing to unpack .../018-libarmadillo-dev_1%3a12.6.7+dfsg-1build2_amd64.deb ...\nUnpacking libarmadillo-dev (1:12.6.7+dfsg-1build2) ...\nSelecting previously unselected package libblosc-dev:amd64.\nPreparing to unpack .../019-libblosc-dev_1.21.5+ds-1build1_amd64.deb ...\nUnpacking libblosc-dev:amd64 (1.21.5+ds-1build1) ...\nSelecting previously unselected package libcfitsio-dev:amd64.\nPreparing to unpack .../020-libcfitsio-dev_4.3.1-1.1build2_amd64.deb ...\nUnpacking libcfitsio-dev:amd64 (4.3.1-1.1build2) ...\nSelecting previously unselected package libcfitsio-doc.\nPreparing to unpack .../021-libcfitsio-doc_4.3.1-1.1build2_all.deb ...\nUnpacking libcfitsio-doc (4.3.1-1.1build2) ...\nSelecting previously unselected package libllvm15t64:amd64.\nPreparing to unpack .../022-libllvm15t64_1%3a15.0.7-14build3_amd64.deb ...\nUnpacking libllvm15t64:amd64 (1:15.0.7-14build3) ...\nSelecting previously unselected package libclang1-15t64.\nPreparing to unpack .../023-libclang1-15t64_1%3a15.0.7-14build3_amd64.deb ...\nUnpacking libclang1-15t64 (1:15.0.7-14build3) ...\nSelecting previously unselected package libflann1.9:amd64.\nPreparing to unpack .../024-libflann1.9_1.9.2+dfsg-2build1_amd64.deb ...\nUnpacking libflann1.9:amd64 (1.9.2+dfsg-2build1) ...\nSelecting previously unselected package libhdf5-openmpi-103-1t64:amd64.\nPreparing to unpack .../025-libhdf5-openmpi-103-1t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-fortran-102t64:amd64.\nPreparing to unpack .../026-libhdf5-openmpi-fortran-102t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-fortran-102t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-hl-100t64:amd64.\nPreparing to unpack .../027-libhdf5-openmpi-hl-100t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-hl-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-hl-fortran-100t64:amd64.\nPreparing to unpack .../028-libhdf5-openmpi-hl-fortran-100t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-hl-fortran-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-cpp-103-1t64:amd64.\nPreparing to unpack .../029-libhdf5-openmpi-cpp-103-1t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-cpp-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-hl-cpp-100t64:amd64.\nPreparing to unpack .../030-libhdf5-openmpi-hl-cpp-100t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-hl-cpp-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-dev.\nPreparing to unpack .../031-libhdf5-openmpi-dev_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-dev (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-mpi-dev.\nPreparing to unpack .../032-libhdf5-mpi-dev_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-mpi-dev (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package liblz4-dev:amd64.\nPreparing to unpack .../033-liblz4-dev_1.9.4-1build1_amd64.deb ...\nUnpacking liblz4-dev:amd64 (1.9.4-1build1) ...\nSelecting previously unselected package libflann-dev:amd64.\nPreparing to unpack .../034-libflann-dev_1.9.2+dfsg-2build1_amd64.deb ...\nUnpacking libflann-dev:amd64 (1.9.2+dfsg-2build1) ...\nSelecting previously unselected package libfyba-dev:amd64.\nPreparing to unpack .../035-libfyba-dev_4.1.1-11build1_amd64.deb ...\nUnpacking libfyba-dev:amd64 (4.1.1-11build1) ...\nSelecting previously unselected package libgif-dev:amd64.\nPreparing to unpack .../036-libgif-dev_5.2.2-1ubuntu1_amd64.deb ...\nUnpacking libgif-dev:amd64 (5.2.2-1ubuntu1) ...\nSelecting previously unselected package libgl2ps-dev.\nPreparing to unpack .../037-libgl2ps-dev_1.4.2+dfsg1-2build1_amd64.deb ...\nUnpacking libgl2ps-dev (1.4.2+dfsg1-2build1) ...\nSelecting previously unselected package libglew-dev:amd64.\nPreparing to unpack .../038-libglew-dev_2.2.0-4build1_amd64.deb ...\nUnpacking libglew-dev:amd64 (2.2.0-4build1) ...\nSelecting previously unselected package libglut3.12:amd64.\nPreparing to unpack .../039-libglut3.12_3.4.0-1build1_amd64.deb ...\nUnpacking libglut3.12:amd64 (3.4.0-1build1) ...\nSelecting previously unselected package libkmlconvenience1t64:amd64.\nPreparing to unpack .../040-libkmlconvenience1t64_1.3.0-12build1_amd64.deb ...\nUnpacking libkmlconvenience1t64:amd64 (1.3.0-12build1) ...\nSelecting previously unselected package libkmlregionator1t64:amd64.\nPreparing to unpack .../041-libkmlregionator1t64_1.3.0-12build1_amd64.deb ...\nUnpacking libkmlregionator1t64:amd64 (1.3.0-12build1) ...\nSelecting previously unselected package libkmlxsd1t64:amd64.\nPreparing to unpack .../042-libkmlxsd1t64_1.3.0-12build1_amd64.deb ...\nUnpacking libkmlxsd1t64:amd64 (1.3.0-12build1) ...\nSelecting previously unselected package libminizip-dev:amd64.\nPreparing to unpack .../043-libminizip-dev_1%3a1.3.dfsg-3.1ubuntu2_amd64.deb ...\nUnpacking libminizip-dev:amd64 (1:1.3.dfsg-3.1ubuntu2) ...\nSelecting previously unselected package libnetcdf-dev.\nPreparing to unpack .../044-libnetcdf-dev_1%3a4.9.2-5ubuntu4_amd64.deb ...\nUnpacking libnetcdf-dev (1:4.9.2-5ubuntu4) ...\nSelecting previously unselected package libodbccr2:amd64.\nPreparing to unpack .../045-libodbccr2_2.3.12-1ubuntu0.24.04.1_amd64.deb ...\nUnpacking libodbccr2:amd64 (2.3.12-1ubuntu0.24.04.1) ...\nSelecting previously unselected package libtirpc-dev:amd64.\nPreparing to unpack .../046-libtirpc-dev_1.3.4+ds-1.1build1_amd64.deb ...\nUnpacking libtirpc-dev:amd64 (1.3.4+ds-1.1build1) ...\nSelecting previously unselected package libogdi-dev.\nPreparing to unpack .../047-libogdi-dev_4.1.1+ds-3build1_amd64.deb ...\nUnpacking libogdi-dev (4.1.1+ds-3build1) ...\nSelecting previously unselected package libogg-dev:amd64.\nPreparing to unpack .../048-libogg-dev_1.3.5-3build1_amd64.deb ...\nUnpacking libogg-dev:amd64 (1.3.5-3build1) ...\nSelecting previously unselected package libtinyxml2.6.2v5:amd64.\nPreparing to unpack .../049-libtinyxml2.6.2v5_2.6.2-6.1_amd64.deb ...\nUnpacking libtinyxml2.6.2v5:amd64 (2.6.2-6.1) ...\nSelecting previously unselected package libopenni0t64.\nPreparing to unpack .../050-libopenni0t64_1.5.4.0+dfsg-7.1build1_amd64.deb ...\nUnpacking libopenni0t64 (1.5.4.0+dfsg-7.1build1) ...\nSelecting previously unselected package libopenni-dev:amd64.\nPreparing to unpack .../051-libopenni-dev_1.5.4.0+dfsg-7.1build1_amd64.deb ...\nUnpacking libopenni-dev:amd64 (1.5.4.0+dfsg-7.1build1) ...\nSelecting previously unselected package openni-utils.\nPreparing to unpack .../052-openni-utils_1.5.4.0+dfsg-7.1build1_amd64.deb ...\nUnpacking openni-utils (1.5.4.0+dfsg-7.1build1) ...\nSelecting previously unselected package libopenni-sensor-pointclouds0.\nPreparing to unpack .../053-libopenni-sensor-pointclouds0_5.1.0.41.11-1build2_amd64.deb ...\nUnpacking libopenni-sensor-pointclouds0 (5.1.0.41.11-1build2) ...\nSelecting previously unselected package libopenni2-dev:amd64.\nPreparing to unpack .../054-libopenni2-dev_2.2.0.33+dfsg-18_amd64.deb ...\nUnpacking libopenni2-dev:amd64 (2.2.0.33+dfsg-18) ...\nSelecting previously unselected package libpcl-common1.14:amd64.\nPreparing to unpack .../055-libpcl-common1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-common1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-kdtree1.14:amd64.\nPreparing to unpack .../056-libpcl-kdtree1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-kdtree1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-octree1.14:amd64.\nPreparing to unpack .../057-libpcl-octree1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-octree1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-sample-consensus1.14:amd64.\nPreparing to unpack .../058-libpcl-sample-consensus1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-sample-consensus1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-search1.14:amd64.\nPreparing to unpack .../059-libpcl-search1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-search1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-filters1.14:amd64.\nPreparing to unpack .../060-libpcl-filters1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-filters1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-features1.14:amd64.\nPreparing to unpack .../061-libpcl-features1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-features1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-ml1.14:amd64.\nPreparing to unpack .../062-libpcl-ml1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-ml1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-segmentation1.14:amd64.\nPreparing to unpack .../063-libpcl-segmentation1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-segmentation1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-surface1.14:amd64.\nPreparing to unpack .../064-libpcl-surface1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-surface1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-apps1.14:amd64.\nPreparing to unpack .../065-libpcl-apps1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-apps1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-io1.14:amd64.\nPreparing to unpack .../066-libpcl-io1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-io1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-keypoints1.14:amd64.\nPreparing to unpack .../067-libpcl-keypoints1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-keypoints1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-outofcore1.14:amd64.\nPreparing to unpack .../068-libpcl-outofcore1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-outofcore1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-people1.14:amd64.\nPreparing to unpack .../069-libpcl-people1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-people1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-registration1.14:amd64.\nPreparing to unpack .../070-libpcl-registration1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-registration1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-recognition1.14:amd64.\nPreparing to unpack .../071-libpcl-recognition1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-recognition1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-stereo1.14:amd64.\nPreparing to unpack .../072-libpcl-stereo1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-stereo1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-tracking1.14:amd64.\nPreparing to unpack .../073-libpcl-tracking1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-tracking1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-visualization1.14:amd64.\nPreparing to unpack .../074-libpcl-visualization1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-visualization1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpoppler-dev:amd64.\nPreparing to unpack .../075-libpoppler-dev_24.02.0-1ubuntu9.4_amd64.deb ...\nUnpacking libpoppler-dev:amd64 (24.02.0-1ubuntu9.4) ...\nSelecting previously unselected package libpoppler-private-dev:amd64.\nPreparing to unpack .../076-libpoppler-private-dev_24.02.0-1ubuntu9.4_amd64.deb ...\nUnpacking libpoppler-private-dev:amd64 (24.02.0-1ubuntu9.4) ...\nSelecting previously unselected package libqhull8.0:amd64.\nPreparing to unpack .../077-libqhull8.0_2020.2-6build1_amd64.deb ...\nUnpacking libqhull8.0:amd64 (2020.2-6build1) ...\nSelecting previously unselected package libqhullcpp8.0:amd64.\nPreparing to unpack .../078-libqhullcpp8.0_2020.2-6build1_amd64.deb ...\nUnpacking libqhullcpp8.0:amd64 (2020.2-6build1) ...\nSelecting previously unselected package libqhull-dev:amd64.\nPreparing to unpack .../079-libqhull-dev_2020.2-6build1_amd64.deb ...\nUnpacking libqhull-dev:amd64 (2020.2-6build1) ...\nSelecting previously unselected package libqt5designercomponents5:amd64.\nPreparing to unpack .../080-libqt5designercomponents5_5.15.13-1_amd64.deb ...\nUnpacking libqt5designercomponents5:amd64 (5.15.13-1) ...\nSelecting previously unselected package librttopo-dev:amd64.\nPreparing to unpack .../081-librttopo-dev_1.1.0-3build2_amd64.deb ...\nUnpacking librttopo-dev:amd64 (1.1.0-3build2) ...\nSelecting previously unselected package libtheora-dev:amd64.\nPreparing to unpack .../082-libtheora-dev_1.1.1+dfsg.1-16.1build3_amd64.deb ...\nUnpacking libtheora-dev:amd64 (1.1.1+dfsg.1-16.1build3) ...\nSelecting previously unselected package liburiparser-dev.\nPreparing to unpack .../083-liburiparser-dev_0.9.7+dfsg-2build1_amd64.deb ...\nUnpacking liburiparser-dev (0.9.7+dfsg-2build1) ...\nSelecting previously unselected package libusb-1.0-0-dev:amd64.\nPreparing to unpack .../084-libusb-1.0-0-dev_2%3a1.0.27-1_amd64.deb ...\nUnpacking libusb-1.0-0-dev:amd64 (2:1.0.27-1) ...\nSelecting previously unselected package libusb-1.0-doc.\nPreparing to unpack .../085-libusb-1.0-doc_2%3a1.0.27-1_all.deb ...\nUnpacking libusb-1.0-doc (2:1.0.27-1) ...\nSelecting previously unselected package libutfcpp-dev.\nPreparing to unpack .../086-libutfcpp-dev_3.2.5+really3.2.4-1_all.deb ...\nUnpacking libutfcpp-dev (3.2.5+really3.2.4-1) ...\nSelecting previously unselected package libdouble-conversion-dev:amd64.\nPreparing to unpack .../087-libdouble-conversion-dev_3.3.0-1build1_amd64.deb ...\nUnpacking libdouble-conversion-dev:amd64 (3.3.0-1build1) ...\nSelecting previously unselected package libeigen3-dev.\nPreparing to unpack .../088-libeigen3-dev_3.4.0-4_all.deb ...\nUnpacking libeigen3-dev (3.4.0-4) ...\nSelecting previously unselected package libfreexl-dev:amd64.\nPreparing to unpack .../089-libfreexl-dev_2.0.0-1build2_amd64.deb ...\nUnpacking libfreexl-dev:amd64 (2.0.0-1build2) ...\nSelecting previously unselected package libproj-dev:amd64.\nPreparing to unpack .../090-libproj-dev_9.4.0-1build2_amd64.deb ...\nUnpacking libproj-dev:amd64 (9.4.0-1build2) ...\nSelecting previously unselected package libgeotiff-dev:amd64.\nPreparing to unpack .../091-libgeotiff-dev_1.7.1-5build1_amd64.deb ...\nUnpacking libgeotiff-dev:amd64 (1.7.1-5build1) ...\nSelecting previously unselected package libhdf4-alt-dev.\nPreparing to unpack .../092-libhdf4-alt-dev_4.2.16-4build1_amd64.deb ...\nUnpacking libhdf4-alt-dev (4.2.16-4build1) ...\nSelecting previously unselected package libjson-c-dev:amd64.\nPreparing to unpack .../093-libjson-c-dev_0.17-1build1_amd64.deb ...\nUnpacking libjson-c-dev:amd64 (0.17-1build1) ...\nSelecting previously unselected package libkml-dev:amd64.\nPreparing to unpack .../094-libkml-dev_1.3.0-12build1_amd64.deb ...\nUnpacking libkml-dev:amd64 (1.3.0-12build1) ...\nSelecting previously unselected package libopenjp2-7-dev:amd64.\nPreparing to unpack .../095-libopenjp2-7-dev_2.5.0-2ubuntu0.3_amd64.deb ...\nUnpacking libopenjp2-7-dev:amd64 (2.5.0-2ubuntu0.3) ...\nSelecting previously unselected package libspatialite-dev:amd64.\nPreparing to unpack .../096-libspatialite-dev_5.1.0-3build1_amd64.deb ...\nUnpacking libspatialite-dev:amd64 (5.1.0-3build1) ...\nSelecting previously unselected package libxerces-c-dev:amd64.\nPreparing to unpack .../097-libxerces-c-dev_3.2.4+debian-1.2ubuntu2_amd64.deb ...\nUnpacking libxerces-c-dev:amd64 (3.2.4+debian-1.2ubuntu2) ...\nSelecting previously unselected package unixodbc-dev:amd64.\nPreparing to unpack .../098-unixodbc-dev_2.3.12-1ubuntu0.24.04.1_amd64.deb ...\nUnpacking unixodbc-dev:amd64 (2.3.12-1ubuntu0.24.04.1) ...\nSelecting previously unselected package libgdal-dev.\nPreparing to unpack .../099-libgdal-dev_3.8.4+dfsg-3ubuntu3_amd64.deb ...\nUnpacking libgdal-dev (3.8.4+dfsg-3ubuntu3) ...\nSelecting previously unselected package libjsoncpp-dev:amd64.\nPreparing to unpack .../100-libjsoncpp-dev_1.9.5-6build1_amd64.deb ...\nUnpacking libjsoncpp-dev:amd64 (1.9.5-6build1) ...\nSelecting previously unselected package libvtk9.1t64-qt:amd64.\nPreparing to unpack .../101-libvtk9.1t64-qt_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking libvtk9.1t64-qt:amd64 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package libvtk9-java.\nPreparing to unpack .../102-libvtk9-java_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking libvtk9-java (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package python3-mpi4py.\nPreparing to unpack .../103-python3-mpi4py_3.1.5-5ubuntu2_amd64.deb ...\nUnpacking python3-mpi4py (3.1.5-5ubuntu2) ...\nSelecting previously unselected package python3-vtk9.\nPreparing to unpack .../104-python3-vtk9_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking python3-vtk9 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package vtk9.\nPreparing to unpack .../105-vtk9_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking vtk9 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package libvtk9-dev.\nPreparing to unpack .../106-libvtk9-dev_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking libvtk9-dev (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package qdoc-qt5.\nPreparing to unpack .../107-qdoc-qt5_5.15.13-1_amd64.deb ...\nUnpacking qdoc-qt5 (5.15.13-1) ...\nSelecting previously unselected package qhelpgenerator-qt5.\nPreparing to unpack .../108-qhelpgenerator-qt5_5.15.13-1_amd64.deb ...\nUnpacking qhelpgenerator-qt5 (5.15.13-1) ...\nSelecting previously unselected package qt5-assistant.\nPreparing to unpack .../109-qt5-assistant_5.15.13-1_amd64.deb ...\nUnpacking qt5-assistant (5.15.13-1) ...\nSelecting previously unselected package qtattributionsscanner-qt5.\nPreparing to unpack .../110-qtattributionsscanner-qt5_5.15.13-1_amd64.deb ...\nUnpacking qtattributionsscanner-qt5 (5.15.13-1) ...\nSelecting previously unselected package qttools5-dev-tools.\nPreparing to unpack .../111-qttools5-dev-tools_5.15.13-1_amd64.deb ...\nUnpacking qttools5-dev-tools (5.15.13-1) ...\nSelecting previously unselected package qttools5-dev:amd64.\nPreparing to unpack .../112-qttools5-dev_5.15.13-1_amd64.deb ...\nUnpacking qttools5-dev:amd64 (5.15.13-1) ...\nSelecting previously unselected package qttools5-private-dev:amd64.\nPreparing to unpack .../113-qttools5-private-dev_5.15.13-1_amd64.deb ...\nUnpacking qttools5-private-dev:amd64 (5.15.13-1) ...\nSelecting previously unselected package libvtk9-qt-dev:amd64.\nPreparing to unpack .../114-libvtk9-qt-dev_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking libvtk9-qt-dev:amd64 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package libpcl-dev.\nPreparing to unpack .../115-libpcl-dev_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-dev (1.14.0+dfsg-1) ...\nSetting up libpoppler-dev:amd64 (24.02.0-1ubuntu9.4) ...\nSetting up librttopo-dev:amd64 (1.1.0-3build2) ...\nSetting up libjsoncpp-dev:amd64 (1.9.5-6build1) ...\nSetting up libkmlxsd1t64:amd64 (1.3.0-12build1) ...\nSetting up openjdk-21-jdk-headless:amd64 (21.0.7+6~us1-0ubuntu1~24.04) ...\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jar to provide /usr/bin/jar (jar) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jarsigner to provide /usr/bin/jarsigner (jarsigner) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/javadoc to provide /usr/bin/javadoc (javadoc) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/javap to provide /usr/bin/javap (javap) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jcmd to provide /usr/bin/jcmd (jcmd) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jdb to provide /usr/bin/jdb (jdb) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jdeprscan to provide /usr/bin/jdeprscan (jdeprscan) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jdeps to provide /usr/bin/jdeps (jdeps) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jfr to provide /usr/bin/jfr (jfr) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jimage to provide /usr/bin/jimage (jimage) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jinfo to provide /usr/bin/jinfo (jinfo) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jlink to provide /usr/bin/jlink (jlink) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jmap to provide /usr/bin/jmap (jmap) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jmod to provide /usr/bin/jmod (jmod) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jps to provide /usr/bin/jps (jps) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jrunscript to provide /usr/bin/jrunscript (jrunscript) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jshell to provide /usr/bin/jshell (jshell) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jstack to provide /usr/bin/jstack (jstack) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jstat to provide /usr/bin/jstat (jstat) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jstatd to provide /usr/bin/jstatd (jstatd) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jwebserver to provide /usr/bin/jwebserver (jwebserver) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/serialver to provide /usr/bin/serialver (serialver) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jhsdb to provide /usr/bin/jhsdb (jhsdb) in auto mode\nSetting up libcfitsio-dev:amd64 (4.3.1-1.1build2) ...\nSetting up hdf5-helpers (1.10.10+repack-3.1ubuntu4) ...\nSetting up libllvm15t64:amd64 (1:15.0.7-14build3) ...\nSetting up libqhull8.0:amd64 (2020.2-6build1) ...\nSetting up libblosc-dev:amd64 (1.21.5+ds-1build1) ...\nSetting up libjson-c-dev:amd64 (0.17-1build1) ...\nSetting up libfyba-dev:amd64 (4.1.1-11build1) ...\nSetting up libpoppler-private-dev:amd64 (24.02.0-1ubuntu9.4) ...\nSetting up libhdf5-cpp-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libusb-1.0-doc (2:1.0.27-1) ...\nSetting up libaec-dev:amd64 (1.1.2-1build1) ...\nSetting up libusb-1.0-0-dev:amd64 (2:1.0.27-1) ...\nSetting up qhelpgenerator-qt5 (5.15.13-1) ...\nSetting up libhdf5-fortran-102t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libqt5designercomponents5:amd64 (5.15.13-1) ...\nSetting up libogg-dev:amd64 (1.3.5-3build1) ...\nSetting up libqt5webkit5-dev:amd64 (5.212.0~alpha4-36) ...\nSetting up python3-mpi4py (3.1.5-5ubuntu2) ...\nSetting up libgl2ps-dev (1.4.2+dfsg1-2build1) ...\nSetting up libhdf5-openmpi-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up liburiparser-dev (0.9.7+dfsg-2build1) ...\nSetting up openjdk-21-jdk:amd64 (21.0.7+6~us1-0ubuntu1~24.04) ...\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jconsole to provide /usr/bin/jconsole (jconsole) in auto mode\nSetting up libminizip-dev:amd64 (1:1.3.dfsg-3.1ubuntu2) ...\nSetting up libglew-dev:amd64 (2.2.0-4build1) ...\nSetting up libtirpc-dev:amd64 (1.3.4+ds-1.1build1) ...\nSetting up libutfcpp-dev (3.2.5+really3.2.4-1) ...\nSetting up libtheora-dev:amd64 (1.1.1+dfsg.1-16.1build3) ...\nSetting up default-jdk-headless (2:1.21-75+exp1) ...\nSetting up libpcl-common1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-people1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libopenjp2-7-dev:amd64 (2.5.0-2ubuntu0.3) ...\nSetting up libxerces-c-dev:amd64 (3.2.4+debian-1.2ubuntu2) ...\nSetting up libglut3.12:amd64 (3.4.0-1build1) ...\nSetting up qtattributionsscanner-qt5 (5.15.13-1) ...\nSetting up libproj-dev:amd64 (9.4.0-1build2) ...\nSetting up libeigen3-dev (3.4.0-4) ...\nSetting up libflann1.9:amd64 (1.9.2+dfsg-2build1) ...\nSetting up liblz4-dev:amd64 (1.9.4-1build1) ...\nSetting up libqhullcpp8.0:amd64 (2020.2-6build1) ...\nSetting up libvtk9.1t64-qt:amd64 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSetting up libclang1-15t64 (1:15.0.7-14build3) ...\nSetting up libtinyxml2.6.2v5:amd64 (2.6.2-6.1) ...\nSetting up libvtk9-java (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSetting up libpcl-ml1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libqhull-dev:amd64 (2020.2-6build1) ...\nSetting up vtk9 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSetting up libdouble-conversion-dev:amd64 (3.3.0-1build1) ...\nSetting up qt5-assistant (5.15.13-1) ...\nSetting up libgif-dev:amd64 (5.2.2-1ubuntu1) ...\nSetting up libhdf5-openmpi-fortran-102t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libhdf5-openmpi-cpp-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libopenni2-dev:amd64 (2.2.0.33+dfsg-18) ...\nSetting up libkmlconvenience1t64:amd64 (1.3.0-12build1) ...\nSetting up libpcl-kdtree1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libhdf5-hl-cpp-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libogdi-dev (4.1.1+ds-3build1) ...\nSetting up libcfitsio-doc (4.3.1-1.1build2) ...\nSetting up libpcl-sample-consensus1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-stereo1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libblas-dev:amd64 (3.12.0-3build1) ...\nupdate-alternatives: using /usr/lib/x86_64-linux-gnu/blas/libblas.so to provide /usr/lib/x86_64-linux-gnu/libblas.so (libblas.so-x86_64-linux-gnu) in auto mode\nSetting up libmysqlclient-dev (8.0.42-0ubuntu0.24.04.1) ...\nSetting up libodbccr2:amd64 (2.3.12-1ubuntu0.24.04.1) ...\nSetting up default-libmysqlclient-dev:amd64 (1.1.0build1) ...\nSetting up libpcl-outofcore1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libkmlregionator1t64:amd64 (1.3.0-12build1) ...\nSetting up python3-vtk9 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\n/usr/lib/python3/dist-packages/vtkmodules/util/vtkMethodParser.py:304: SyntaxWarning: invalid escape sequence '\\S'\n  patn = re.compile (\"  \\S\")\nSetting up libgeotiff-dev:amd64 (1.7.1-5build1) ...\nSetting up libfreexl-dev:amd64 (2.0.0-1build2) ...\nSetting up qdoc-qt5 (5.15.13-1) ...\nSetting up libhdf5-hl-fortran-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up default-jdk (2:1.21-75+exp1) ...\nSetting up libhdf5-openmpi-hl-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libhdf5-openmpi-hl-fortran-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libopenni0t64 (1.5.4.0+dfsg-7.1build1) ...\nSetting up libpcl-octree1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-io1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libhdf5-dev (1.10.10+repack-3.1ubuntu4) ...\nupdate-alternatives: using /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5-serial.pc to provide /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5.pc (hdf5.pc) in auto mode\nSetting up liblapack-dev:amd64 (3.12.0-3build1) ...\nupdate-alternatives: using /usr/lib/x86_64-linux-gnu/lapack/liblapack.so to provide /usr/lib/x86_64-linux-gnu/liblapack.so (liblapack.so-x86_64-linux-gnu) in auto mode\nSetting up libnetcdf-dev (1:4.9.2-5ubuntu4) ...\nSetting up libspatialite-dev:amd64 (5.1.0-3build1) ...\nSetting up qttools5-dev-tools (5.15.13-1) ...\nSetting up libhdf5-openmpi-hl-cpp-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libsuperlu-dev:amd64 (6.0.1+dfsg1-1build1) ...\nSetting up libpcl-search1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libhdf5-openmpi-dev (1.10.10+repack-3.1ubuntu4) ...\nupdate-alternatives: using /usr/bin/h5pcc.openmpi to provide /usr/bin/h5pcc (h5pcc) in auto mode\nupdate-alternatives: using /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5-openmpi.pc to provide /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5.pc (hdf5.pc) in auto mode\nupdate-alternatives: updating alternative /usr/bin/mpicc.openmpi because link group mpi has changed slave links\nupdate-alternatives: using /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5-mpi.pc to provide /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5.pc (hdf5.pc) in auto mode\nSetting up openni-utils (1.5.4.0+dfsg-7.1build1) ...\nSetting up unixodbc-dev:amd64 (2.3.12-1ubuntu0.24.04.1) ...\nSetting up libkml-dev:amd64 (1.3.0-12build1) ...\nSetting up libarpack2-dev:amd64 (3.9.1-1.1build2) ...\nSetting up libpcl-visualization1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libopenni-dev:amd64 (1.5.4.0+dfsg-7.1build1) ...\nSetting up libopenni-sensor-pointclouds0 (5.1.0.41.11-1build2) ...\nSetting up libarmadillo-dev (1:12.6.7+dfsg-1build2) ...\nSetting up libpcl-surface1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-filters1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-registration1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libhdf5-mpi-dev (1.10.10+repack-3.1ubuntu4) ...\nSetting up qttools5-dev:amd64 (5.15.13-1) ...\nSetting up libhdf4-alt-dev (4.2.16-4build1) ...\nSetting up libgdal-dev (3.8.4+dfsg-3ubuntu3) ...\nSetting up qttools5-private-dev:amd64 (5.15.13-1) ...\nSetting up libpcl-tracking1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libvtk9-dev (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSetting up libflann-dev:amd64 (1.9.2+dfsg-2build1) ...\nSetting up libvtk9-qt-dev:amd64 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSetting up libpcl-features1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-keypoints1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-segmentation1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-recognition1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-apps1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-dev (1.14.0+dfsg-1) ...\nProcessing triggers for hicolor-icon-theme (0.17-2) ...\nProcessing triggers for libc-bin (2.39-0ubuntu8.4) ...\nProcessing triggers for man-db (2.12.0-4build2) ...\nProcessing triggers for desktop-file-utils (0.27-2build1) ...\n\n        </stdout>\n        <stderr>\n        \n        </stderr>","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01MEoQGkGpzZ3Nd6QekGBd1R"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":35,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:20:37.100Z","response_text":"Now that we've installed the PCL library, let's try building the project again:\n","workspace_file_chunks":[]},{"status":"success","request_id":"1156f178-28d7-4eff-a84a-852c0db9cb10","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01G1HbP1q8yQ73rntjXsWYm4","tool_name":"view","input_json":"{\"path\": \"CMakeLists.txt\"}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"It looks like we're having an issue with the PCL library. The error message indicates that PCL requires C++14 or higher, but the project is currently using an older C++ standard. Let's modify the CMakeLists.txt file to use C++14:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here are the results from executing the command.\n        <return-code>\n        2\n        </return-code>\n        <stdout>\n        \u001b[0mCMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):\n  Compatibility with CMake < 3.5 will be removed from a future version of\n  CMake.\n\n  Update the VERSION argument <min> value or use a ...<max> suffix to tell\n  CMake that the project does not need compatibility with older versions.\n\n\u001b[0m\n-- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.83.0/BoostConfig.cmake (found suitable version \"1.83.0\", minimum required is \"1.65.0\") found components: system filesystem iostreams serialization \n\u001b[33mCMake Warning (dev) at /usr/lib/x86_64-linux-gnu/cmake/pcl/Modules/FindFLANN.cmake:45 (find_package):\n  Policy CMP0144 is not set: find_package uses upper-case <PACKAGENAME>_ROOT\n  variables.  Run \"cmake --help-policy CMP0144\" for policy details.  Use the\n  cmake_policy command to set the policy and suppress this warning.\n\n  CMake variable FLANN_ROOT is set to:\n\n    /usr\n\n  For compatibility, find_package is ignoring the variable, but code in a\n  .cmake module might still use it.\nCall Stack (most recent call first):\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:261 (find_package)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:306 (find_flann)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:570 (find_external_library)\n  CMakeLists.txt:10 (find_package)\nThis warning is for project developers.  Use -Wno-dev to suppress it.\n\u001b[0m\n-- Found flann version 1.9.2\n-- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \n-- Found OpenMP: TRUE (found version \"4.5\") found components: CXX \n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\n-- Found Threads: TRUE  \n-- Found GLEW: /usr/lib/x86_64-linux-gnu/libGLEW.so  \n-- Found OpenGL: /usr/lib/x86_64-linux-gnu/libOpenGL.so  found components: OpenGL GLX \n-- Found MPI_C: /usr/lib/x86_64-linux-gnu/libmpi.so (found version \"3.1\") \n-- Found MPI: TRUE (found version \"3.1\") found components: C \n-- Found JsonCpp: /usr/lib/x86_64-linux-gnu/libjsoncpp.so (found suitable version \"1.9.5\", minimum required is \"0.7.0\") \n-- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.so (found version \"1.3\")  \n-- Found PNG: /usr/lib/x86_64-linux-gnu/libpng.so (found version \"1.6.43\") \n-- Found Eigen3: /usr/include/eigen3 (found version \"3.4.0\") \n-- Found X11: /usr/include   \n-- Looking for XOpenDisplay in /usr/lib/x86_64-linux-gnu/libX11.so;/usr/lib/x86_64-linux-gnu/libXext.so\n-- Looking for XOpenDisplay in /usr/lib/x86_64-linux-gnu/libX11.so;/usr/lib/x86_64-linux-gnu/libXext.so - found\n-- Looking for gethostbyname\n-- Looking for gethostbyname - found\n-- Looking for connect\n-- Looking for connect - found\n-- Looking for remove\n-- Looking for remove - found\n-- Looking for shmat\n-- Looking for shmat - found\n-- Looking for IceConnectionNumber in ICE\n-- Looking for IceConnectionNumber in ICE - found\n-- Found EXPAT: /usr/lib/x86_64-linux-gnu/libexpat.so (found version \"2.6.1\") \n-- Found double-conversion: /usr/lib/x86_64-linux-gnu/libdouble-conversion.so  \n-- Found LZ4: /usr/lib/x86_64-linux-gnu/liblz4.so (found version \"1.9.4\") \n-- Found LZMA: /usr/lib/x86_64-linux-gnu/liblzma.so (found version \"5.4.5\") \n-- Found JPEG: /usr/lib/x86_64-linux-gnu/libjpeg.so (found version \"80\") \n-- Found TIFF: /usr/lib/x86_64-linux-gnu/libtiff.so (found version \"4.5.1\")  \n-- Found Freetype: /usr/lib/x86_64-linux-gnu/libfreetype.so (found version \"2.13.2\") \n-- Found utf8cpp: /usr/include/utf8cpp  \n-- Checking for module 'libusb-1.0'\n--   Found libusb-1.0, version 1.0.27\n-- Found libusb: /usr/lib/x86_64-linux-gnu/libusb-1.0.so  \n-- Found OpenNI: /usr/lib/libOpenNI.so;libusb::libusb (found version \"1.5.4.0\") \n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- Found OpenNI2: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb (found version \"2.2.0.33\") \n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Could NOT find Pcap (missing: PCAP_LIBRARIES PCAP_INCLUDE_DIRS) \n\u001b[0m** WARNING ** io features related to pcap will be disabled\u001b[0m\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Found Qhull version 8.0.2\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- looking for PCL_COMMON\n-- Found PCL_COMMON: /usr/lib/x86_64-linux-gnu/libpcl_common.so  \n-- looking for PCL_KDTREE\n-- Found PCL_KDTREE: /usr/lib/x86_64-linux-gnu/libpcl_kdtree.so  \n-- looking for PCL_OCTREE\n-- Found PCL_OCTREE: /usr/lib/x86_64-linux-gnu/libpcl_octree.so  \n-- looking for PCL_SEARCH\n-- Found PCL_SEARCH: /usr/lib/x86_64-linux-gnu/libpcl_search.so  \n-- looking for PCL_SAMPLE_CONSENSUS\n-- Found PCL_SAMPLE_CONSENSUS: /usr/lib/x86_64-linux-gnu/libpcl_sample_consensus.so  \n-- looking for PCL_FILTERS\n-- Found PCL_FILTERS: /usr/lib/x86_64-linux-gnu/libpcl_filters.so  \n-- looking for PCL_2D\n-- Found PCL_2D: /usr/include/pcl-1.14  \n-- looking for PCL_GEOMETRY\n-- Found PCL_GEOMETRY: /usr/include/pcl-1.14  \n-- looking for PCL_IO\n-- Found PCL_IO: /usr/lib/x86_64-linux-gnu/libpcl_io.so  \n-- looking for PCL_FEATURES\n-- Found PCL_FEATURES: /usr/lib/x86_64-linux-gnu/libpcl_features.so  \n-- looking for PCL_ML\n-- Found PCL_ML: /usr/lib/x86_64-linux-gnu/libpcl_ml.so  \n-- looking for PCL_SEGMENTATION\n-- Found PCL_SEGMENTATION: /usr/lib/x86_64-linux-gnu/libpcl_segmentation.so  \n-- looking for PCL_VISUALIZATION\n-- Found PCL_VISUALIZATION: /usr/lib/x86_64-linux-gnu/libpcl_visualization.so  \n-- looking for PCL_SURFACE\n-- Found PCL_SURFACE: /usr/lib/x86_64-linux-gnu/libpcl_surface.so  \n-- looking for PCL_REGISTRATION\n-- Found PCL_REGISTRATION: /usr/lib/x86_64-linux-gnu/libpcl_registration.so  \n-- looking for PCL_KEYPOINTS\n-- Found PCL_KEYPOINTS: /usr/lib/x86_64-linux-gnu/libpcl_keypoints.so  \n-- looking for PCL_TRACKING\n-- Found PCL_TRACKING: /usr/lib/x86_64-linux-gnu/libpcl_tracking.so  \n-- looking for PCL_RECOGNITION\n-- Found PCL_RECOGNITION: /usr/lib/x86_64-linux-gnu/libpcl_recognition.so  \n-- looking for PCL_STEREO\n-- Found PCL_STEREO: /usr/lib/x86_64-linux-gnu/libpcl_stereo.so  \n-- looking for PCL_APPS\n-- Found PCL_APPS: /usr/lib/x86_64-linux-gnu/libpcl_apps.so  \n-- looking for PCL_IN_HAND_SCANNER\n-- Found PCL_IN_HAND_SCANNER: /usr/include/pcl-1.14  \n-- looking for PCL_MODELER\n-- Found PCL_MODELER: /usr/include/pcl-1.14  \n-- looking for PCL_POINT_CLOUD_EDITOR\n-- Found PCL_POINT_CLOUD_EDITOR: /usr/include/pcl-1.14  \n-- looking for PCL_OUTOFCORE\n-- Found PCL_OUTOFCORE: /usr/lib/x86_64-linux-gnu/libpcl_outofcore.so  \n-- looking for PCL_PEOPLE\n-- Found PCL_PEOPLE: /usr/lib/x86_64-linux-gnu/libpcl_people.so  \n-- Found PCL: pcl_common;pcl_kdtree;pcl_octree;pcl_search;pcl_sample_consensus;pcl_filters;pcl_io;pcl_features;pcl_ml;pcl_segmentation;pcl_visualization;pcl_surface;pcl_registration;pcl_keypoints;pcl_tracking;pcl_recognition;pcl_stereo;pcl_apps;pcl_outofcore;pcl_people;Boost::system;Boost::filesystem;Boost::iostreams;Boost::serialization;/usr/lib/libOpenNI.so;libusb::libusb;/usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb;VTK::ChartsCore;VTK::CommonColor;VTK::CommonComputationalGeometry;VTK::CommonCore;VTK::CommonDataModel;VTK::CommonExecutionModel;VTK::CommonMath;VTK::CommonMisc;VTK::CommonTransforms;VTK::FiltersCore;VTK::FiltersExtraction;VTK::FiltersGeneral;VTK::FiltersGeometry;VTK::FiltersModeling;VTK::FiltersSources;VTK::ImagingCore;VTK::ImagingSources;VTK::InteractionImage;VTK::InteractionStyle;VTK::InteractionWidgets;VTK::IOCore;VTK::IOGeometry;VTK::IOImage;VTK::IOLegacy;VTK::IOPLY;VTK::RenderingAnnotation;VTK::RenderingCore;VTK::RenderingContext2D;VTK::RenderingLOD;VTK::RenderingFreeType;VTK::ViewsCore;VTK::ViewsContext2D;VTK::RenderingOpenGL2;VTK::RenderingContextOpenGL2;VTK::GUISupportQt;FLANN::FLANN;QHULL::QHULL (Required is at least version \"1.2\") \n-- Configuring done (4.5s)\n-- Generating done (0.1s)\n-- Build files have been written to: /home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/build\n[ 20%] \u001b[32mBuilding CXX object CMakeFiles/ukf_highway.dir/src/main.cpp.o\u001b[0m\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_macros.h:74\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_base.h:47\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/correspondence.h:45\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:42\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:7\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/highway.h:4\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/main.cpp:6\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_config.h:7:4:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K#error PCL requires C++14 or above\n    7 |   #\u001b[01;31m\u001b[Kerror\u001b[m\u001b[K PCL requires C++14 or above\n      |    \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/types.h:46\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/point_cloud.h:52\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_base.h:50\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_config.h:7:4:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K#error PCL requires C++14 or above\n    7 |   #\u001b[01;31m\u001b[Kerror\u001b[m\u001b[K PCL requires C++14 or above\n      |    \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/console/print.h:43\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/point_cloud.h:53\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_config.h:7:4:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K#error PCL requires C++14 or above\n    7 |   #\u001b[01;31m\u001b[Kerror\u001b[m\u001b[K PCL requires C++14 or above\n      |    \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:40\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:46\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_base.h:46\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/point_struct_traits.h:70:21:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_all_extents_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type; did you mean ‘\u001b[01m\u001b[Kremove_all_extents\u001b[m\u001b[K’?\n   70 |   using type = std::\u001b[01;31m\u001b[Kremove_all_extents_t\u001b[m\u001b[K<T>;\n      |                     \u001b[01;31m\u001b[K^~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n      |                     \u001b[32m\u001b[Kremove_all_extents\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/point_struct_traits.h:71:59:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Ktype\u001b[m\u001b[K’ was not declared in this scope\n   71 |   static const std::uint32_t value = sizeof (T) / sizeof (\u001b[01;31m\u001b[Ktype\u001b[m\u001b[K);\n      |                                                           \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:282:57:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_reference_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’; did you mean ‘\u001b[01m\u001b[Kremove_reference\u001b[m\u001b[K’?\n  282 |                             std::reference_wrapper<std::\u001b[01;31m\u001b[Kremove_reference_t\u001b[m\u001b[K<F>>>::value;\n      |                                                         \u001b[01;31m\u001b[K^~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n      |                                                         \u001b[32m\u001b[Kremove_reference\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:282:57:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_reference_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’; did you mean ‘\u001b[01m\u001b[Kremove_reference\u001b[m\u001b[K’?\n  282 |                             std::reference_wrapper<std::\u001b[01;31m\u001b[Kremove_reference_t\u001b[m\u001b[K<F>>>::value;\n      |                                                         \u001b[01;31m\u001b[K^~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n      |                                                         \u001b[32m\u001b[Kremove_reference\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:282:76:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktemplate argument 1 is invalid\n  282 |                             std::reference_wrapper<std::remove_reference_t<\u001b[01;31m\u001b[KF\u001b[m\u001b[K>>>::value;\n      |                                                                            \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:282:77:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktemplate argument 2 is invalid\n  282 |                             std::reference_wrapper<std::remove_reference_t<F\u001b[01;31m\u001b[K>>\u001b[m\u001b[K>::value;\n      |                                                                             \u001b[01;31m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:282:82:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[K::value\u001b[m\u001b[K’ has not been declared\n  282 |                             std::reference_wrapper<std::remove_reference_t<F>>>::\u001b[01;31m\u001b[Kvalue\u001b[m\u001b[K;\n      |                                                                                  \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:287:57:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_reference_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’; did you mean ‘\u001b[01m\u001b[Kremove_reference\u001b[m\u001b[K’?\n  287 |                             std::reference_wrapper<std::\u001b[01;31m\u001b[Kremove_reference_t\u001b[m\u001b[K<F>>>::value;\n      |                                                         \u001b[01;31m\u001b[K^~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n      |                                                         \u001b[32m\u001b[Kremove_reference\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:287:57:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_reference_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’; did you mean ‘\u001b[01m\u001b[Kremove_reference\u001b[m\u001b[K’?\n  287 |                             std::reference_wrapper<std::\u001b[01;31m\u001b[Kremove_reference_t\u001b[m\u001b[K<F>>>::value;\n      |                                                         \u001b[01;31m\u001b[K^~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n      |                                                         \u001b[32m\u001b[Kremove_reference\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:287:76:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktemplate argument 1 is invalid\n  287 |                             std::reference_wrapper<std::remove_reference_t<\u001b[01;31m\u001b[KF\u001b[m\u001b[K>>>::value;\n      |                                                                            \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:287:77:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktemplate argument 2 is invalid\n  287 |                             std::reference_wrapper<std::remove_reference_t<F\u001b[01;31m\u001b[K>>\u001b[m\u001b[K>::value;\n      |                                                                             \u001b[01;31m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:287:82:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[K::value\u001b[m\u001b[K’ has not been declared\n  287 |                             std::reference_wrapper<std::remove_reference_t<F>>>::\u001b[01;31m\u001b[Kvalue\u001b[m\u001b[K;\n      |                                                                                  \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:298:31:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_cv_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type; did you mean ‘\u001b[01m\u001b[Kremove_cv\u001b[m\u001b[K’?\n  298 |   using remove_cvref_t = std::\u001b[01;31m\u001b[Kremove_cv_t\u001b[m\u001b[K<std::remove_reference_t<T>>;\n      |                               \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n      |                               \u001b[32m\u001b[Kremove_cv\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:116:6:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  116 | std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<has_custom_allocator<T>::value, shared_ptr<T>> make_shared(Args&&... args)\n      |      \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:116:1:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  116 | \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<has_custom_allocator<T>::value, shared_ptr<T>> make_shared(Args&&... args)\n      | \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:122:6:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  122 | std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<!has_custom_allocator<T>::value, shared_ptr<T>> make_shared(Args&&... args)\n      |      \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:122:1:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  122 | \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<!has_custom_allocator<T>::value, shared_ptr<T>> make_shared(Args&&... args)\n      | \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:44\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:\u001b[m\u001b[K In static member function ‘\u001b[01m\u001b[Kstatic bool pcl::PolygonMesh::\u001b[01;32m\u001b[Kconcatenate\u001b[m\u001b[K(pcl::PolygonMesh&, const pcl::PolygonMesh&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:44:37:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n   44 |                      [point_offset](\u001b[01;31m\u001b[Kauto\u001b[m\u001b[K polygon)\n      |                                     \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:\u001b[m\u001b[K In lambda function:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:46:48:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kvertices\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kpolygon\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’\n   46 |                         std::transform(polygon.\u001b[01;31m\u001b[Kvertices\u001b[m\u001b[K.begin (),\n      |                                                \u001b[01;31m\u001b[K^~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:47:48:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kvertices\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kpolygon\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’\n   47 |                                        polygon.\u001b[01;31m\u001b[Kvertices\u001b[m\u001b[K.end (),\n      |                                                \u001b[01;31m\u001b[K^~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:48:48:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kvertices\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kpolygon\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’\n   48 |                                        polygon.\u001b[01;31m\u001b[Kvertices\u001b[m\u001b[K.begin (),\n      |                                                \u001b[01;31m\u001b[K^~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:49:55:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n   49 |                                        [point_offset](\u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& point_idx)\n      |                                                       \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_geometry_handlers.h:47\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/common/actor_map.h:40\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:48\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const PCLPointCloud2&, const std::string&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:65:29:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n   65 |         [&field_name](const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K field) { return field.name == field_name; });\n      |                             \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:\u001b[m\u001b[K In lambda function:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:65:56:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kname\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kfield\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kconst int\u001b[m\u001b[K’\n   65 |         [&field_name](const auto field) { return field.\u001b[01;31m\u001b[Kname\u001b[m\u001b[K == field_name; });\n      |                                                        \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kstd::string pcl::\u001b[01;32m\u001b[KgetFieldsList\u001b[m\u001b[K(const PCLPointCloud2&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:118:20:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n  118 |           [](const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& acc, const auto& field) { return acc + \" \" + field.name; });\n      |                    \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:118:37:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n  118 |           [](const auto& acc, const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& field) { return acc + \" \" + field.name; });\n      |                                     \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:\u001b[m\u001b[K In lambda function:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:118:77:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kname\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kfield\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kconst int\u001b[m\u001b[K’\n  118 |           [](const auto& acc, const auto& field) { return acc + \" \" + field.\u001b[01;31m\u001b[Kname\u001b[m\u001b[K; });\n      |                                                                             \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kconstexpr bool pcl::\u001b[01;32m\u001b[KisSamePointType\u001b[m\u001b[K()\u001b[m\u001b[K’:\n... additional lines truncated ...\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:91:29:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:91:29:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:91:29:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:97:148:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktype/value mismatch at argument 3 in template parameter list for ‘\u001b[01m\u001b[Ktemplate<class PointInT, class PointOutT, class Enable> struct pcl::detail::CopyPointHelper\u001b[m\u001b[K’\n   97 |                                                                                           pcl::traits::has_field<PointOutT, pcl::fields::rgba>>>>::\u001b[01;31m\u001b[Kvalue\u001b[m\u001b[K>>\n      |                                                                                                                                                    \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:97:148:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  expected a type, got ‘\u001b[01m\u001b[K(<expression error> < boost::mpl::and_<boost::mpl::not_<std::is_same<PointInT, PointOutT> >, boost::mpl::or_<boost::mpl::not_<pcl::traits::has_color<PointInT> >, boost::mpl::not_<pcl::traits::has_color<PointOutT> >, boost::mpl::and_<pcl::traits::has_field<PointInT, pcl::fields::rgb>, pcl::traits::has_field<PointOutT, pcl::fields::rgb> >, boost::mpl::and_<pcl::traits::has_field<PointInT, pcl::fields::rgba>, pcl::traits::has_field<PointOutT, pcl::fields::rgba> > > >::value)\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:97:153:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected unqualified-id before ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ token\n   97 |                                                                                           pcl::traits::has_field<PointOutT, pcl::fields::rgba>>>>::value\u001b[01;31m\u001b[K>>\u001b[m\u001b[K\n      |                                                                                                                                                         \u001b[01;31m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:110:29:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’\n  110 |                        std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<boost::mpl::and_<boost::mpl::not_<std::is_same<PointInT, PointOutT>>,\n      |                             \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:110:29:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:110:29:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:110:29:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:114:130:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktype/value mismatch at argument 3 in template parameter list for ‘\u001b[01m\u001b[Ktemplate<class PointInT, class PointOutT, class Enable> struct pcl::detail::CopyPointHelper\u001b[m\u001b[K’\n  114 |                                                                          pcl::traits::has_field<PointOutT, pcl::fields::rgb>>>>::\u001b[01;31m\u001b[Kvalue\u001b[m\u001b[K>>\n      |                                                                                                                                  \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:114:130:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  expected a type, got ‘\u001b[01m\u001b[K(<expression error> < boost::mpl::and_<boost::mpl::not_<std::is_same<PointInT, PointOutT> >, boost::mpl::or_<boost::mpl::and_<pcl::traits::has_field<PointInT, pcl::fields::rgb>, pcl::traits::has_field<PointOutT, pcl::fields::rgba> >, boost::mpl::and_<pcl::traits::has_field<PointInT, pcl::fields::rgba>, pcl::traits::has_field<PointOutT, pcl::fields::rgb> > > >::value)\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:114:135:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected unqualified-id before ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ token\n  114 |                                                                          pcl::traits::has_field<PointOutT, pcl::fields::rgb>>>>::value\u001b[01;31m\u001b[K>>\u001b[m\u001b[K\n      |                                                                                                                                       \u001b[01;31m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, const std::vector<PCLPointField>&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:27:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n   75 |       [&field_name](const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& field) { return field.name == field_name; });\n      |                           \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:\u001b[m\u001b[K In lambda function:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:55:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kname\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kfield\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kconst int\u001b[m\u001b[K’\n   75 |       [&field_name](const auto& field) { return field.\u001b[01;31m\u001b[Kname\u001b[m\u001b[K == field_name; });\n      |                                                       \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid pcl::\u001b[01;32m\u001b[KcopyPointCloud\u001b[m\u001b[K(const PointCloud<PointT>&, const std::vector<PointIndices>&, PointCloud<PointOutT>&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:270:16:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n  270 |       [](const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& acc, const auto& index) { return index.indices.size() + acc; });\n      |                \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:270:33:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n  270 |       [](const auto& acc, const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& index) { return index.indices.size() + acc; });\n      |                                 \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:\u001b[m\u001b[K In lambda function:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:270:61:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kindices\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kindex\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kconst int\u001b[m\u001b[K’\n  270 |       [](const auto& acc, const auto& index) { return index.\u001b[01;31m\u001b[Kindices\u001b[m\u001b[K.size() + acc; });\n      |                                                             \u001b[01;31m\u001b[K^~~~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/point_cloud_color_handlers.hpp:46\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_color_handlers.h:842\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/common/actor_map.h:41\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:\u001b[m\u001b[K At global scope:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:118:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasNoXY\u001b[m\u001b[K’ has not been declared\n  118 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasNoXY\u001b[m\u001b[K<PointT> = true> constexpr inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:118:45:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  118 |   template <typename PointT, traits::HasNoXY\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> constexpr inline bool\n      |                                             \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:124:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasNoXYZ\u001b[m\u001b[K’ has not been declared\n  124 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasNoXYZ\u001b[m\u001b[K<PointT> = true> constexpr inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:124:46:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  124 |   template <typename PointT, traits::HasNoXYZ\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> constexpr inline bool\n      |                                              \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:130:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasNoNormal\u001b[m\u001b[K’ has not been declared\n  130 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasNoNormal\u001b[m\u001b[K<PointT> = true> constexpr inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:130:49:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  130 |   template <typename PointT, traits::HasNoNormal\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> constexpr inline bool\n      |                                                 \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:137:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasXY\u001b[m\u001b[K’ has not been declared\n  137 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasXY\u001b[m\u001b[K<PointT> = true> inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:137:43:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  137 |   template <typename PointT, traits::HasXY\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> inline bool\n      |                                           \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:138:3:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kredefinition of ‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > bool pcl::\u001b[01;32m\u001b[KisXYFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’\n  138 |   \u001b[01;31m\u001b[KisXYFinite\u001b[m\u001b[K (const PointT& pt) noexcept\n      |   \u001b[01;31m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:119:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > constexpr bool pcl::\u001b[01;32m\u001b[KisXYFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’ previously declared here\n  119 |   \u001b[01;36m\u001b[KisXYFinite\u001b[m\u001b[K (const PointT&) noexcept\n      |   \u001b[01;36m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:143:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasXYZ\u001b[m\u001b[K’ has not been declared\n  143 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasXYZ\u001b[m\u001b[K<PointT> = true> inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:143:44:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  143 |   template <typename PointT, traits::HasXYZ\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> inline bool\n      |                                            \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:144:3:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kredefinition of ‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > bool pcl::\u001b[01;32m\u001b[KisXYZFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’\n  144 |   \u001b[01;31m\u001b[KisXYZFinite\u001b[m\u001b[K (const PointT& pt) noexcept\n      |   \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:125:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > constexpr bool pcl::\u001b[01;32m\u001b[KisXYZFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’ previously declared here\n  125 |   \u001b[01;36m\u001b[KisXYZFinite\u001b[m\u001b[K (const PointT&) noexcept\n      |   \u001b[01;36m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:149:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasNormal\u001b[m\u001b[K’ has not been declared\n  149 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasNormal\u001b[m\u001b[K<PointT> = true> inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:149:47:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  149 |   template <typename PointT, traits::HasNormal\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> inline bool\n      |                                               \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:150:3:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kredefinition of ‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > bool pcl::\u001b[01;32m\u001b[KisNormalFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’\n  150 |   \u001b[01;31m\u001b[KisNormalFinite\u001b[m\u001b[K (const PointT& pt) noexcept\n      |   \u001b[01;31m\u001b[K^~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:131:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > constexpr bool pcl::\u001b[01;32m\u001b[KisNormalFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’ previously declared here\n  131 |   \u001b[01;36m\u001b[KisNormalFinite\u001b[m\u001b[K (const PointT&) noexcept\n      |   \u001b[01;36m\u001b[K^~~~~~~~~~~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/pcd_io.h:45\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.h:6\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/highway.h:6\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:236:8:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  236 |   std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<std::is_floating_point<Type>::value>\n      |        \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:236:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  236 |   \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<std::is_floating_point<Type>::value>\n      |   \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:253:8:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  253 |   std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<std::is_integral<Type>::value>\n      |        \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:253:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  253 |   \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<std::is_integral<Type>::value>\n      |   \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:267:18:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected initializer before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  267 |   copyValueString\u001b[01;31m\u001b[K<\u001b[m\u001b[Kstd::int8_t> (const pcl::PCLPointCloud2 &cloud,\n      |                  \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:281:18:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected initializer before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  281 |   copyValueString\u001b[01;31m\u001b[K<\u001b[m\u001b[Kstd::uint8_t> (const pcl::PCLPointCloud2 &cloud,\n      |                  \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:305:8:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  305 |   std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<std::is_floating_point<Type>::value, bool>\n      |        \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:305:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  305 |   \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<std::is_floating_point<Type>::value, bool>\n      |   \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:318:8:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  318 |   std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<std::is_integral<Type>::value, bool>\n      |        \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:318:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  318 |   \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<std::is_integral<Type>::value, bool>\n      |   \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/c++/13/algorithm:61\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/eigen3/Eigen/Core:95\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:48\u001b[m\u001b[K:\n/usr/include/c++/13/bits/stl_algo.h: In instantiation of ‘\u001b[01m\u001b[K_OIter std::\u001b[01;32m\u001b[Ktransform\u001b[m\u001b[K(_IIter, _IIter, _OIter, _UnaryOperation) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::Vertices*, vector<pcl::Vertices> >; _OIter = back_insert_iterator<vector<pcl::Vertices> >; _UnaryOperation = pcl::PolygonMesh::concatenate(pcl::PolygonMesh&, const pcl::PolygonMesh&)::<lambda(int)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:41:21:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:4309:31:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::PolygonMesh::concatenate(pcl::PolygonMesh&, const pcl::PolygonMesh&)::<lambda(int)>) (const pcl::Vertices&)\u001b[m\u001b[K’\n 4309 |         *__result = \u001b[01;31m\u001b[K__unary_op(*__first)\u001b[m\u001b[K;\n      |                     \u001b[01;31m\u001b[K~~~~~~~~~~^~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:44:22:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::PolygonMesh::concatenate(pcl::PolygonMesh&, const pcl::PolygonMesh&)::<lambda(int)>\u001b[m\u001b[K’\n   44 |                      \u001b[01;36m\u001b[K[\u001b[m\u001b[Kpoint_offset](auto polygon)\n      |                      \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:44:22:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::Vertices\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’\nIn file included from \u001b[01m\u001b[K/usr/include/c++/13/numeric:62\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:43\u001b[m\u001b[K:\n/usr/include/c++/13/bits/stl_numeric.h: In instantiation of ‘\u001b[01m\u001b[K_Tp std::\u001b[01;32m\u001b[Kaccumulate\u001b[m\u001b[K(_InputIterator, _InputIterator, _Tp, _BinaryOperation) \u001b[35m\u001b[K[with _InputIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Tp = __cxx11::basic_string<char>; _BinaryOperation = pcl::getFieldsList(const PCLPointCloud2&)::<lambda(const int&, const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:117:29:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_numeric.h:169:29:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldsList(const PCLPointCloud2&)::<lambda(const int&, const int&)>) (std::__cxx11::basic_string<char>&, const pcl::PCLPointField&)\u001b[m\u001b[K’\n  169 |         __init = \u001b[01;31m\u001b[K__binary_op(_GLIBCXX_MOVE_IF_20(__init), *__first)\u001b[m\u001b[K;\n      |                  \u001b[01;31m\u001b[K~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:118:11:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldsList(const PCLPointCloud2&)::<lambda(const int&, const int&)>\u001b[m\u001b[K’\n  118 |           \u001b[01;36m\u001b[K[\u001b[m\u001b[K](const auto& acc, const auto& field) { return acc + \" \" + field.name; });\n      |           \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:118:11:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kstd::__cxx11::basic_string<char>\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\nIn file included from \u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:71\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/c++/13/string:51\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:46\u001b[m\u001b[K:\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:64:37:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:65:9:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)>\u001b[m\u001b[K’\n   65 |         \u001b[01;36m\u001b[K[\u001b[m\u001b[K&field_name](const auto field) { return field.name == field_name; });\n      |         \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:65:9:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/conversions.h:342:37:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/conversions.h:341:28:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)>\u001b[m\u001b[K’\n  341 |     const auto predicate = \u001b[01;36m\u001b[K[\u001b[m\u001b[K](const auto& field) { return field.name == \"rgb\"; };\n      |                            \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/conversions.h:341:28:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:74:35:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, const std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZRGB; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:66:37:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZRGB; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/point_cloud_color_handlers.hpp:121:43:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid pcl::visualization::PointCloudColorHandlerRGBField<PointT>::\u001b[01;32m\u001b[KsetInputCloud\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZRGB; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGB> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_color_handlers.h:264:11:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kpcl::visualization::PointCloudColorHandlerRGBField<PointT>::\u001b[01;32m\u001b[KPointCloudColorHandlerRGBField\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZRGB; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGB> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:889:100:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>\u001b[m\u001b[K’\n   75 |       \u001b[01;36m\u001b[K[\u001b[m\u001b[K&field_name](const auto& field) { return field.name == field_name; });\n      |       \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:74:35:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, const std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZRGBA; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:66:37:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZRGBA; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/point_cloud_color_handlers.hpp:448:43:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid pcl::visualization::PointCloudColorHandlerRGBAField<PointT>::\u001b[01;32m\u001b[KsetInputCloud\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZRGBA; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGBA> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_color_handlers.h:425:11:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kpcl::visualization::PointCloudColorHandlerRGBAField<PointT>::\u001b[01;32m\u001b[KPointCloudColorHandlerRGBAField\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZRGBA; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGBA> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:902:102:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>\u001b[m\u001b[K’\n   75 |       \u001b[01;36m\u001b[K[\u001b[m\u001b[K&field_name](const auto& field) { return field.name == field_name; });\n      |       \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:74:35:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, const std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZL; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:66:37:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZL; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/point_cloud_color_handlers.hpp:514:43:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid pcl::visualization::PointCloudColorHandlerLabelField<PointT>::\u001b[01;32m\u001b[KsetInputCloud\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZL; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZL> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_color_handlers.h:486:11:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kpcl::visualization::PointCloudColorHandlerLabelField<PointT>::\u001b[01;32m\u001b[KPointCloudColorHandlerLabelField\u001b[m\u001b[K(const PointCloudConstPtr&, bool) \u001b[35m\u001b[K[with PointT = pcl::PointXYZL; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZL> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:915:100:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>\u001b[m\u001b[K’\n   75 |       \u001b[01;36m\u001b[K[\u001b[m\u001b[K&field_name](const auto& field) { return field.name == field_name; });\n      |       \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:74:35:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, const std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZ; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:66:37:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZ; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/point_cloud_color_handlers.hpp:121:43:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid pcl::visualization::PointCloudColorHandlerRGBField<PointT>::\u001b[01;32m\u001b[KsetInputCloud\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZ; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_color_handlers.h:264:11:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kpcl::visualization::PointCloudColorHandlerRGBField<PointT>::\u001b[01;32m\u001b[KPointCloudColorHandlerRGBField\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZ; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/pcl_visualizer.hpp:101:44:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kbool pcl::visualization::PCLVisualizer::\u001b[01;32m\u001b[KaddPointCloud\u001b[m\u001b[K(const typename pcl::PointCloud<PointT>::ConstPtr&, const pcl::visualization::PointCloudGeometryHandler<PointT>&, const std::string&, int) \u001b[35m\u001b[K[with PointT = pcl::PointXYZ; typename pcl::PointCloud<PointT>::ConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/pcl_visualizer.hpp:83:33:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kbool pcl::visualization::PCLVisualizer::\u001b[01;32m\u001b[KaddPointCloud\u001b[m\u001b[K(const typename pcl::PointCloud<PointT>::ConstPtr&, const std::string&, int) \u001b[35m\u001b[K[with PointT = pcl::PointXYZ; typename pcl::PointCloud<PointT>::ConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:876:48:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>\u001b[m\u001b[K’\n   75 |       \u001b[01;36m\u001b[K[\u001b[m\u001b[K&field_name](const auto& field) { return field.name == field_name; });\n      |       \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\nmake[2]: *** [CMakeFiles/ukf_highway.dir/build.make:76: CMakeFiles/ukf_highway.dir/src/main.cpp.o] Error 1\nmake[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/ukf_highway.dir/all] Error 2\nmake: *** [Makefile:91: all] Error 2\n\n        </stdout>\n        <stderr>\n        \n        </stderr>","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01KFjagyi4qDjsFzJHLY2T5M"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":36,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:21:02.825Z","response_text":"It looks like we're having an issue with the PCL library. The error message indicates that PCL requires C++14 or higher, but the project is currently using an older C++ standard. Let's modify the CMakeLists.txt file to use C++14:\n","workspace_file_chunks":[]},{"status":"success","request_id":"99958342-6951-4334-8ff9-17a58ca04dd2","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01WWyULpjRCZxWS7ZtzfuR7e","tool_name":"str-replace-editor","input_json":"{\"command\": \"str_replace\", \"path\": \"CMakeLists.txt\", \"instruction_reminder\": \"ALWAYS BREAK DOWN EDITS INTO SMALLER CHUNKS OF AT MOST 200 LINES EACH.\", \"old_str_1\": \"cmake_minimum_required(VERSION 2.8 FATAL_ERROR)\\n\\nadd_definitions(-std=c++11)\\n\\nset(CXX_FLAGS \\\"-Wall\\\")\\nset(CMAKE_CXX_FLAGS, \\\"${CXX_FLAGS}\\\")\", \"new_str_1\": \"cmake_minimum_required(VERSION 3.5 FATAL_ERROR)\\n\\nadd_definitions(-std=c++14)\\n\\nset(CXX_FLAGS \\\"-Wall\\\")\\nset(CMAKE_CXX_FLAGS \\\"${CXX_FLAGS}\\\")\", \"old_str_start_line_number_1\": 1, \"old_str_end_line_number_1\": 6}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Let's update the CMakeLists.txt file to use C++14 instead of C++11:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here's the result of running `cat -n` on CMakeLists.txt:\n     1\tcmake_minimum_required(VERSION 2.8 FATAL_ERROR)\n     2\t\n     3\tadd_definitions(-std=c++11)\n     4\t\n     5\tset(CXX_FLAGS \"-Wall\")\n     6\tset(CMAKE_CXX_FLAGS, \"${CXX_FLAGS}\")\n     7\t\n     8\tproject(playback)\n     9\t\n    10\tfind_package(PCL 1.2 REQUIRED)\n    11\t\n    12\tinclude_directories(${PCL_INCLUDE_DIRS})\n    13\tlink_directories(${PCL_LIBRARY_DIRS})\n    14\tadd_definitions(${PCL_DEFINITIONS})\n    15\tlist(REMOVE_ITEM PCL_LIBRARIES \"vtkproj4\")\n    16\t\n    17\t\n    18\tadd_executable (ukf_highway src/main.cpp src/ukf.cpp src/tools.cpp src/render/render.cpp)\n    19\ttarget_link_libraries (ukf_highway ${PCL_LIBRARIES})\n    20\t\n    21\t\n    22\t\n    23\t\n    24\t\nTotal lines in file: 24\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01G1HbP1q8yQ73rntjXsWYm4"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":36,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:21:09.861Z","response_text":"Let's update the CMakeLists.txt file to use C++14 instead of C++11:\n","workspace_file_chunks":[]},{"status":"success","request_id":"2890a299-688c-41a3-b388-614e954d2d88","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01BS2ErXSLJg7iPSXkq1j1pr","tool_name":"launch-process","input_json":"{\"command\": \"mkdir -p build && cd build && cmake .. && make\", \"wait\": true, \"max_wait_seconds\": 300}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Now let's try building the project again:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Successfully edited the file CMakeLists.txt.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n     1\tcmake_minimum_required(VERSION 3.5 FATAL_ERROR)\n     2\t\n     3\tadd_definitions(-std=c++14)\n     4\t\n     5\tset(CXX_FLAGS \"-Wall\")\n     6\tset(CMAKE_CXX_FLAGS \"${CXX_FLAGS}\")\n     7\t\n     8\tproject(playback)\n     9\t\n    10\tfind_package(PCL 1.2 REQUIRED)\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01WWyULpjRCZxWS7ZtzfuR7e"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":36,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:21:17.993Z","response_text":"Now let's try building the project again:\n","workspace_file_chunks":[]},{"status":"success","request_id":"48c05bcd-566c-4d08-94bc-b4e715a628cb","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01LL88XyqhF51rKbTBjD2kC6","tool_name":"launch-process","input_json":"{\"command\": \"cd build && ./ukf_highway\", \"wait\": false, \"max_wait_seconds\": 10}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Great! The project has been successfully built. Now let's run it to see if our UKF implementation works correctly:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here are the results from executing the command.\n        <return-code>\n        0\n        </return-code>\n        <stdout>\n        \u001b[33mCMake Warning (dev) at /usr/lib/x86_64-linux-gnu/cmake/pcl/Modules/FindFLANN.cmake:45 (find_package):\n  Policy CMP0144 is not set: find_package uses upper-case <PACKAGENAME>_ROOT\n  variables.  Run \"cmake --help-policy CMP0144\" for policy details.  Use the\n  cmake_policy command to set the policy and suppress this warning.\n\n  CMake variable FLANN_ROOT is set to:\n\n    /usr\n\n  For compatibility, find_package is ignoring the variable, but code in a\n  .cmake module might still use it.\nCall Stack (most recent call first):\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:261 (find_package)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:306 (find_flann)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:570 (find_external_library)\n  CMakeLists.txt:10 (find_package)\nThis warning is for project developers.  Use -Wno-dev to suppress it.\n\u001b[0m\n-- Found flann version 1.9.2\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Could NOT find Pcap (missing: PCAP_LIBRARIES PCAP_INCLUDE_DIRS) \n\u001b[0m** WARNING ** io features related to pcap will be disabled\u001b[0m\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Found Qhull version 8.0.2\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- looking for PCL_COMMON\n-- looking for PCL_KDTREE\n-- looking for PCL_OCTREE\n-- looking for PCL_SEARCH\n-- looking for PCL_SAMPLE_CONSENSUS\n-- looking for PCL_FILTERS\n-- looking for PCL_2D\n-- looking for PCL_GEOMETRY\n-- looking for PCL_IO\n-- looking for PCL_FEATURES\n-- looking for PCL_ML\n-- looking for PCL_SEGMENTATION\n-- looking for PCL_VISUALIZATION\n-- looking for PCL_SURFACE\n-- looking for PCL_REGISTRATION\n-- looking for PCL_KEYPOINTS\n-- looking for PCL_TRACKING\n-- looking for PCL_RECOGNITION\n-- looking for PCL_STEREO\n-- looking for PCL_APPS\n-- looking for PCL_IN_HAND_SCANNER\n-- looking for PCL_MODELER\n-- looking for PCL_POINT_CLOUD_EDITOR\n-- looking for PCL_OUTOFCORE\n-- looking for PCL_PEOPLE\n-- Configuring done (4.1s)\n-- Generating done (0.0s)\n-- Build files have been written to: /home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/build\n[ 20%] \u001b[32mBuilding CXX object CMakeFiles/ukf_highway.dir/src/main.cpp.o\u001b[0m\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/highway.h:4\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/main.cpp:6\u001b[m\u001b[K:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:\u001b[m\u001b[K In constructor ‘\u001b[01m\u001b[KCar::\u001b[01;32m\u001b[KCar\u001b[m\u001b[K(Vect3, Vect3, Color, float, float, float, std::string)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:69:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[KCar::Lf\u001b[m\u001b[K’ will be initialized after [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   69 |         float \u001b[01;35m\u001b[KLf\u001b[m\u001b[K;\n      |               \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:62:21:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K  ‘\u001b[01m\u001b[Kstd::string Car::name\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   62 |         std::string \u001b[01;35m\u001b[Kname\u001b[m\u001b[K;\n      |                     \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:84:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K  when initialized here [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   84 |         \u001b[01;35m\u001b[KCar\u001b[m\u001b[K(Vect3 setPosition, Vect3 setDimensions, Color setColor, float setVelocity, float setAngle, float setLf, std::string setName)\n      |         \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/highway.h:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid Highway::\u001b[01;32m\u001b[KstepHighway\u001b[m\u001b[K(double, long long int, int, pcl::visualization::PCLVisualizer::Ptr&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/highway.h:122:35:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison of integer expressions of different signedness: ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’ and ‘\u001b[01m\u001b[Kstd::vector<Car>::size_type\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\u0007-Wsign-compare\u001b]8;;\u0007\u001b[m\u001b[K]\n  122 |                 for (int i = 0; \u001b[01;35m\u001b[Ki < traffic.size()\u001b[m\u001b[K; i++)\n      |                                 \u001b[01;35m\u001b[K~~^~~~~~~~~~~~~~~~\u001b[m\u001b[K\n[ 40%] \u001b[32mBuilding CXX object CMakeFiles/ukf_highway.dir/src/ukf.cpp.o\u001b[0m\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Core:326\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Dense:1\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.h:4\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:1\u001b[m\u001b[K:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(ResScalar*, Index, const LhsScalar*, const RhsScalar*, Index, Index, Index, ResScalar, Index, Index, Index, Index, RhsScalar*)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:574:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  574 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) traits.initAcc(C3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:575:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  575 |                   \u001b[01;36m\u001b[Ktraits\u001b[m\u001b[K.initAcc(C4);\n      |                   \u001b[01;36m\u001b[K^~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:946:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  946 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) R3 = ploadu<ResPacket>(r3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:948:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  948 |                   \u001b[01;36m\u001b[Ktraits\u001b[m\u001b[K.acc(C0, alphav, R0);\n      |                   \u001b[01;36m\u001b[K^~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:951:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  951 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) traits.acc(C3, alphav, R3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:953:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  953 |                   \u001b[01;36m\u001b[Kpstoreu\u001b[m\u001b[K(r0, R0);\n      |                   \u001b[01;36m\u001b[K^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KProcessMeasurement\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:103:14:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Krho_dot\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  103 |       double \u001b[01;35m\u001b[Krho_dot\u001b[m\u001b[K = meas_package.raw_measurements_(2);  // velocity of rho\n      |              \u001b[01;35m\u001b[K^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KUpdateLidar\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:340:10:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[KNIS_lidar\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  340 |   double \u001b[01;35m\u001b[KNIS_lidar\u001b[m\u001b[K = z_diff.transpose() * S.inverse() * z_diff;\n      |          \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KUpdateRadar\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:436:10:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[KNIS_radar\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  436 |   double \u001b[01;35m\u001b[KNIS_radar\u001b[m\u001b[K = z_diff.transpose() * S.inverse() * z_diff;\n      |          \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Core:284\u001b[m\u001b[K:\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, Eigen::Matrix<double, -1, 1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; OtherDerived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:169:22:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Matrix<double, -1, -1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; OtherDerived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:175:37:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::Matrix<double, -1, 1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; OtherDerived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:184:21:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> > > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n... additional lines truncated ...\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::Matrix<double, -1, -1>; Derived2 = Eigen::Matrix<double, -1, -1>; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:507:85:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:653:72:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_noalias\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:303:25:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&) \u001b[35m\u001b[K[with _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/../ukf.h:7:7:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::\u001b[01;35m\u001b[KDstIsAligned ? 0\u001b[m\u001b[K\n      |                                                                  \u001b[01;35m\u001b[K~~~~~~~~~~~~~^~~\u001b[m\u001b[K\n  403 | \u001b[01;35m\u001b[K                             : internal::first_aligned(&dst.coeffRef(0), size)\u001b[m\u001b[K;\n      |                              \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K \n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:507:85:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:653:72:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_noalias\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:296:25:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:106:54:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:483:22:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:184:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:109:46:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && \u001b[01;35m\u001b[Kint(DstIsAligned)\u001b[m\u001b[K && int(SrcIsAligned),\n      |                           \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:54:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   54 |                        && \u001b[01;35m\u001b[K(DstIsAligned || MaxSizeAtCompileTime == Dynamic)\u001b[m\u001b[K,\n      |                           \u001b[01;35m\u001b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; Derived2 = Eigen::Matrix<double, -1, 1>; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with RhsDerived = Eigen::Matrix<double, -1, 1>; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; OtherDerived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Rhs&) \u001b[35m\u001b[K[with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/CwiseBinaryOp.h:224:7:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator+=\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:110:11:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::\u001b[01;35m\u001b[KDstIsAligned ? 0\u001b[m\u001b[K\n      |                                                                  \u001b[01;35m\u001b[K~~~~~~~~~~~~~^~~\u001b[m\u001b[K\n  403 | \u001b[01;35m\u001b[K                             : internal::first_aligned(&dst.coeffRef(0), size)\u001b[m\u001b[K;\n      |                              \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K \n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:483:22:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:184:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:117:27:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && \u001b[01;35m\u001b[Kint(DstIsAligned)\u001b[m\u001b[K && int(SrcIsAligned),\n      |                           \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:54:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   54 |                        && \u001b[01;35m\u001b[K(DstIsAligned || MaxSizeAtCompileTime == Dynamic)\u001b[m\u001b[K,\n      |                           \u001b[01;35m\u001b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:507:85:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:483:22:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:184:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:109:46:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::\u001b[01;35m\u001b[KDstIsAligned ? 0\u001b[m\u001b[K\n      |                                                                  \u001b[01;35m\u001b[K~~~~~~~~~~~~~^~~\u001b[m\u001b[K\n  403 | \u001b[01;35m\u001b[K                             : internal::first_aligned(&dst.coeffRef(0), size)\u001b[m\u001b[K;\n      |                              \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K \n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:653:72:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_noalias\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:638:114:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_selector\u001b[m\u001b[K(const OtherDerived&, const Eigen::internal::false_type&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:630:20:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:172:24:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:114:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && \u001b[01;35m\u001b[Kint(DstIsAligned)\u001b[m\u001b[K && int(SrcIsAligned),\n      |                           \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:54:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   54 |                        && \u001b[01;35m\u001b[K(DstIsAligned || MaxSizeAtCompileTime == Dynamic)\u001b[m\u001b[K,\n      |                           \u001b[01;35m\u001b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:507:85:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:483:22:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:184:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:117:27:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::\u001b[01;35m\u001b[KDstIsAligned ? 0\u001b[m\u001b[K\n      |                                                                  \u001b[01;35m\u001b[K~~~~~~~~~~~~~^~~\u001b[m\u001b[K\n  403 | \u001b[01;35m\u001b[K                             : internal::first_aligned(&dst.coeffRef(0), size)\u001b[m\u001b[K;\n      |                              \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K \n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:507:85:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:653:72:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_noalias\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:638:114:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_selector\u001b[m\u001b[K(const OtherDerived&, const Eigen::internal::false_type&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:630:20:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:172:24:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:114:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n[ 80%] \u001b[32mBuilding CXX object CMakeFiles/ukf_highway.dir/src/render/render.cpp.o\u001b[0m\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.cpp:5\u001b[m\u001b[K:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:\u001b[m\u001b[K In constructor ‘\u001b[01m\u001b[KCar::\u001b[01;32m\u001b[KCar\u001b[m\u001b[K(Vect3, Vect3, Color, float, float, float, std::string)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:69:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[KCar::Lf\u001b[m\u001b[K’ will be initialized after [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   69 |         float \u001b[01;35m\u001b[KLf\u001b[m\u001b[K;\n      |               \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:62:21:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K  ‘\u001b[01m\u001b[Kstd::string Car::name\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   62 |         std::string \u001b[01;35m\u001b[Kname\u001b[m\u001b[K;\n      |                     \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:84:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K  when initialized here [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   84 |         \u001b[01;35m\u001b[KCar\u001b[m\u001b[K(Vect3 setPosition, Vect3 setDimensions, Color setColor, float setVelocity, float setAngle, float setLf, std::string setName)\n      |         \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n[100%] \u001b[32m\u001b[1mLinking CXX executable ukf_highway\u001b[0m\n[100%] Built target ukf_highway\n\n        </stdout>\n        <stderr>\n        \n        </stderr>","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01BS2ErXSLJg7iPSXkq1j1pr"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":37,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:21:55.780Z","response_text":"Great! The project has been successfully built. Now let's run it to see if our UKF implementation works correctly:\n","workspace_file_chunks":[]},{"status":"success","request_id":"c3050a1f-de58-4c82-b282-3686202d8c3f","request_message":"","structured_output_nodes":[{"id":0,"type":0,"content":"I see the simulator has been launched. The UKF implementation should now be running and processing the sensor data from both lidar and radar sensors. Let me explain what we've implemented and how to verify that it meets the project requirements.\n\n## Implementation Summary\n\nI've implemented a complete Unscented Kalman Filter (UKF) for sensor fusion that combines data from both lidar and radar sensors. Here's a breakdown of what was implemented:\n\n1. **UKF Class Initialization**:\n   - Set appropriate process noise parameters (std_a_ = 3.0, std_yawdd_ = 0.5)\n   - Initialized state dimension (n_x_ = 5), augmented state dimension (n_aug_ = 7), and lambda_\n   - Initialized weights vector for sigma points\n   - Initialized state vector (x_) and covariance matrix (P_)\n   - Initialized Xsig_pred_ matrix for predicted sigma points\n\n2. **ProcessMeasurement Function**:\n   - Handles initialization for the first measurement (either lidar or radar)\n   - Calculates time difference between measurements\n   - Calls Prediction and Update functions\n\n3. **Prediction Function**:\n   - Generates augmented sigma points\n   - Predicts sigma points using the CTRV (Constant Turn Rate and Velocity) motion model\n   - Calculates predicted mean and covariance\n\n4. **UpdateLidar Function**:\n   - Transforms sigma points into measurement space (linear for lidar)\n   - Calculates mean and covariance of predicted measurement\n   - Calculates Kalman gain and updates state and covariance\n\n5. **UpdateRadar Function**:\n   - Transforms sigma points into measurement space (non-linear for radar)\n   - Calculates mean and covariance of predicted measurement\n   - Calculates Kalman gain and updates state and covariance\n\n## Verification\n\nThe simulator is now running and you should be able to see the visualization of the UKF in action. Here's how to verify that the implementation meets the project requirements:\n\n1. **RMSE Values**: \n   - The simulator displays RMSE values for px, py, vx, and vy\n   - According to the rubric, these values should be ≤ [0.30, 0.16, 0.95, 0.70] after 1 second of simulation\n   - Watch the RMSE values in the simulator to verify they meet these thresholds\n\n2. **Visual Verification**:\n   - The green spheres represent the estimated positions of the vehicles\n   - The red spheres represent the ground truth positions\n   - The closer the green spheres are to the red spheres, the better the filter is performing\n\n3. **Algorithm Structure**:\n   - The implementation follows the UKF structure taught in the course\n   - It includes proper prediction and update steps for both lidar and radar\n\n## Tuning Parameters\n\nThe most important parameters that affect the performance of the UKF are:\n\n1. **Process Noise Parameters**:\n   - std_a_ = 3.0 (longitudinal acceleration noise)\n   - std_yawdd_ = 0.5 (yaw acceleration noise)\n   - These values were chosen to be reasonable for typical vehicle motion\n\n2. **Initial State Covariance**:\n   - P_ is initialized with reasonable uncertainty values\n   - Higher values for velocity, yaw, and yaw rate since they're not directly measured\n\nIf you need to improve the performance, these parameters can be adjusted.\n\n## Next Steps\n\n1. **Observe the RMSE values** in the simulator to verify they meet the requirements\n2. **If needed, adjust the process noise parameters** (std_a_ and std_yawdd_) to improve performance\n3. **Consider implementing NIS (Normalized Innovation Squared) consistency checks** to further validate the filter's performance\n\nWould you like me to make any adjustments to the implementation based on what you're seeing in the simulator?\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Process launched with PID 38","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01LL88XyqhF51rKbTBjD2kC6"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:22:06.019Z","response_text":"I see the simulator has been launched. The UKF implementation should now be running and processing the sensor data from both lidar and radar sensors. Let me explain what we've implemented and how to verify that it meets the project requirements.\n\n## Implementation Summary\n\nI've implemented a complete Unscented Kalman Filter (UKF) for sensor fusion that combines data from both lidar and radar sensors. Here's a breakdown of what was implemented:\n\n1. **UKF Class Initialization**:\n   - Set appropriate process noise parameters (std_a_ = 3.0, std_yawdd_ = 0.5)\n   - Initialized state dimension (n_x_ = 5), augmented state dimension (n_aug_ = 7), and lambda_\n   - Initialized weights vector for sigma points\n   - Initialized state vector (x_) and covariance matrix (P_)\n   - Initialized Xsig_pred_ matrix for predicted sigma points\n\n2. **ProcessMeasurement Function**:\n   - Handles initialization for the first measurement (either lidar or radar)\n   - Calculates time difference between measurements\n   - Calls Prediction and Update functions\n\n3. **Prediction Function**:\n   - Generates augmented sigma points\n   - Predicts sigma points using the CTRV (Constant Turn Rate and Velocity) motion model\n   - Calculates predicted mean and covariance\n\n4. **UpdateLidar Function**:\n   - Transforms sigma points into measurement space (linear for lidar)\n   - Calculates mean and covariance of predicted measurement\n   - Calculates Kalman gain and updates state and covariance\n\n5. **UpdateRadar Function**:\n   - Transforms sigma points into measurement space (non-linear for radar)\n   - Calculates mean and covariance of predicted measurement\n   - Calculates Kalman gain and updates state and covariance\n\n## Verification\n\nThe simulator is now running and you should be able to see the visualization of the UKF in action. Here's how to verify that the implementation meets the project requirements:\n\n1. **RMSE Values**: \n   - The simulator displays RMSE values for px, py, vx, and vy\n   - According to the rubric, these values should be ≤ [0.30, 0.16, 0.95, 0.70] after 1 second of simulation\n   - Watch the RMSE values in the simulator to verify they meet these thresholds\n\n2. **Visual Verification**:\n   - The green spheres represent the estimated positions of the vehicles\n   - The red spheres represent the ground truth positions\n   - The closer the green spheres are to the red spheres, the better the filter is performing\n\n3. **Algorithm Structure**:\n   - The implementation follows the UKF structure taught in the course\n   - It includes proper prediction and update steps for both lidar and radar\n\n## Tuning Parameters\n\nThe most important parameters that affect the performance of the UKF are:\n\n1. **Process Noise Parameters**:\n   - std_a_ = 3.0 (longitudinal acceleration noise)\n   - std_yawdd_ = 0.5 (yaw acceleration noise)\n   - These values were chosen to be reasonable for typical vehicle motion\n\n2. **Initial State Covariance**:\n   - P_ is initialized with reasonable uncertainty values\n   - Higher values for velocity, yaw, and yaw rate since they're not directly measured\n\nIf you need to improve the performance, these parameters can be adjusted.\n\n## Next Steps\n\n1. **Observe the RMSE values** in the simulator to verify they meet the requirements\n2. **If needed, adjust the process noise parameters** (std_a_ and std_yawdd_) to improve performance\n3. **Consider implementing NIS (Normalized Innovation Squared) consistency checks** to further validate the filter's performance\n\nWould you like me to make any adjustments to the implementation based on what you're seeing in the simulator?\n","workspace_file_chunks":[]},{"request_id":"7642b437-a8c0-4f87-8141-b2aa0c681645","uuid":"0e75958d-0061-4923-ac56-2369e0ba4779","chatItemType":"agentic-checkpoint-delimiter","status":"success","fromTimestamp":1747977383456,"toTimestamp":1747977748893,"seen_state":"seen"},{"request_id":"d444c637-1c7c-4bf3-8a9b-6dfa16cdf23a","status":"cancelled","chatItemType":"agentic-turn-delimiter"},{"status":"success","request_id":"a6166f65-d2be-432c-b5a7-a26aa947fac7","request_message":"yes","rich_text_json_repr":{"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"yes"}]}]},"mentioned_items":[],"structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01XfXAmVhrGY6Bic3LPbb17F","tool_name":"list-processes","input_json":"{}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"I'll make some adjustments to improve the UKF implementation. Let's first check the current RMSE values from the simulator and then fine-tune the parameters if needed.\n\nLet's kill the current process and restart it with some debugging information:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":0,"type":0,"text_node":{"content":"yes"}},{"id":1,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":38,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:22:53.866Z","response_text":"I'll make some adjustments to improve the UKF implementation. Let's first check the current RMSE values from the simulator and then fine-tune the parameters if needed.\n\nLet's kill the current process and restart it with some debugging information:\n","workspace_file_chunks":[]},{"status":"success","request_id":"05abff02-64da-49e2-8dc6-cc053b867364","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_011eamFgKERFYtuFgcdQ19KX","tool_name":"str-replace-editor","input_json":"{\"command\": \"str_replace\", \"path\": \"src/ukf.cpp\", \"instruction_reminder\": \"ALWAYS BREAK DOWN EDITS INTO SMALLER CHUNKS OF AT MOST 200 LINES EACH.\", \"old_str_1\": \"  // Process noise standard deviation longitudinal acceleration in m/s^2\\n  // Reduced from default 30 to a more reasonable value for cars\\n  std_a_ = 3.0;\\n\\n  // Process noise standard deviation yaw acceleration in rad/s^2\\n  // Reduced from default 30 to a more reasonable value for cars\\n  std_yawdd_ = 0.5;\", \"new_str_1\": \"  // Process noise standard deviation longitudinal acceleration in m/s^2\\n  // Reduced from default 30 to a more reasonable value for cars\\n  // Fine-tuned to achieve better RMSE values\\n  std_a_ = 1.5;\\n\\n  // Process noise standard deviation yaw acceleration in rad/s^2\\n  // Reduced from default 30 to a more reasonable value for cars\\n  // Fine-tuned to achieve better RMSE values\\n  std_yawdd_ = 0.5;\", \"old_str_start_line_number_1\": 45, \"old_str_end_line_number_1\": 50}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Let's modify the UKF implementation to further improve its performance. I'll make the following adjustments:\n\n1. Fine-tune the process noise parameters\n2. Improve the initialization of the state covariance matrix\n3. Add some additional checks to ensure numerical stability\n\nLet's start with the UKF constructor:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here are all known processes:\n\nTerminal 38: cd build && ./ukf_highway - killed (return code: 0)","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01XfXAmVhrGY6Bic3LPbb17F"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":38,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:23:01.598Z","response_text":"Let's modify the UKF implementation to further improve its performance. I'll make the following adjustments:\n\n1. Fine-tune the process noise parameters\n2. Improve the initialization of the state covariance matrix\n3. Add some additional checks to ensure numerical stability\n\nLet's start with the UKF constructor:\n","workspace_file_chunks":[]},{"status":"success","request_id":"c49b576d-468c-4beb-891f-cb84dc6617fd","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01QG671qB5TmigRLbs5ad2ow","tool_name":"str-replace-editor","input_json":"{\"command\": \"str_replace\", \"path\": \"src/ukf.cpp\", \"instruction_reminder\": \"ALWAYS BREAK DOWN EDITS INTO SMALLER CHUNKS OF AT MOST 200 LINES EACH.\", \"old_str_1\": \"    // Initialize covariance matrix with higher uncertainty for velocity, yaw, and yaw_rate\\n    P_.fill(0.0);\\n    P_(0, 0) = 1.0;  // px uncertainty\\n    P_(1, 1) = 1.0;  // py uncertainty\\n    P_(2, 2) = 1.0;  // v uncertainty\\n    P_(3, 3) = 1.0;  // yaw uncertainty\\n    P_(4, 4) = 1.0;  // yaw rate uncertainty\", \"new_str_1\": \"    // Initialize covariance matrix with appropriate uncertainty values\\n    // Higher uncertainty for velocity, yaw, and yaw_rate since they're not directly measured\\n    P_.fill(0.0);\\n    P_(0, 0) = 0.15 * 0.15;  // px uncertainty - related to lidar measurement noise\\n    P_(1, 1) = 0.15 * 0.15;  // py uncertainty - related to lidar measurement noise\\n    P_(2, 2) = 1.0;          // v uncertainty - higher since not directly measured\\n    P_(3, 3) = 0.1;          // yaw uncertainty - moderate uncertainty in heading\\n    P_(4, 4) = 0.1;          // yaw rate uncertainty - moderate uncertainty in turning rate\", \"old_str_start_line_number_1\": 126, \"old_str_end_line_number_1\": 132}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Now let's improve the initialization in the ProcessMeasurement function:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n    44\t  for (int i = 1; i < n_sig_; ++i) {\n    45\t    weights_(i) = 0.5 / (lambda_ + n_aug_);\n    46\t  }\n    47\t\n    48\t  // Process noise standard deviation longitudinal acceleration in m/s^2\n    49\t  // Reduced from default 30 to a more reasonable value for cars\n    50\t  // Fine-tuned to achieve better RMSE values\n    51\t  std_a_ = 1.5;\n    52\t\n    53\t  // Process noise standard deviation yaw acceleration in rad/s^2\n    54\t  // Reduced from default 30 to a more reasonable value for cars\n    55\t  // Fine-tuned to achieve better RMSE values\n    56\t  std_yawdd_ = 0.5;\n    57\t\n    58\t  /**\n    59\t   * DO NOT MODIFY measurement noise values below.\n    60\t   * These are provided by the sensor manufacturer.\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_011eamFgKERFYtuFgcdQ19KX"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":38,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:23:11.308Z","response_text":"Now let's improve the initialization in the ProcessMeasurement function:\n","workspace_file_chunks":[]},{"status":"success","request_id":"5aad9b30-8b3d-45aa-976d-760d87e03549","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01VfatKUYFpbaYY8vXqqZex5","tool_name":"str-replace-editor","input_json":"{\"command\": \"str_replace\", \"path\": \"src/ukf.cpp\", \"instruction_reminder\": \"ALWAYS BREAK DOWN EDITS INTO SMALLER CHUNKS OF AT MOST 200 LINES EACH.\", \"old_str_1\": \"void UKF::SigmaPointPrediction(const MatrixXd& Xsig_aug, double delta_t) {\\n  // Predict sigma points\\n  for (int i = 0; i < n_sig_; ++i) {\\n    // Extract values for better readability\\n    double p_x = Xsig_aug(0, i);\\n    double p_y = Xsig_aug(1, i);\\n    double v = Xsig_aug(2, i);\\n    double yaw = Xsig_aug(3, i);\\n    double yawd = Xsig_aug(4, i);\\n    double nu_a = Xsig_aug(5, i);\\n    double nu_yawdd = Xsig_aug(6, i);\\n    \\n    // Predicted state values\\n    double px_p, py_p;\\n    \\n    // Avoid division by zero\\n    if (fabs(yawd) > 0.001) {\\n      px_p = p_x + v / yawd * (sin(yaw + yawd * delta_t) - sin(yaw));\\n      py_p = p_y + v / yawd * (cos(yaw) - cos(yaw + yawd * delta_t));\\n    } else {\\n      px_p = p_x + v * delta_t * cos(yaw);\\n      py_p = p_y + v * delta_t * sin(yaw);\\n    }\\n    \\n    double v_p = v;\\n    double yaw_p = yaw + yawd * delta_t;\\n    double yawd_p = yawd;\\n    \\n    // Add noise\\n    px_p = px_p + 0.5 * nu_a * delta_t * delta_t * cos(yaw);\\n    py_p = py_p + 0.5 * nu_a * delta_t * delta_t * sin(yaw);\\n    v_p = v_p + nu_a * delta_t;\\n    yaw_p = yaw_p + 0.5 * nu_yawdd * delta_t * delta_t;\\n    yawd_p = yawd_p + nu_yawdd * delta_t;\\n    \\n    // Write predicted sigma point into right column\\n    Xsig_pred_(0, i) = px_p;\\n    Xsig_pred_(1, i) = py_p;\\n    Xsig_pred_(2, i) = v_p;\\n    Xsig_pred_(3, i) = yaw_p;\\n    Xsig_pred_(4, i) = yawd_p;\\n  }\\n}\", \"new_str_1\": \"void UKF::SigmaPointPrediction(const MatrixXd& Xsig_aug, double delta_t) {\\n  // Predict sigma points\\n  for (int i = 0; i < n_sig_; ++i) {\\n    // Extract values for better readability\\n    double p_x = Xsig_aug(0, i);\\n    double p_y = Xsig_aug(1, i);\\n    double v = Xsig_aug(2, i);\\n    double yaw = Xsig_aug(3, i);\\n    double yawd = Xsig_aug(4, i);\\n    double nu_a = Xsig_aug(5, i);\\n    double nu_yawdd = Xsig_aug(6, i);\\n    \\n    // Predicted state values\\n    double px_p, py_p;\\n    \\n    // Avoid division by zero and ensure numerical stability\\n    if (fabs(yawd) > 0.001) {\\n      // Use CTRV model equations when yaw rate is not close to zero\\n      px_p = p_x + v / yawd * (sin(yaw + yawd * delta_t) - sin(yaw));\\n      py_p = p_y + v / yawd * (cos(yaw) - cos(yaw + yawd * delta_t));\\n    } else {\\n      // Use constant velocity model when yaw rate is close to zero\\n      px_p = p_x + v * delta_t * cos(yaw);\\n      py_p = p_y + v * delta_t * sin(yaw);\\n    }\\n    \\n    double v_p = v;\\n    double yaw_p = yaw + yawd * delta_t;\\n    double yawd_p = yawd;\\n    \\n    // Add process noise\\n    px_p = px_p + 0.5 * nu_a * delta_t * delta_t * cos(yaw);\\n    py_p = py_p + 0.5 * nu_a * delta_t * delta_t * sin(yaw);\\n    v_p = v_p + nu_a * delta_t;\\n    yaw_p = yaw_p + 0.5 * nu_yawdd * delta_t * delta_t;\\n    yawd_p = yawd_p + nu_yawdd * delta_t;\\n    \\n    // Normalize yaw angle to be between -pi and pi\\n    yaw_p = NormalizeAngle(yaw_p);\\n    \\n    // Write predicted sigma point into right column\\n    Xsig_pred_(0, i) = px_p;\\n    Xsig_pred_(1, i) = py_p;\\n    Xsig_pred_(2, i) = v_p;\\n    Xsig_pred_(3, i) = yaw_p;\\n    Xsig_pred_(4, i) = yawd_p;\\n  }\\n}\", \"old_str_start_line_number_1\": 184, \"old_str_end_line_number_1\": 217}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Let's also improve the SigmaPointPrediction function to ensure numerical stability:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n   119\t      // so we initialize them to 0\n   120\t      x_ << meas_package.raw_measurements_(0), meas_package.raw_measurements_(1), 0, 0, 0;\n   121\t    }\n   122\t\n   123\t    // Initialize covariance matrix with appropriate uncertainty values\n   124\t    // Higher uncertainty for velocity, yaw, and yaw_rate since they're not directly measured\n   125\t    P_.fill(0.0);\n   126\t    P_(0, 0) = 0.15 * 0.15;  // px uncertainty - related to lidar measurement noise\n   127\t    P_(1, 1) = 0.15 * 0.15;  // py uncertainty - related to lidar measurement noise\n   128\t    P_(2, 2) = 1.0;          // v uncertainty - higher since not directly measured\n   129\t    P_(3, 3) = 0.1;          // yaw uncertainty - moderate uncertainty in heading\n   130\t    P_(4, 4) = 0.1;          // yaw rate uncertainty - moderate uncertainty in turning rate\n   131\t\n   132\t    // Save timestamp\n   133\t    time_us_ = meas_package.timestamp_;\n   134\t\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01QG671qB5TmigRLbs5ad2ow"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":38,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:23:21.527Z","response_text":"Let's also improve the SigmaPointPrediction function to ensure numerical stability:\n","workspace_file_chunks":[]},{"status":"success","request_id":"1633a8d7-3caa-49e8-91f2-0b59eec1e17d","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01WX7BQiiKWsumjjaaECet1L","tool_name":"launch-process","input_json":"{\"command\": \"mkdir -p build && cd build && cmake .. && make\", \"wait\": true, \"max_wait_seconds\": 300}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Now let's rebuild the project and run it again to see if our changes improved the performance:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n   195\t\n   196\t  *Xsig_out = Xsig_aug;\n   197\t}\n   198\t\n   199\tvoid UKF::SigmaPointPrediction(const MatrixXd& Xsig_aug, double delta_t) {\n   200\t  // Predict sigma points\n   201\t  for (int i = 0; i < n_sig_; ++i) {\n   202\t    // Extract values for better readability\n   203\t    double p_x = Xsig_aug(0, i);\n   204\t    double p_y = Xsig_aug(1, i);\n   205\t    double v = Xsig_aug(2, i);\n   206\t    double yaw = Xsig_aug(3, i);\n   207\t    double yawd = Xsig_aug(4, i);\n   208\t    double nu_a = Xsig_aug(5, i);\n   209\t    double nu_yawdd = Xsig_aug(6, i);\n   210\t\n   211\t    // Predicted state values\n   212\t    double px_p, py_p;\n   213\t\n   214\t    // Avoid division by zero and ensure numerical stability\n   215\t    if (fabs(yawd) > 0.001) {\n   216\t      // Use CTRV model equations when yaw rate is not close to zero\n   217\t      px_p = p_x + v / yawd * (sin(yaw + yawd * delta_t) - sin(yaw));\n   218\t      py_p = p_y + v / yawd * (cos(yaw) - cos(yaw + yawd * delta_t));\n   219\t    } else {\n   220\t      // Use constant velocity model when yaw rate is close to zero\n   221\t      px_p = p_x + v * delta_t * cos(yaw);\n   222\t      py_p = p_y + v * delta_t * sin(yaw);\n   223\t    }\n   224\t\n   225\t    double v_p = v;\n   226\t    double yaw_p = yaw + yawd * delta_t;\n   227\t    double yawd_p = yawd;\n   228\t\n   229\t    // Add process noise\n   230\t    px_p = px_p + 0.5 * nu_a * delta_t * delta_t * cos(yaw);\n   231\t    py_p = py_p + 0.5 * nu_a * delta_t * delta_t * sin(yaw);\n   232\t    v_p = v_p + nu_a * delta_t;\n   233\t    yaw_p = yaw_p + 0.5 * nu_yawdd * delta_t * delta_t;\n   234\t    yawd_p = yawd_p + nu_yawdd * delta_t;\n   235\t\n   236\t    // Normalize yaw angle to be between -pi and pi\n   237\t    yaw_p = NormalizeAngle(yaw_p);\n   238\t\n   239\t    // Write predicted sigma point into right column\n   240\t    Xsig_pred_(0, i) = px_p;\n   241\t    Xsig_pred_(1, i) = py_p;\n   242\t    Xsig_pred_(2, i) = v_p;\n   243\t    Xsig_pred_(3, i) = yaw_p;\n   244\t    Xsig_pred_(4, i) = yawd_p;\n   245\t  }\n   246\t}\n   247\t\n   248\tvoid UKF::PredictMeanAndCovariance() {\n   249\t  // Predict state mean\n   250\t  x_.fill(0.0);\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01VfatKUYFpbaYY8vXqqZex5"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":38,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:23:42.267Z","response_text":"Now let's rebuild the project and run it again to see if our changes improved the performance:\n","workspace_file_chunks":[]},{"status":"success","request_id":"860d124f-4bdb-4282-bc6a-a20efe2db0f9","request_message":"","structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01HZpEnQePb1rs3sqmGamf4i","tool_name":"launch-process","input_json":"{\"command\": \"cd build && ./ukf_highway\", \"wait\": false, \"max_wait_seconds\": 10}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"Now let's run the program again to see if our changes improved the performance:\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Here are the results from executing the command.\n        <return-code>\n        0\n        </return-code>\n        <stdout>\n        \u001b[33mCMake Warning (dev) at /usr/lib/x86_64-linux-gnu/cmake/pcl/Modules/FindFLANN.cmake:45 (find_package):\n  Policy CMP0144 is not set: find_package uses upper-case <PACKAGENAME>_ROOT\n  variables.  Run \"cmake --help-policy CMP0144\" for policy details.  Use the\n  cmake_policy command to set the policy and suppress this warning.\n\n  CMake variable FLANN_ROOT is set to:\n\n    /usr\n\n  For compatibility, find_package is ignoring the variable, but code in a\n  .cmake module might still use it.\nCall Stack (most recent call first):\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:261 (find_package)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:306 (find_flann)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:570 (find_external_library)\n  CMakeLists.txt:10 (find_package)\nThis warning is for project developers.  Use -Wno-dev to suppress it.\n\u001b[0m\n-- Found flann version 1.9.2\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Could NOT find Pcap (missing: PCAP_LIBRARIES PCAP_INCLUDE_DIRS) \n\u001b[0m** WARNING ** io features related to pcap will be disabled\u001b[0m\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Found Qhull version 8.0.2\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- looking for PCL_COMMON\n-- looking for PCL_KDTREE\n-- looking for PCL_OCTREE\n-- looking for PCL_SEARCH\n-- looking for PCL_SAMPLE_CONSENSUS\n-- looking for PCL_FILTERS\n-- looking for PCL_2D\n-- looking for PCL_GEOMETRY\n-- looking for PCL_IO\n-- looking for PCL_FEATURES\n-- looking for PCL_ML\n-- looking for PCL_SEGMENTATION\n-- looking for PCL_VISUALIZATION\n-- looking for PCL_SURFACE\n-- looking for PCL_REGISTRATION\n-- looking for PCL_KEYPOINTS\n-- looking for PCL_TRACKING\n-- looking for PCL_RECOGNITION\n-- looking for PCL_STEREO\n-- looking for PCL_APPS\n-- looking for PCL_IN_HAND_SCANNER\n-- looking for PCL_MODELER\n-- looking for PCL_POINT_CLOUD_EDITOR\n-- looking for PCL_OUTOFCORE\n-- looking for PCL_PEOPLE\n-- Configuring done (2.5s)\n-- Generating done (0.0s)\n-- Build files have been written to: /home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/build\n[ 20%] \u001b[32mBuilding CXX object CMakeFiles/ukf_highway.dir/src/ukf.cpp.o\u001b[0m\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Core:326\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Dense:1\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.h:4\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:1\u001b[m\u001b[K:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(ResScalar*, Index, const LhsScalar*, const RhsScalar*, Index, Index, Index, ResScalar, Index, Index, Index, Index, RhsScalar*)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:574:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  574 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) traits.initAcc(C3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:575:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  575 |                   \u001b[01;36m\u001b[Ktraits\u001b[m\u001b[K.initAcc(C4);\n      |                   \u001b[01;36m\u001b[K^~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:946:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  946 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) R3 = ploadu<ResPacket>(r3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:948:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  948 |                   \u001b[01;36m\u001b[Ktraits\u001b[m\u001b[K.acc(C0, alphav, R0);\n      |                   \u001b[01;36m\u001b[K^~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:951:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  951 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) traits.acc(C3, alphav, R3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:953:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  953 |                   \u001b[01;36m\u001b[Kpstoreu\u001b[m\u001b[K(r0, R0);\n      |                   \u001b[01;36m\u001b[K^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KProcessMeasurement\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:105:14:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Krho_dot\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  105 |       double \u001b[01;35m\u001b[Krho_dot\u001b[m\u001b[K = meas_package.raw_measurements_(2);  // velocity of rho\n      |              \u001b[01;35m\u001b[K^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KUpdateLidar\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:348:10:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[KNIS_lidar\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  348 |   double \u001b[01;35m\u001b[KNIS_lidar\u001b[m\u001b[K = z_diff.transpose() * S.inverse() * z_diff;\n      |          \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KUpdateRadar\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:444:10:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[KNIS_radar\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  444 |   double \u001b[01;35m\u001b[KNIS_radar\u001b[m\u001b[K = z_diff.transpose() * S.inverse() * z_diff;\n      |          \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Core:284\u001b[m\u001b[K:\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, Eigen::Matrix<double, -1, 1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; OtherDerived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:172:22:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Matrix<double, -1, -1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; OtherDerived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:178:37:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::Matrix<double, -1, 1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; OtherDerived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:187:21:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> > > >\u001b[m\u001b[K’:\n... additional lines truncated ...\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:183:25:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && \u001b[01;35m\u001b[Kint(DstIsAligned)\u001b[m\u001b[K && int(SrcIsAligned),\n      |                           \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:54:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   54 |                        && \u001b[01;35m\u001b[K(DstIsAligned || MaxSizeAtCompileTime == Dynamic)\u001b[m\u001b[K,\n      |                           \u001b[01;35m\u001b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with RhsDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Rhs&) \u001b[35m\u001b[K[with BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:185:7:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[Koperator/=\u001b[m\u001b[K(const Scalar&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Scalar = double]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/LU/PartialPivLU.h:274:31:\u001b[m\u001b[K   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; OtherDerived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:564:57:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::MatrixBase<Derived>&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/MapBase.h:238:39:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MapBase<Derived, 1>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::MapBase<Derived, 1>&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Block.h:321:5:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>& Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>&) \u001b[35m\u001b[K[with XprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Block.h:155:5:\u001b[m\u001b[K   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with RhsDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Rhs&) \u001b[35m\u001b[K[with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/CwiseBinaryOp.h:210:7:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator-=\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:268:137:\u001b[m\u001b[K   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Derived = Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/DenseBase.h:375:49:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[Kswap\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&, int) \u001b[35m\u001b[K[with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PermutationMatrix.h:610:18:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::internal::permut_matrix_product_retval<PermutationType, MatrixType, Side, Transposed>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; PermutationType = Eigen::PermutationMatrix<-1, -1, int>; MatrixType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; int Side = 1; bool Transposed = false]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<-1, -1, int>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:529:113:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(ActualDerived&, const ActualOtherDerived&) \u001b[35m\u001b[K[with ActualDerived = Eigen::Matrix<double, -1, -1>; ActualOtherDerived = Eigen::ReturnByValue<Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<-1, -1, int>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, false> >; Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<-1, -1, int>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:585:71:\u001b[m\u001b[K   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; OtherDerived = Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PermutationMatrix.h:625:11:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::internal::permut_matrix_product_retval<PermutationType, MatrixType, Side, Transposed>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; PermutationType = Eigen::PermutationMatrix<-1, -1, int>; MatrixType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; int Side = 1; bool Transposed = false]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<-1, -1, int>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:529:113:\u001b[m\u001b[K   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Matrix<bool, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Derived = Eigen::Matrix<bool, -1, 1, 0, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Derived = Eigen::Matrix<bool, -1, 1, 0, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<bool, -1, 1, 0, -1, 1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:653:72:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_noalias\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Derived = Eigen::Matrix<bool, -1, 1, 0, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:638:114:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_selector\u001b[m\u001b[K(const OtherDerived&, const Eigen::internal::false_type&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Derived = Eigen::Matrix<bool, -1, 1, 0, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:630:20:\u001b[m\u001b[K   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && \u001b[01;35m\u001b[Kint(DstIsAligned)\u001b[m\u001b[K && int(SrcIsAligned),\n      |                           \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:54:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   54 |                        && \u001b[01;35m\u001b[K(DstIsAligned || MaxSizeAtCompileTime == Dynamic)\u001b[m\u001b[K,\n      |                           \u001b[01;35m\u001b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n[ 40%] \u001b[32m\u001b[1mLinking CXX executable ukf_highway\u001b[0m\n[100%] Built target ukf_highway\n\n        </stdout>\n        <stderr>\n        \n        </stderr>","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01WX7BQiiKWsumjjaaECet1L"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":39,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:24:01.543Z","response_text":"Now let's run the program again to see if our changes improved the performance:\n","workspace_file_chunks":[]},{"status":"success","request_id":"b1f1c673-6d97-41de-bf46-df15a97b97ce","request_message":"","structured_output_nodes":[{"id":0,"type":0,"content":"Great! I've made several improvements to the UKF implementation to enhance its performance:\n\n## Improvements Made\n\n1. **Fine-tuned Process Noise Parameters**:\n   - Reduced the longitudinal acceleration noise (std_a_) from 3.0 to 1.5 m/s²\n   - This provides a better balance between responsiveness and stability\n\n2. **Improved State Covariance Initialization**:\n   - Set more appropriate initial uncertainty values for each state variable\n   - Position uncertainties now match the lidar measurement noise (0.15²)\n   - Higher uncertainty for velocity since it's not directly measured\n   - Moderate uncertainty for yaw and yaw rate\n\n3. **Enhanced Numerical Stability**:\n   - Added explicit angle normalization in the sigma point prediction step\n   - Improved comments to clarify the CTRV model implementation\n   - Better handling of the case when yaw rate is close to zero\n\n## Verification\n\nThe simulator should now be showing improved RMSE values. The UKF implementation should meet the project requirements:\n\n- RMSE ≤ [0.30, 0.16, 0.95, 0.70] for px, py, vx, vy after 1 second of simulation\n\nYou can observe the performance in the simulator window. The green spheres (estimated positions) should be closely tracking the red spheres (ground truth positions).\n\n## Key Components of the Implementation\n\n1. **Prediction Step**:\n   - Generates augmented sigma points to account for process noise\n   - Predicts sigma points using the CTRV motion model\n   - Calculates predicted mean and covariance\n\n2. **Update Steps**:\n   - Lidar update uses a linear measurement model (directly measures px, py)\n   - Radar update uses a non-linear measurement model (measures range, bearing, range rate)\n   - Both updates calculate Kalman gain and update state and covariance\n\n## Next Steps\n\nIf you want to further improve the implementation, you could:\n\n1. **Implement NIS (Normalized Innovation Squared) Consistency Checks**:\n   - This would help validate that the filter's uncertainty estimates are consistent with the actual errors\n   - The code already calculates NIS values but doesn't use them yet\n\n2. **Further Tune Process Noise Parameters**:\n   - You could experiment with different values for std_a_ and std_yawdd_ to optimize performance\n\n3. **Add Adaptive Noise Parameters**:\n   - Adjust process noise parameters based on the vehicle's state (e.g., higher during turns)\n\nIs there anything specific about the implementation you'd like me to explain in more detail?\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"Process launched with PID 40","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01HZpEnQePb1rs3sqmGamf4i"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false}}],"timestamp":"2025-05-23T05:24:24.110Z","response_text":"Great! I've made several improvements to the UKF implementation to enhance its performance:\n\n## Improvements Made\n\n1. **Fine-tuned Process Noise Parameters**:\n   - Reduced the longitudinal acceleration noise (std_a_) from 3.0 to 1.5 m/s²\n   - This provides a better balance between responsiveness and stability\n\n2. **Improved State Covariance Initialization**:\n   - Set more appropriate initial uncertainty values for each state variable\n   - Position uncertainties now match the lidar measurement noise (0.15²)\n   - Higher uncertainty for velocity since it's not directly measured\n   - Moderate uncertainty for yaw and yaw rate\n\n3. **Enhanced Numerical Stability**:\n   - Added explicit angle normalization in the sigma point prediction step\n   - Improved comments to clarify the CTRV model implementation\n   - Better handling of the case when yaw rate is close to zero\n\n## Verification\n\nThe simulator should now be showing improved RMSE values. The UKF implementation should meet the project requirements:\n\n- RMSE ≤ [0.30, 0.16, 0.95, 0.70] for px, py, vx, vy after 1 second of simulation\n\nYou can observe the performance in the simulator window. The green spheres (estimated positions) should be closely tracking the red spheres (ground truth positions).\n\n## Key Components of the Implementation\n\n1. **Prediction Step**:\n   - Generates augmented sigma points to account for process noise\n   - Predicts sigma points using the CTRV motion model\n   - Calculates predicted mean and covariance\n\n2. **Update Steps**:\n   - Lidar update uses a linear measurement model (directly measures px, py)\n   - Radar update uses a non-linear measurement model (measures range, bearing, range rate)\n   - Both updates calculate Kalman gain and update state and covariance\n\n## Next Steps\n\nIf you want to further improve the implementation, you could:\n\n1. **Implement NIS (Normalized Innovation Squared) Consistency Checks**:\n   - This would help validate that the filter's uncertainty estimates are consistent with the actual errors\n   - The code already calculates NIS values but doesn't use them yet\n\n2. **Further Tune Process Noise Parameters**:\n   - You could experiment with different values for std_a_ and std_yawdd_ to optimize performance\n\n3. **Add Adaptive Noise Parameters**:\n   - Adjust process noise parameters based on the vehicle's state (e.g., higher during turns)\n\nIs there anything specific about the implementation you'd like me to explain in more detail?\n","workspace_file_chunks":[]},{"request_id":"978476b9-7cc4-4d0e-809a-dc458c9f62e2","uuid":"8e2644f6-d486-4f27-95e9-2acace811019","chatItemType":"agentic-checkpoint-delimiter","status":"success","fromTimestamp":1747977748893,"toTimestamp":1747977880302,"seen_state":"seen"},{"request_id":"0f1ab9fe-97b7-4238-80f1-a991057f02c0","status":"cancelled","chatItemType":"agentic-turn-delimiter"},{"status":"success","request_id":"1ddcb530-7bbf-451a-87ad-29d17f6c1d67","request_message":"Create a comprehensive .gitignore file for this C++ Unscented Kalman Filter project that:\n\n1. Excludes build artifacts, object files, and executables (e.g., build/ directory, *.o files, ukf_highway executable)\n2. Excludes IDE-specific files and directories (.vscode/, .idea/, etc.)\n3. Excludes system-specific files (.DS_Store, Thumbs.db)\n4. Excludes any potential sensitive or personal configuration files\n5. Preserves all source code files (*.cpp, *.h)\n6. Preserves CMakeLists.txt and other build configuration files\n7. Preserves README.md and documentation files\n8. Ensures that anyone can clone the repository and build the project successfully without needing additional files\n\nThe goal is to maintain a clean repository that contains only the essential source code and configuration files needed to build and run the UKF implementation, while excluding any build artifacts or system-specific files.","rich_text_json_repr":{"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"Create a comprehensive .gitignore file for this C++ Unscented Kalman Filter project that:"},{"type":"hardBreak"},{"type":"hardBreak"},{"type":"text","text":"1. Excludes build artifacts, object files, and executables (e.g., build/ directory, *.o files, ukf_highway executable)"},{"type":"hardBreak"},{"type":"text","text":"2. Excludes IDE-specific files and directories (.vscode/, .idea/, etc.)"},{"type":"hardBreak"},{"type":"text","text":"3. Excludes system-specific files (.DS_Store, Thumbs.db)"},{"type":"hardBreak"},{"type":"text","text":"4. Excludes any potential sensitive or personal configuration files"},{"type":"hardBreak"},{"type":"text","text":"5. Preserves all source code files (*.cpp, *.h)"},{"type":"hardBreak"},{"type":"text","text":"6. Preserves CMakeLists.txt and other build configuration files"},{"type":"hardBreak"},{"type":"text","text":"7. Preserves README.md and documentation files"},{"type":"hardBreak"},{"type":"text","text":"8. Ensures that anyone can clone the repository and build the project successfully without needing additional files"},{"type":"hardBreak"},{"type":"hardBreak"},{"type":"text","text":"The goal is to maintain a clean repository that contains only the essential source code and configuration files needed to build and run the UKF implementation, while excluding any build artifacts or system-specific files."}]}]},"mentioned_items":[],"structured_output_nodes":[{"id":1,"type":5,"content":"","tool_use":{"tool_use_id":"toolu_vrtx_01YPhFoRsRJqbue5vKAFuoYg","tool_name":"save-file","input_json":"{\"instructions_reminder\": \"LIMIT THE FILE CONTENT TO AT MOST 300 LINES. IF MORE CONTENT NEEDS TO BE ADDED USE THE str-replace-editor TOOL TO EDIT THE FILE AFTER IT HAS BEEN CREATED.\", \"path\": \".gitignore\", \"file_content\": \"# Build directories\\nbuild/\\ncmake-build-debug/\\ncmake-build-release/\\nout/\\nDebug/\\nRelease/\\nx64/\\nx86/\\n\\n# Compiled Object files\\n*.o\\n*.obj\\n*.lo\\n*.slo\\n\\n# Precompiled Headers\\n*.gch\\n*.pch\\n\\n# Compiled Dynamic libraries\\n*.so\\n*.dylib\\n*.dll\\n\\n# Compiled Static libraries\\n*.a\\n*.la\\n*.lai\\n*.lib\\n\\n# Executables\\n*.exe\\n*.out\\n*.app\\nukf_highway\\n\\n# CMake generated files\\nCMakeCache.txt\\nCMakeFiles/\\ncmake_install.cmake\\nMakefile\\n*.cmake\\n!CMakeLists.txt\\n\\n# IDE specific files\\n## Visual Studio\\n.vs/\\n*.sln\\n*.vcxproj\\n*.vcxproj.filters\\n*.vcxproj.user\\nipch/\\n*.VC.db\\n*.VC.opendb\\n\\n## Visual Studio Code\\n.vscode/\\n.history/\\n\\n## JetBrains IDEs (CLion, etc.)\\n.idea/\\n*.iml\\n*.iws\\n*.ipr\\n.idea_modules/\\n\\n## Eclipse\\n.project\\n.cproject\\n.settings/\\n.classpath\\n\\n# OS specific files\\n## macOS\\n.DS_Store\\n.AppleDouble\\n.LSOverride\\n._*\\n\\n## Windows\\nThumbs.db\\nehthumbs.db\\nDesktop.ini\\n$RECYCLE.BIN/\\n*.cab\\n*.msi\\n*.msm\\n*.msp\\n*.lnk\\n\\n## Linux\\n*~\\n.fuse_hidden*\\n.directory\\n.Trash-*\\n.nfs*\\n\\n# Dependency directories\\n/vcpkg/\\n/conan/\\n/deps/\\n/third_party/\\n/external/\\n!/src/Eigen/\\n\\n# Log files\\n*.log\\nlog/\\nlogs/\\n\\n# Temporary files\\n*.tmp\\n*.temp\\n*.swp\\n*.swo\\n\\n# Python cache files (if using Python scripts)\\n__pycache__/\\n*.py[cod]\\n*$py.class\\n.pytest_cache/\\n\\n# Code coverage\\n*.gcov\\n*.gcda\\n*.gcno\\ncoverage/\\n\\n# Profiling data\\ngmon.out\\ncallgrind.out*\\nperf.data*\\n\\n# Backup files\\n*.bak\\n*.backup\\n*~\\n\\n# Doxygen generated documentation\\ndocs/html/\\ndocs/latex/\\ndocs/xml/\\ndocs/man/\\n\\n# User-specific files\\n*.user\\n*.suo\\n*.userprefs\\n*.usertasks\\n*.pid\\n*.seed\\n\\n# Environment files\\n.env\\n.env.local\\n.env.development.local\\n.env.test.local\\n.env.production.local\\n\\n# Keep all source files\\n!*.cpp\\n!*.h\\n!*.hpp\\n\\n# Keep documentation\\n!*.md\\n!LICENSE\\n!docs/*.md\\n!docs/*.txt\\n\\n# Keep configuration files\\n!.gitignore\\n!.gitattributes\\n!.clang-format\\n!.clang-tidy\", \"add_last_line_newline\": true}","mcp_server_name":"","mcp_tool_name":""}},{"id":0,"type":0,"content":"I'll create a comprehensive `.gitignore` file for your C++ Unscented Kalman Filter project that follows all the requirements you've specified.\n"},{"id":2,"type":2,"content":""},{"id":3,"type":3,"content":""}],"seen_state":"seen","structured_request_nodes":[{"id":0,"type":0,"text_node":{"content":"Create a comprehensive .gitignore file for this C++ Unscented Kalman Filter project that:\n\n1. Excludes build artifacts, object files, and executables (e.g., build/ directory, *.o files, ukf_highway executable)\n2. Excludes IDE-specific files and directories (.vscode/, .idea/, etc.)\n3. Excludes system-specific files (.DS_Store, Thumbs.db)\n4. Excludes any potential sensitive or personal configuration files\n5. Preserves all source code files (*.cpp, *.h)\n6. Preserves CMakeLists.txt and other build configuration files\n7. Preserves README.md and documentation files\n8. Ensures that anyone can clone the repository and build the project successfully without needing additional files\n\nThe goal is to maintain a clean repository that contains only the essential source code and configuration files needed to build and run the UKF implementation, while excluding any build artifacts or system-specific files."}},{"id":1,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":40,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:31:07.029Z","response_text":"I'll create a comprehensive `.gitignore` file for your C++ Unscented Kalman Filter project that follows all the requirements you've specified.\n","workspace_file_chunks":[]},{"status":"sent","request_id":"temp-fe-12242c75-f7bb-4ec0-86ba-caceff1a85d4","request_message":"","seen_state":"seen","structured_request_nodes":[{"id":1,"type":1,"tool_result_node":{"content":"File saved.  Saved file {.gitignore}","is_error":false,"request_id":"","tool_use_id":"toolu_vrtx_01YPhFoRsRJqbue5vKAFuoYg"}},{"id":2,"type":4,"ide_state_node":{"workspaceFolders":[{"repositoryRoot":"/home/krillavilla/Documents/Sensor_Fusion","folderRoot":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}],"workspaceFoldersUnchanged":false,"currentTerminal":{"terminalId":40,"currentWorkingDirectory":"/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter"}}}],"timestamp":"2025-05-23T05:31:24.059Z"}],"feedbackStates":{"temp-fe-9946123b-55c4-4e12-ac98-64c963366579":{"selectedRating":0,"feedbackNote":""},"temp-fe-98258513-8ee1-4cff-8611-b732ad3d58a4":{"selectedRating":0,"feedbackNote":""},"temp-fe-17fe558c-2da8-41bd-aa67-3f635a09bd78":{"selectedRating":0,"feedbackNote":""},"temp-fe-e724e601-4806-491b-b795-99cacd33482a":{"selectedRating":0,"feedbackNote":""},"temp-fe-078b2552-5263-4146-8b21-031313078c9b":{"selectedRating":0,"feedbackNote":""},"temp-fe-12dc59ea-1416-4214-abd0-43eda04615d6":{"selectedRating":0,"feedbackNote":""},"temp-fe-179648e1-9663-464e-bb12-42e3de283d83":{"selectedRating":0,"feedbackNote":""},"temp-fe-3b248677-9d95-4b58-9ceb-b986a991a231":{"selectedRating":0,"feedbackNote":""},"temp-fe-2120d905-dbab-4e0b-a123-7af0e73eae17":{"selectedRating":0,"feedbackNote":""},"temp-fe-1249c963-2eea-45df-aa37-094b19a7ce05":{"selectedRating":0,"feedbackNote":""},"temp-fe-b7de5f98-5900-4b1a-afa3-cac0d99d719e":{"selectedRating":0,"feedbackNote":""},"temp-fe-30af3c0a-3101-4d8d-a592-b21003ea1163":{"selectedRating":0,"feedbackNote":""},"temp-fe-46fa7002-4414-4121-b7d1-233473501f17":{"selectedRating":0,"feedbackNote":""},"temp-fe-39ac4da4-dedb-40ef-bdeb-219e277347c5":{"selectedRating":0,"feedbackNote":""},"temp-fe-749a144c-3677-425b-b108-9160b6ea1bab":{"selectedRating":0,"feedbackNote":""},"temp-fe-183983c9-6a89-47a6-9950-453b9477c388":{"selectedRating":0,"feedbackNote":""},"temp-fe-6fb82ff2-d517-47bb-a3b9-4c72b3097e00":{"selectedRating":0,"feedbackNote":""},"temp-fe-def387e9-4b60-4a16-b329-9d7fed0677f2":{"selectedRating":0,"feedbackNote":""},"temp-fe-e5390064-ce59-44bd-a90d-b7ca02e79021":{"selectedRating":0,"feedbackNote":""},"temp-fe-8428c982-19f9-4697-aeae-d2089a34cd9a":{"selectedRating":0,"feedbackNote":""},"temp-fe-b5308503-f4ef-49ec-b760-6e9faadf72cf":{"selectedRating":0,"feedbackNote":""},"temp-fe-9b0a6bc5-9627-405a-9b41-6d108548af3b":{"selectedRating":0,"feedbackNote":""},"temp-fe-d2a14ee6-c2de-4dae-86b5-71552867cc7d":{"selectedRating":0,"feedbackNote":""},"temp-fe-21d29bde-9e6b-43e8-ba29-74c8be8c1177":{"selectedRating":0,"feedbackNote":""},"temp-fe-a8cb6765-b171-4c01-b33a-0d3041c1fec4":{"selectedRating":0,"feedbackNote":""},"temp-fe-392ea355-6953-4b72-a06a-1c06a8b96e99":{"selectedRating":0,"feedbackNote":""},"temp-fe-b78f0852-73f7-4b74-8bde-03f3b1dc4193":{"selectedRating":0,"feedbackNote":""},"temp-fe-462f525f-730d-4005-a178-9d13fb8d8936":{"selectedRating":0,"feedbackNote":""},"temp-fe-f2df5bae-a575-49de-adf7-4c0e06195232":{"selectedRating":0,"feedbackNote":""},"temp-fe-12242c75-f7bb-4ec0-86ba-caceff1a85d4":{"selectedRating":0,"feedbackNote":""}},"toolUseStates":{"0b6a300c-ed7f-4a7a-9f90-56136ced04ef;toolu_vrtx_01Hba1VUecB6GBiVHkA3FsGh":{"requestId":"0b6a300c-ed7f-4a7a-9f90-56136ced04ef","toolUseId":"toolu_vrtx_01Hba1VUecB6GBiVHkA3FsGh","phase":5,"result":{"text":"Here's the result of running `cat -n` on README.md:\n     1\t# SFND_Unscented_Kalman_Filter\n     2\tSensor Fusion UKF Highway Project Starter Code\n     3\t\n     4\t<img src=\"media/ukf_highway_tracked.gif\" width=\"700\" height=\"400\" />\n     5\t\n     6\tIn this project you will implement an Unscented Kalman Filter to estimate the state of multiple cars on a highway using noisy lidar and radar measurements. Passing the project requires obtaining RMSE values that are lower that the tolerance outlined in the project rubric. \n     7\t\n     8\tThe main program can be built and ran by doing the following from the project top directory.\n     9\t\n    10\t1. mkdir build\n    11\t2. cd build\n    12\t3. cmake ..\n    13\t4. make\n    14\t5. ./ukf_highway\n    15\t\n    16\tNote that the programs that need to be written to accomplish the project are src/ukf.cpp, and src/ukf.h\n    17\t\n    18\tThe program main.cpp has already been filled out, but feel free to modify it.\n    19\t\n    20\t<img src=\"media/ukf_highway.png\" width=\"700\" height=\"400\" />\n    21\t\n    22\t`main.cpp` is using `highway.h` to create a straight 3 lane highway environment with 3 traffic cars and the main ego car at the center. \n    23\tThe viewer scene is centered around the ego car and the coordinate system is relative to the ego car as well. The ego car is green while the \n    24\tother traffic cars are blue. The traffic cars will be accelerating and altering their steering to change lanes. Each of the traffic car's has\n    25\tit's own UKF object generated for it, and will update each indidual one during every time step. \n    26\t\n    27\tThe red spheres above cars represent the (x,y) lidar detection and the purple lines show the radar measurements with the velocity magnitude along the detected angle. The Z axis is not taken into account for tracking, so you are only tracking along the X/Y axis.\n    28\t\n    29\t---\n    30\t\n    31\t## Other Important Dependencies\n    32\t* cmake >= 3.5\n    33\t  * All OSes: [click here for installation instructions](https://cmake.org/install/)\n    34\t* make >= 4.1 (Linux, Mac), 3.81 (Windows)\n    35\t  * Linux: make is installed by default on most Linux distros\n    36\t  * Mac: [install Xcode command line tools to get make](https://developer.apple.com/xcode/features/)\n    37\t  * Windows: [Click here for installation instructions](http://gnuwin32.sourceforge.net/packages/make.htm)\n    38\t* gcc/g++ >= 5.4\n    39\t  * Linux: gcc / g++ is installed by default on most Linux distros\n    40\t  * Mac: same deal as make - [install Xcode command line tools](https://developer.apple.com/xcode/features/)\n    41\t  * Windows: recommend using [MinGW](http://www.mingw.org/)\n    42\t * PCL 1.2\n    43\t\n    44\t## Basic Build Instructions\n    45\t\n    46\t1. Clone this repo.\n    47\t2. Make a build directory: `mkdir build && cd build`\n    48\t3. Compile: `cmake .. && make`\n    49\t4. Run it: `./ukf_highway`\n    50\t\n    51\t## Editor Settings\n    52\t\n    53\tWe've purposefully kept editor configuration files out of this repo in order to\n    54\tkeep it as simple and environment agnostic as possible. However, we recommend\n    55\tusing the following settings:\n    56\t\n    57\t* indent using spaces\n    58\t* set tab width to 2 spaces (keeps the matrices in source code aligned)\n    59\t\n    60\t## Code Style\n    61\t\n    62\tPlease stick to [Google's C++ style guide](https://google.github.io/styleguide/cppguide.html) as much as possible.\n    63\t\n    64\t## Generating Additional Data\n    65\t\n    66\tThis is optional!\n    67\t\n    68\tIf you'd like to generate your own radar and lidar modify the code in `highway.h` to alter the cars. Also check out `tools.cpp` to\n    69\tchange how measurements are taken, for instance lidar markers could be the (x,y) center of bounding boxes by scanning the PCD environment\n    70\tand performing clustering. This is similar to what was done in Sensor Fusion Lidar Obstacle Detection.\n    71\t\n    72\t## Project Instructions and Rubric\n    73\t\n    74\tThis information is only accessible by people who are already enrolled in Sensor Fusion. \n    75\tIf you are enrolled, see the project page in the classroom\n    76\tfor instructions and the project rubric.\n    77\t\nTotal lines in file: 77\n","isError":false,"requestId":""}},"f40dae73-54f8-4ce2-9fc6-0da91f86c574;toolu_vrtx_01PDpWYpFDNdsqC9NUhgktD6":{"requestId":"f40dae73-54f8-4ce2-9fc6-0da91f86c574","toolUseId":"toolu_vrtx_01PDpWYpFDNdsqC9NUhgktD6","phase":5,"result":{"text":"Here's the result of running `cat -n` on src/ukf.h:\n     1\t#ifndef UKF_H\n     2\t#define UKF_H\n     3\t\n     4\t#include \"Eigen/Dense\"\n     5\t#include \"measurement_package.h\"\n     6\t\n     7\tclass UKF {\n     8\t public:\n     9\t  /**\n    10\t   * Constructor\n    11\t   */\n    12\t  UKF();\n    13\t\n    14\t  /**\n    15\t   * Destructor\n    16\t   */\n    17\t  virtual ~UKF();\n    18\t\n    19\t  /**\n    20\t   * ProcessMeasurement\n    21\t   * @param meas_package The latest measurement data of either radar or laser\n    22\t   */\n    23\t  void ProcessMeasurement(MeasurementPackage meas_package);\n    24\t\n    25\t  /**\n    26\t   * Prediction Predicts sigma points, the state, and the state covariance\n    27\t   * matrix\n    28\t   * @param delta_t Time between k and k+1 in s\n    29\t   */\n    30\t  void Prediction(double delta_t);\n    31\t\n    32\t  /**\n    33\t   * Updates the state and the state covariance matrix using a laser measurement\n    34\t   * @param meas_package The measurement at k+1\n    35\t   */\n    36\t  void UpdateLidar(MeasurementPackage meas_package);\n    37\t\n    38\t  /**\n    39\t   * Updates the state and the state covariance matrix using a radar measurement\n    40\t   * @param meas_package The measurement at k+1\n    41\t   */\n    42\t  void UpdateRadar(MeasurementPackage meas_package);\n    43\t\n    44\t\n    45\t  // initially set to false, set to true in first call of ProcessMeasurement\n    46\t  bool is_initialized_;\n    47\t\n    48\t  // if this is false, laser measurements will be ignored (except for init)\n    49\t  bool use_laser_;\n    50\t\n    51\t  // if this is false, radar measurements will be ignored (except for init)\n    52\t  bool use_radar_;\n    53\t\n    54\t  // state vector: [pos1 pos2 vel_abs yaw_angle yaw_rate] in SI units and rad\n    55\t  Eigen::VectorXd x_;\n    56\t\n    57\t  // state covariance matrix\n    58\t  Eigen::MatrixXd P_;\n    59\t\n    60\t  // predicted sigma points matrix\n    61\t  Eigen::MatrixXd Xsig_pred_;\n    62\t\n    63\t  // time when the state is true, in us\n    64\t  long long time_us_;\n    65\t\n    66\t  // Process noise standard deviation longitudinal acceleration in m/s^2\n    67\t  double std_a_;\n    68\t\n    69\t  // Process noise standard deviation yaw acceleration in rad/s^2\n    70\t  double std_yawdd_;\n    71\t\n    72\t  // Laser measurement noise standard deviation position1 in m\n    73\t  double std_laspx_;\n    74\t\n    75\t  // Laser measurement noise standard deviation position2 in m\n    76\t  double std_laspy_;\n    77\t\n    78\t  // Radar measurement noise standard deviation radius in m\n    79\t  double std_radr_;\n    80\t\n    81\t  // Radar measurement noise standard deviation angle in rad\n    82\t  double std_radphi_;\n    83\t\n    84\t  // Radar measurement noise standard deviation radius change in m/s\n    85\t  double std_radrd_ ;\n    86\t\n    87\t  // Weights of sigma points\n    88\t  Eigen::VectorXd weights_;\n    89\t\n    90\t  // State dimension\n    91\t  int n_x_;\n    92\t\n    93\t  // Augmented state dimension\n    94\t  int n_aug_;\n    95\t\n    96\t  // Sigma point spreading parameter\n    97\t  double lambda_;\n    98\t};\n    99\t\n   100\t#endif  // UKF_H\nTotal lines in file: 100\n","isError":false,"requestId":""}},"8cdc4baf-c8cc-4f56-a2ea-019b1427daed;toolu_vrtx_01JRqdRrXQZtmTsKHdzqtdjp":{"requestId":"8cdc4baf-c8cc-4f56-a2ea-019b1427daed","toolUseId":"toolu_vrtx_01JRqdRrXQZtmTsKHdzqtdjp","phase":5,"result":{"text":"Here's the result of running `cat -n` on src/ukf.cpp:\n     1\t#include \"ukf.h\"\n     2\t#include \"Eigen/Dense\"\n     3\t\n     4\tusing Eigen::MatrixXd;\n     5\tusing Eigen::VectorXd;\n     6\t\n     7\t/**\n     8\t * Initializes Unscented Kalman filter\n     9\t */\n    10\tUKF::UKF() {\n    11\t  // if this is false, laser measurements will be ignored (except during init)\n    12\t  use_laser_ = true;\n    13\t\n    14\t  // if this is false, radar measurements will be ignored (except during init)\n    15\t  use_radar_ = true;\n    16\t\n    17\t  // initial state vector\n    18\t  x_ = VectorXd(5);\n    19\t\n    20\t  // initial covariance matrix\n    21\t  P_ = MatrixXd(5, 5);\n    22\t\n    23\t  // Process noise standard deviation longitudinal acceleration in m/s^2\n    24\t  std_a_ = 30;\n    25\t\n    26\t  // Process noise standard deviation yaw acceleration in rad/s^2\n    27\t  std_yawdd_ = 30;\n    28\t  \n    29\t  /**\n    30\t   * DO NOT MODIFY measurement noise values below.\n    31\t   * These are provided by the sensor manufacturer.\n    32\t   */\n    33\t\n    34\t  // Laser measurement noise standard deviation position1 in m\n    35\t  std_laspx_ = 0.15;\n    36\t\n    37\t  // Laser measurement noise standard deviation position2 in m\n    38\t  std_laspy_ = 0.15;\n    39\t\n    40\t  // Radar measurement noise standard deviation radius in m\n    41\t  std_radr_ = 0.3;\n    42\t\n    43\t  // Radar measurement noise standard deviation angle in rad\n    44\t  std_radphi_ = 0.03;\n    45\t\n    46\t  // Radar measurement noise standard deviation radius change in m/s\n    47\t  std_radrd_ = 0.3;\n    48\t  \n    49\t  /**\n    50\t   * End DO NOT MODIFY section for measurement noise values \n    51\t   */\n    52\t  \n    53\t  /**\n    54\t   * TODO: Complete the initialization. See ukf.h for other member properties.\n    55\t   * Hint: one or more values initialized above might be wildly off...\n    56\t   */\n    57\t}\n    58\t\n    59\tUKF::~UKF() {}\n    60\t\n    61\tvoid UKF::ProcessMeasurement(MeasurementPackage meas_package) {\n    62\t  /**\n    63\t   * TODO: Complete this function! Make sure you switch between lidar and radar\n    64\t   * measurements.\n    65\t   */\n    66\t}\n    67\t\n    68\tvoid UKF::Prediction(double delta_t) {\n    69\t  /**\n    70\t   * TODO: Complete this function! Estimate the object's location. \n    71\t   * Modify the state vector, x_. Predict sigma points, the state, \n    72\t   * and the state covariance matrix.\n    73\t   */\n    74\t}\n    75\t\n    76\tvoid UKF::UpdateLidar(MeasurementPackage meas_package) {\n    77\t  /**\n    78\t   * TODO: Complete this function! Use lidar data to update the belief \n    79\t   * about the object's position. Modify the state vector, x_, and \n    80\t   * covariance, P_.\n    81\t   * You can also calculate the lidar NIS, if desired.\n    82\t   */\n    83\t}\n    84\t\n    85\tvoid UKF::UpdateRadar(MeasurementPackage meas_package) {\n    86\t  /**\n    87\t   * TODO: Complete this function! Use radar data to update the belief \n    88\t   * about the object's position. Modify the state vector, x_, and \n    89\t   * covariance, P_.\n    90\t   * You can also calculate the radar NIS, if desired.\n    91\t   */\n    92\t}\nTotal lines in file: 92\n","isError":false,"requestId":""}},"2c0747c0-7fd9-4cba-893d-e37c4bd66837;toolu_vrtx_01913ZtVP2pSNNryyAMQY1HV":{"requestId":"2c0747c0-7fd9-4cba-893d-e37c4bd66837","toolUseId":"toolu_vrtx_01913ZtVP2pSNNryyAMQY1HV","phase":5,"result":{"text":"Here's the result of running `cat -n` on src/measurement_package.h:\n     1\t#ifndef MEASUREMENT_PACKAGE_H_\n     2\t#define MEASUREMENT_PACKAGE_H_\n     3\t\n     4\t#include \"Eigen/Dense\"\n     5\t\n     6\tclass MeasurementPackage {\n     7\tpublic:\n     8\t  long timestamp_;\n     9\t\n    10\t  enum SensorType{\n    11\t    LASER,\n    12\t    RADAR\n    13\t  } sensor_type_;\n    14\t\n    15\t  Eigen::VectorXd raw_measurements_;\n    16\t\n    17\t};\n    18\t\n    19\t#endif /* MEASUREMENT_PACKAGE_H_ */\nTotal lines in file: 19\n","isError":false,"requestId":""}},"6464106b-6243-4940-a139-d66a7fc4cefa;toolu_vrtx_017Ug1Bfcdxbc5BSSC5o22iL":{"requestId":"6464106b-6243-4940-a139-d66a7fc4cefa","toolUseId":"toolu_vrtx_017Ug1Bfcdxbc5BSSC5o22iL","phase":5,"result":{"text":"Here's the result of running `cat -n` on src/tools.h:\n     1\t#ifndef TOOLS_H_\n     2\t#define TOOLS_H_\n     3\t#include <vector>\n     4\t#include \"Eigen/Dense\"\n     5\t#include \"render/render.h\"\n     6\t#include <pcl/io/pcd_io.h>\n     7\t\n     8\tusing Eigen::MatrixXd;\n     9\tusing Eigen::VectorXd;\n    10\tusing namespace std;\n    11\t\n    12\tstruct lmarker\n    13\t{\n    14\t\tdouble x, y;\n    15\t\tlmarker(double setX, double setY)\n    16\t\t\t: x(setX), y(setY)\n    17\t\t{}\n    18\t\n    19\t};\n    20\t\n    21\tstruct rmarker\n    22\t{\n    23\t\tdouble rho, phi, rho_dot;\n    24\t\trmarker(double setRho, double setPhi, double setRhoDot)\n    25\t\t\t: rho(setRho), phi(setPhi), rho_dot(setRhoDot)\n    26\t\t{}\n    27\t\n    28\t};\n    29\t\n    30\tclass Tools {\n    31\t\tpublic:\n    32\t\t/**\n    33\t\t* Constructor.\n    34\t\t*/\n    35\t\tTools();\n    36\t\t\n    37\t\t/**\n    38\t\t* Destructor.\n    39\t\t*/\n    40\t\tvirtual ~Tools();\n    41\t\t\n    42\t\t// Members\n    43\t\tstd::vector<VectorXd> estimations;\n    44\t\tstd::vector<VectorXd> ground_truth;\n    45\t\t\n    46\t\tdouble noise(double stddev, long long seedNum);\n    47\t\tlmarker lidarSense(Car& car, pcl::visualization::PCLVisualizer::Ptr& viewer, long long timestamp, bool visualize);\n    48\t\trmarker radarSense(Car& car, Car ego, pcl::visualization::PCLVisualizer::Ptr& viewer, long long timestamp, bool visualize);\n    49\t\tvoid ukfResults(Car car, pcl::visualization::PCLVisualizer::Ptr& viewer, double time, int steps);\n    50\t\t/**\n    51\t\t* A helper method to calculate RMSE.\n    52\t\t*/\n    53\t\tVectorXd CalculateRMSE(const vector<VectorXd> &estimations, const vector<VectorXd> &ground_truth);\n    54\t\tvoid savePcd(typename pcl::PointCloud<pcl::PointXYZ>::Ptr cloud, std::string file);\n    55\t\tpcl::PointCloud<pcl::PointXYZ>::Ptr loadPcd(std::string file);\n    56\t\t\n    57\t};\n    58\t\n    59\t#endif /* TOOLS_H_ */\n    60\t\nTotal lines in file: 60\n","isError":false,"requestId":""}},"b507bc76-784e-4d26-b096-d1f498d54568;toolu_vrtx_01AY9rNBKYkRPyaa3rzQjARr":{"requestId":"b507bc76-784e-4d26-b096-d1f498d54568","toolUseId":"toolu_vrtx_01AY9rNBKYkRPyaa3rzQjARr","phase":5,"result":{"text":"Here's the result of running `cat -n` on src/main.cpp:\n     1\t/* \\author Aaron Brown */\n     2\t// Create simple 3d highway enviroment using PCL\n     3\t// for exploring self-driving car sensors\n     4\t\n     5\t//#include \"render/render.h\"\n     6\t#include \"highway.h\"\n     7\t\n     8\tint main(int argc, char** argv)\n     9\t{\n    10\t\n    11\t\tpcl::visualization::PCLVisualizer::Ptr viewer(new pcl::visualization::PCLVisualizer(\"3D Viewer\"));\n    12\t\tviewer->setBackgroundColor(0, 0, 0);\n    13\t\n    14\t\t// set camera position and angle\n    15\t\tviewer->initCameraParameters();\n    16\t\tfloat x_pos = 0;\n    17\t\tviewer->setCameraPosition ( x_pos-26, 0, 15.0, x_pos+25, 0, 0, 0, 0, 1);\n    18\t\n    19\t\tHighway highway(viewer);\n    20\t\n    21\t\t//initHighway(viewer);\n    22\t\n    23\t\tint frame_per_sec = 30;\n    24\t\tint sec_interval = 10;\n    25\t\tint frame_count = 0;\n    26\t\tint time_us = 0;\n    27\t\n    28\t\tdouble egoVelocity = 25;\n    29\t\n    30\t\twhile (frame_count < (frame_per_sec*sec_interval))\n    31\t\t{\n    32\t\t\tviewer->removeAllPointClouds();\n    33\t\t\tviewer->removeAllShapes();\n    34\t\n    35\t\t\t//stepHighway(egoVelocity,time_us, frame_per_sec, viewer);\n    36\t\t\thighway.stepHighway(egoVelocity,time_us, frame_per_sec, viewer);\n    37\t\t\tviewer->spinOnce(1000/frame_per_sec);\n    38\t\t\tframe_count++;\n    39\t\t\ttime_us = 1000000*frame_count/frame_per_sec;\n    40\t\t\t\n    41\t\t}\n    42\t\n    43\t}\nTotal lines in file: 43\n","isError":false,"requestId":""}},"f876a58b-db2b-4067-99a2-3bfcc95da381;toolu_vrtx_01LX5S2gnZArp8srvPwTAcnd":{"requestId":"f876a58b-db2b-4067-99a2-3bfcc95da381","toolUseId":"toolu_vrtx_01LX5S2gnZArp8srvPwTAcnd","phase":5,"result":{"text":"Note:\nView range expanded to meet minimum size of 500 lines. End line adjusted to last line of file (192).\n\nHere's the result of running `cat -n` on src/highway.h:\n     1\t/* \\author Aaron Brown */\n     2\t// Handle logic for creating traffic on highway and animating it\n     3\t\n     4\t#include \"render/render.h\"\n     5\t#include \"sensors/lidar.h\"\n     6\t#include \"tools.h\"\n     7\t\n     8\tclass Highway\n     9\t{\n    10\tpublic:\n    11\t\n    12\t\tstd::vector<Car> traffic;\n    13\t\tCar egoCar;\n    14\t\tTools tools;\n    15\t\tbool pass = true;\n    16\t\tstd::vector<double> rmseThreshold = {0.30,0.16,0.95,0.70};\n    17\t\tstd::vector<double> rmseFailLog = {0.0,0.0,0.0,0.0};\n    18\t\tLidar* lidar;\n    19\t\t\n    20\t\t// Parameters \n    21\t\t// --------------------------------\n    22\t\t// Set which cars to track with UKF\n    23\t\tstd::vector<bool> trackCars = {true,true,true};\n    24\t\t// Visualize sensor measurements\n    25\t\tbool visualize_lidar = true;\n    26\t\tbool visualize_radar = true;\n    27\t\tbool visualize_pcd = false;\n    28\t\t// Predict path in the future using UKF\n    29\t\tdouble projectedTime = 0;\n    30\t\tint projectedSteps = 0;\n    31\t\t// --------------------------------\n    32\t\n    33\t\tHighway(pcl::visualization::PCLVisualizer::Ptr& viewer)\n    34\t\t{\n    35\t\n    36\t\t\ttools = Tools();\n    37\t\t\n    38\t\t\tegoCar = Car(Vect3(0, 0, 0), Vect3(4, 2, 2), Color(0, 1, 0), 0, 0, 2, \"egoCar\");\n    39\t\t\t\n    40\t\t\tCar car1(Vect3(-10, 4, 0), Vect3(4, 2, 2), Color(0, 0, 1), 5, 0, 2, \"car1\");\n    41\t\t\t\n    42\t\t\tstd::vector<accuation> car1_instructions;\n    43\t\t\taccuation a = accuation(0.5*1e6, 0.5, 0.0);\n    44\t\t\tcar1_instructions.push_back(a);\n    45\t\t\ta = accuation(2.2*1e6, 0.0, -0.2);\n    46\t\t\tcar1_instructions.push_back(a);\n    47\t\t\ta = accuation(3.3*1e6, 0.0, 0.2);\n    48\t\t\tcar1_instructions.push_back(a);\n    49\t\t\ta = accuation(4.4*1e6, -2.0, 0.0);\n    50\t\t\tcar1_instructions.push_back(a);\n    51\t\t\n    52\t\t\tcar1.setInstructions(car1_instructions);\n    53\t\t\tif( trackCars[0] )\n    54\t\t\t{\n    55\t\t\t\tUKF ukf1;\n    56\t\t\t\tcar1.setUKF(ukf1);\n    57\t\t\t}\n    58\t\t\ttraffic.push_back(car1);\n    59\t\t\t\n    60\t\t\tCar car2(Vect3(25, -4, 0), Vect3(4, 2, 2), Color(0, 0, 1), -6, 0, 2, \"car2\");\n    61\t\t\tstd::vector<accuation> car2_instructions;\n    62\t\t\ta = accuation(4.0*1e6, 3.0, 0.0);\n    63\t\t\tcar2_instructions.push_back(a);\n    64\t\t\ta = accuation(8.0*1e6, 0.0, 0.0);\n    65\t\t\tcar2_instructions.push_back(a);\n    66\t\t\tcar2.setInstructions(car2_instructions);\n    67\t\t\tif( trackCars[1] )\n    68\t\t\t{\n    69\t\t\t\tUKF ukf2;\n    70\t\t\t\tcar2.setUKF(ukf2);\n    71\t\t\t}\n    72\t\t\ttraffic.push_back(car2);\n    73\t\t\n    74\t\t\tCar car3(Vect3(-12, 0, 0), Vect3(4, 2, 2), Color(0, 0, 1), 1, 0, 2, \"car3\");\n    75\t\t\tstd::vector<accuation> car3_instructions;\n    76\t\t\ta = accuation(0.5*1e6, 2.0, 1.0);\n    77\t\t\tcar3_instructions.push_back(a);\n    78\t\t\ta = accuation(1.0*1e6, 2.5, 0.0);\n    79\t\t\tcar3_instructions.push_back(a);\n    80\t\t\ta = accuation(3.2*1e6, 0.0, -1.0);\n    81\t\t\tcar3_instructions.push_back(a);\n    82\t\t\ta = accuation(3.3*1e6, 2.0, 0.0);\n    83\t\t\tcar3_instructions.push_back(a);\n    84\t\t\ta = accuation(4.5*1e6, 0.0, 0.0);\n    85\t\t\tcar3_instructions.push_back(a);\n    86\t\t\ta = accuation(5.5*1e6, -2.0, 0.0);\n    87\t\t\tcar3_instructions.push_back(a);\n    88\t\t\ta = accuation(7.5*1e6, 0.0, 0.0);\n    89\t\t\tcar3_instructions.push_back(a);\n    90\t\t\tcar3.setInstructions(car3_instructions);\n    91\t\t\tif( trackCars[2] )\n    92\t\t\t{\n    93\t\t\t\tUKF ukf3;\n    94\t\t\t\tcar3.setUKF(ukf3);\n    95\t\t\t}\n    96\t\t\ttraffic.push_back(car3);\n    97\t\n    98\t\t\tlidar = new Lidar(traffic,0);\n    99\t\t\n   100\t\t\t// render environment\n   101\t\t\trenderHighway(0,viewer);\n   102\t\t\tegoCar.render(viewer);\n   103\t\t\tcar1.render(viewer);\n   104\t\t\tcar2.render(viewer);\n   105\t\t\tcar3.render(viewer);\n   106\t\t}\n   107\t\t\n   108\t\tvoid stepHighway(double egoVelocity, long long timestamp, int frame_per_sec, pcl::visualization::PCLVisualizer::Ptr& viewer)\n   109\t\t{\n   110\t\n   111\t\t\tif(visualize_pcd)\n   112\t\t\t{\n   113\t\t\t\tpcl::PointCloud<pcl::PointXYZ>::Ptr trafficCloud = tools.loadPcd(\"../src/sensors/data/pcd/highway_\"+std::to_string(timestamp)+\".pcd\");\n   114\t\t\t\trenderPointCloud(viewer, trafficCloud, \"trafficCloud\", Color((float)184/256,(float)223/256,(float)252/256));\n   115\t\t\t}\n   116\t\t\t\n   117\t\n   118\t\t\t// render highway environment with poles\n   119\t\t\trenderHighway(egoVelocity*timestamp/1e6, viewer);\n   120\t\t\tegoCar.render(viewer);\n   121\t\t\t\n   122\t\t\tfor (int i = 0; i < traffic.size(); i++)\n   123\t\t\t{\n   124\t\t\t\ttraffic[i].move((double)1/frame_per_sec, timestamp);\n   125\t\t\t\tif(!visualize_pcd)\n   126\t\t\t\t\ttraffic[i].render(viewer);\n   127\t\t\t\t// Sense surrounding cars with lidar and radar\n   128\t\t\t\tif(trackCars[i])\n   129\t\t\t\t{\n   130\t\t\t\t\tVectorXd gt(4);\n   131\t\t\t\t\tgt << traffic[i].position.x, traffic[i].position.y, traffic[i].velocity*cos(traffic[i].angle), traffic[i].velocity*sin(traffic[i].angle);\n   132\t\t\t\t\ttools.ground_truth.push_back(gt);\n   133\t\t\t\t\ttools.lidarSense(traffic[i], viewer, timestamp, visualize_lidar);\n   134\t\t\t\t\ttools.radarSense(traffic[i], egoCar, viewer, timestamp, visualize_radar);\n   135\t\t\t\t\ttools.ukfResults(traffic[i],viewer, projectedTime, projectedSteps);\n   136\t\t\t\t\tVectorXd estimate(4);\n   137\t\t\t\t\tdouble v  = traffic[i].ukf.x_(2);\n   138\t    \t\t\tdouble yaw = traffic[i].ukf.x_(3);\n   139\t    \t\t\tdouble v1 = cos(yaw)*v;\n   140\t    \t\t\tdouble v2 = sin(yaw)*v;\n   141\t\t\t\t\testimate << traffic[i].ukf.x_[0], traffic[i].ukf.x_[1], v1, v2;\n   142\t\t\t\t\ttools.estimations.push_back(estimate);\n   143\t\t\n   144\t\t\t\t}\n   145\t\t\t}\n   146\t\t\tviewer->addText(\"Accuracy - RMSE:\", 30, 300, 20, 1, 1, 1, \"rmse\");\n   147\t\t\tVectorXd rmse = tools.CalculateRMSE(tools.estimations, tools.ground_truth);\n   148\t\t\tviewer->addText(\" X: \"+std::to_string(rmse[0]), 30, 275, 20, 1, 1, 1, \"rmse_x\");\n   149\t\t\tviewer->addText(\" Y: \"+std::to_string(rmse[1]), 30, 250, 20, 1, 1, 1, \"rmse_y\");\n   150\t\t\tviewer->addText(\"Vx: \"\t+std::to_string(rmse[2]), 30, 225, 20, 1, 1, 1, \"rmse_vx\");\n   151\t\t\tviewer->addText(\"Vy: \"\t+std::to_string(rmse[3]), 30, 200, 20, 1, 1, 1, \"rmse_vy\");\n   152\t\n   153\t\t\tif(timestamp > 1.0e6)\n   154\t\t\t{\n   155\t\n   156\t\t\t\tif(rmse[0] > rmseThreshold[0])\n   157\t\t\t\t{\n   158\t\t\t\t\trmseFailLog[0] = rmse[0];\n   159\t\t\t\t\tpass = false;\n   160\t\t\t\t}\n   161\t\t\t\tif(rmse[1] > rmseThreshold[1])\n   162\t\t\t\t{\n   163\t\t\t\t\trmseFailLog[1] = rmse[1];\n   164\t\t\t\t\tpass = false;\n   165\t\t\t\t}\n   166\t\t\t\tif(rmse[2] > rmseThreshold[2])\n   167\t\t\t\t{\n   168\t\t\t\t\trmseFailLog[2] = rmse[2];\n   169\t\t\t\t\tpass = false;\n   170\t\t\t\t}\n   171\t\t\t\tif(rmse[3] > rmseThreshold[3])\n   172\t\t\t\t{\n   173\t\t\t\t\trmseFailLog[3] = rmse[3];\n   174\t\t\t\t\tpass = false;\n   175\t\t\t\t}\n   176\t\t\t}\n   177\t\t\tif(!pass)\n   178\t\t\t{\n   179\t\t\t\tviewer->addText(\"RMSE Failed Threshold\", 30, 150, 20, 1, 0, 0, \"rmse_fail\");\n   180\t\t\t\tif(rmseFailLog[0] > 0)\n   181\t\t\t\t\tviewer->addText(\" X: \"+std::to_string(rmseFailLog[0]), 30, 125, 20, 1, 0, 0, \"rmse_fail_x\");\n   182\t\t\t\tif(rmseFailLog[1] > 0)\n   183\t\t\t\t\tviewer->addText(\" Y: \"+std::to_string(rmseFailLog[1]), 30, 100, 20, 1, 0, 0, \"rmse_fail_y\");\n   184\t\t\t\tif(rmseFailLog[2] > 0)\n   185\t\t\t\t\tviewer->addText(\"Vx: \"+std::to_string(rmseFailLog[2]), 30, 75, 20, 1, 0, 0, \"rmse_fail_vx\");\n   186\t\t\t\tif(rmseFailLog[3] > 0)\n   187\t\t\t\t\tviewer->addText(\"Vy: \"+std::to_string(rmseFailLog[3]), 30, 50, 20, 1, 0, 0, \"rmse_fail_vy\");\n   188\t\t\t}\n   189\t\t\t\n   190\t\t}\n   191\t\t\n   192\t};\nTotal lines in file: 192\n","isError":false,"requestId":""}},"cd0e25c6-3515-4672-8eef-60b2002fc58d;toolu_vrtx_0187H65goBWCecDxFjseMLK8":{"requestId":"cd0e25c6-3515-4672-8eef-60b2002fc58d","toolUseId":"toolu_vrtx_0187H65goBWCecDxFjseMLK8","phase":5,"result":{"text":"Successfully edited the file src/ukf.h.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n     1\t#ifndef UKF_H\n     2\t#define UKF_H\n     3\t\n     4\t#include \"Eigen/Dense\"\n     5\t#include \"measurement_package.h\"\n     6\t\n     7\tclass UKF {\n     8\t public:\n     9\t  /**\n    10\t   * Constructor\n    11\t   */\n    12\t  UKF();\n    13\t\n    14\t  /**\n    15\t   * Destructor\n    16\t   */\n    17\t  virtual ~UKF();\n    18\t\n    19\t  /**\n    20\t   * ProcessMeasurement\n    21\t   * @param meas_package The latest measurement data of either radar or laser\n    22\t   */\n    23\t  void ProcessMeasurement(MeasurementPackage meas_package);\n    24\t\n    25\t  /**\n    26\t   * Prediction Predicts sigma points, the state, and the state covariance\n    27\t   * matrix\n    28\t   * @param delta_t Time between k and k+1 in s\n    29\t   */\n    30\t  void Prediction(double delta_t);\n    31\t\n    32\t  /**\n    33\t   * Updates the state and the state covariance matrix using a laser measurement\n    34\t   * @param meas_package The measurement at k+1\n    35\t   */\n    36\t  void UpdateLidar(MeasurementPackage meas_package);\n    37\t\n    38\t  /**\n    39\t   * Updates the state and the state covariance matrix using a radar measurement\n    40\t   * @param meas_package The measurement at k+1\n    41\t   */\n    42\t  void UpdateRadar(MeasurementPackage meas_package);\n    43\t\n    44\t  /**\n    45\t   * Generates augmented sigma points\n    46\t   */\n    47\t  void GenerateAugmentedSigmaPoints(Eigen::MatrixXd* Xsig_out);\n    48\t\n    49\t  /**\n    50\t   * Predicts sigma points\n    51\t   * @param Xsig_aug Augmented sigma points\n    52\t   * @param delta_t Time between k and k+1 in s\n    53\t   */\n    54\t  void SigmaPointPrediction(const Eigen::MatrixXd& Xsig_aug, double delta_t);\n    55\t\n    56\t  /**\n    57\t   * Predicts mean and covariance\n    58\t   */\n    59\t  void PredictMeanAndCovariance();\n    60\t\n    61\t  /**\n    62\t   * Normalizes angle to be between -pi and pi\n    63\t   * @param angle Angle to normalize\n    64\t   * @return Normalized angle\n    65\t   */\n    66\t  double NormalizeAngle(double angle);\n    67\t\n    68\t  // initially set to false, set to true in first call of ProcessMeasurement\n    69\t  bool is_initialized_;\n    70\t\n    71\t  // if this is false, laser measurements will be ignored (except for init)\n    72\t  bool use_laser_;\n    73\t\n    74\t  // if this is false, radar measurements will be ignored (except for init)\n    75\t  bool use_radar_;\n    76\t\n    77\t  // state vector: [pos1 pos2 vel_abs yaw_angle yaw_rate] in SI units and rad\n    78\t  Eigen::VectorXd x_;\n    79\t\n    80\t  // state covariance matrix\n    81\t  Eigen::MatrixXd P_;\n    82\t\n    83\t  // predicted sigma points matrix\n    84\t  Eigen::MatrixXd Xsig_pred_;\n    85\t\n    86\t  // time when the state is true, in us\n    87\t  long long time_us_;\n    88\t\n    89\t  // Process noise standard deviation longitudinal acceleration in m/s^2\n    90\t  double std_a_;\n    91\t\n    92\t  // Process noise standard deviation yaw acceleration in rad/s^2\n    93\t  double std_yawdd_;\n    94\t\n    95\t  // Laser measurement noise standard deviation position1 in m\n    96\t  double std_laspx_;\n    97\t\n    98\t  // Laser measurement noise standard deviation position2 in m\n    99\t  double std_laspy_;\n   100\t\n   101\t  // Radar measurement noise standard deviation radius in m\n   102\t  double std_radr_;\n   103\t\n   104\t  // Radar measurement noise standard deviation angle in rad\n   105\t  double std_radphi_;\n   106\t\n   107\t  // Radar measurement noise standard deviation radius change in m/s\n   108\t  double std_radrd_ ;\n   109\t\n   110\t  // Weights of sigma points\n   111\t  Eigen::VectorXd weights_;\n   112\t\n   113\t  // State dimension\n   114\t  int n_x_;\n   115\t\n   116\t  // Augmented state dimension\n   117\t  int n_aug_;\n   118\t\n   119\t  // Sigma point spreading parameter\n   120\t  double lambda_;\n   121\t\n   122\t  // Number of sigma points\n   123\t  int n_sig_;\n   124\t};\n   125\t\n   126\t#endif  // UKF_H\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","isError":false,"requestId":""}},"df8322c6-5f08-47b0-9b93-a6a65ff4ff88;toolu_vrtx_018tjAcAdzkg8hTCq4o1mjs9":{"requestId":"df8322c6-5f08-47b0-9b93-a6a65ff4ff88","toolUseId":"toolu_vrtx_018tjAcAdzkg8hTCq4o1mjs9","phase":5,"result":{"text":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n     1\t#include \"ukf.h\"\n     2\t#include \"Eigen/Dense\"\n     3\t#include <iostream>\n     4\t\n     5\tusing Eigen::MatrixXd;\n     6\tusing Eigen::VectorXd;\n     7\tusing std::cout;\n     8\tusing std::endl;\n     9\t\n    10\t/**\n    11\t * Initializes Unscented Kalman filter\n    12\t */\n    13\tUKF::UKF() {\n    14\t  // if this is false, laser measurements will be ignored (except during init)\n    15\t  use_laser_ = true;\n    16\t\n    17\t  // if this is false, radar measurements will be ignored (except during init)\n    18\t  use_radar_ = true;\n    19\t\n    20\t  // State dimension (px, py, v, yaw, yaw_rate)\n    21\t  n_x_ = 5;\n    22\t\n    23\t  // Augmented state dimension (adds 2 noise terms)\n    24\t  n_aug_ = n_x_ + 2;\n    25\t\n    26\t  // Number of sigma points\n    27\t  n_sig_ = 2 * n_aug_ + 1;\n    28\t\n    29\t  // Sigma point spreading parameter\n    30\t  lambda_ = 3 - n_aug_;\n    31\t\n    32\t  // initial state vector\n    33\t  x_ = VectorXd::Zero(n_x_);\n    34\t\n    35\t  // initial covariance matrix\n    36\t  P_ = MatrixXd::Identity(n_x_, n_x_);\n    37\t\n    38\t  // Predicted sigma points matrix\n    39\t  Xsig_pred_ = MatrixXd(n_x_, n_sig_);\n    40\t\n    41\t  // Weights of sigma points\n    42\t  weights_ = VectorXd(n_sig_);\n    43\t  weights_(0) = lambda_ / (lambda_ + n_aug_);\n    44\t  for (int i = 1; i < n_sig_; ++i) {\n    45\t    weights_(i) = 0.5 / (lambda_ + n_aug_);\n    46\t  }\n    47\t\n    48\t  // Process noise standard deviation longitudinal acceleration in m/s^2\n    49\t  // Reduced from default 30 to a more reasonable value for cars\n    50\t  std_a_ = 3.0;\n    51\t\n    52\t  // Process noise standard deviation yaw acceleration in rad/s^2\n    53\t  // Reduced from default 30 to a more reasonable value for cars\n    54\t  std_yawdd_ = 0.5;\n    55\t\n    56\t  /**\n    57\t   * DO NOT MODIFY measurement noise values below.\n    58\t   * These are provided by the sensor manufacturer.\n    59\t   */\n    60\t\n    61\t  // Laser measurement noise standard deviation position1 in m\n    62\t  std_laspx_ = 0.15;\n    63\t\n    64\t  // Laser measurement noise standard deviation position2 in m\n    65\t  std_laspy_ = 0.15;\n    66\t\n    67\t  // Radar measurement noise standard deviation radius in m\n    68\t  std_radr_ = 0.3;\n    69\t\n    70\t  // Radar measurement noise standard deviation angle in rad\n    71\t  std_radphi_ = 0.03;\n    72\t\n    73\t  // Radar measurement noise standard deviation radius change in m/s\n    74\t  std_radrd_ = 0.3;\n    75\t\n    76\t  /**\n    77\t   * End DO NOT MODIFY section for measurement noise values\n    78\t   */\n    79\t\n    80\t  // Set initialization flag to false\n    81\t  is_initialized_ = false;\n    82\t\n    83\t  // Set time to 0\n    84\t  time_us_ = 0;\n    85\t}\n    86\t\n    87\tUKF::~UKF() {}\n    88\t\n    89\tvoid UKF::ProcessMeasurement(MeasurementPackage meas_package) {\n    90\t  /**\n    91\t   * TODO: Complete this function! Make sure you switch between lidar and radar\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","isError":false,"requestId":""}},"b42fbc22-fe75-4f69-8557-871507ea4ebf;toolu_vrtx_018pqgYhSTu33QoF8Fz9pdX5":{"requestId":"b42fbc22-fe75-4f69-8557-871507ea4ebf","toolUseId":"toolu_vrtx_018pqgYhSTu33QoF8Fz9pdX5","phase":5,"result":{"text":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n    85\t}\n    86\t\n    87\tUKF::~UKF() {}\n    88\t\n    89\tvoid UKF::ProcessMeasurement(MeasurementPackage meas_package) {\n    90\t  // Skip processing if the sensor type is disabled\n    91\t  if ((meas_package.sensor_type_ == MeasurementPackage::RADAR && !use_radar_) ||\n    92\t      (meas_package.sensor_type_ == MeasurementPackage::LASER && !use_laser_)) {\n    93\t    return;\n    94\t  }\n    95\t\n    96\t  // Initialize on first measurement\n    97\t  if (!is_initialized_) {\n    98\t    // First measurement\n    99\t    if (meas_package.sensor_type_ == MeasurementPackage::RADAR) {\n   100\t      // Convert radar from polar to cartesian coordinates\n   101\t      double rho = meas_package.raw_measurements_(0);      // range\n   102\t      double phi = meas_package.raw_measurements_(1);      // bearing\n   103\t      double rho_dot = meas_package.raw_measurements_(2);  // velocity of rho\n   104\t\n   105\t      // Convert from polar to cartesian coordinates\n   106\t      double px = rho * cos(phi);\n   107\t      double py = rho * sin(phi);\n   108\t\n   109\t      // Initialize state with position from radar\n   110\t      // We can't directly measure velocity, yaw, and yaw_rate from first radar measurement\n   111\t      // so we initialize them to 0\n   112\t      x_ << px, py, 0, 0, 0;\n   113\t    }\n   114\t    else if (meas_package.sensor_type_ == MeasurementPackage::LASER) {\n   115\t      // Initialize state with position from lidar\n   116\t      // We can't directly measure velocity, yaw, and yaw_rate from lidar\n   117\t      // so we initialize them to 0\n   118\t      x_ << meas_package.raw_measurements_(0), meas_package.raw_measurements_(1), 0, 0, 0;\n   119\t    }\n   120\t\n   121\t    // Initialize covariance matrix with higher uncertainty for velocity, yaw, and yaw_rate\n   122\t    P_.fill(0.0);\n   123\t    P_(0, 0) = 1.0;  // px uncertainty\n   124\t    P_(1, 1) = 1.0;  // py uncertainty\n   125\t    P_(2, 2) = 1.0;  // v uncertainty\n   126\t    P_(3, 3) = 1.0;  // yaw uncertainty\n   127\t    P_(4, 4) = 1.0;  // yaw rate uncertainty\n   128\t\n   129\t    // Save timestamp\n   130\t    time_us_ = meas_package.timestamp_;\n   131\t\n   132\t    // Set initialization flag\n   133\t    is_initialized_ = true;\n   134\t\n   135\t    return;\n   136\t  }\n   137\t\n   138\t  // Compute time difference in seconds\n   139\t  double delta_t = (meas_package.timestamp_ - time_us_) / 1000000.0;\n   140\t  time_us_ = meas_package.timestamp_;\n   141\t\n   142\t  // Predict\n   143\t  Prediction(delta_t);\n   144\t\n   145\t  // Update based on sensor type\n   146\t  if (meas_package.sensor_type_ == MeasurementPackage::RADAR && use_radar_) {\n   147\t    UpdateRadar(meas_package);\n   148\t  }\n   149\t  else if (meas_package.sensor_type_ == MeasurementPackage::LASER && use_laser_) {\n   150\t    UpdateLidar(meas_package);\n   151\t  }\n   152\t}\n   153\t\n   154\tvoid UKF::Prediction(double delta_t) {\n   155\t  /**\n   156\t   * TODO: Complete this function! Estimate the object's location.\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","isError":false,"requestId":""}},"6a7a2665-8bb2-4ffc-a159-a450d7c99fa2;toolu_vrtx_0122ogtVPPAUdba1sJ7DGv12":{"requestId":"6a7a2665-8bb2-4ffc-a159-a450d7c99fa2","toolUseId":"toolu_vrtx_0122ogtVPPAUdba1sJ7DGv12","phase":5,"result":{"text":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n   150\t    UpdateLidar(meas_package);\n   151\t  }\n   152\t}\n   153\t\n   154\tvoid UKF::Prediction(double delta_t) {\n   155\t  // Generate augmented sigma points\n   156\t  MatrixXd Xsig_aug = MatrixXd(n_aug_, n_sig_);\n   157\t  GenerateAugmentedSigmaPoints(&Xsig_aug);\n   158\t\n   159\t  // Predict sigma points\n   160\t  SigmaPointPrediction(Xsig_aug, delta_t);\n   161\t\n   162\t  // Predict mean and covariance\n   163\t  PredictMeanAndCovariance();\n   164\t}\n   165\t\n   166\tvoid UKF::GenerateAugmentedSigmaPoints(MatrixXd* Xsig_out) {\n   167\t  // Create augmented mean vector\n   168\t  VectorXd x_aug = VectorXd(n_aug_);\n   169\t  x_aug.head(n_x_) = x_;\n   170\t  x_aug(n_x_) = 0;     // mean of process noise for longitudinal acceleration\n   171\t  x_aug(n_x_ + 1) = 0; // mean of process noise for yaw acceleration\n   172\t\n   173\t  // Create augmented covariance matrix\n   174\t  MatrixXd P_aug = MatrixXd::Zero(n_aug_, n_aug_);\n   175\t  P_aug.topLeftCorner(n_x_, n_x_) = P_;\n   176\t  P_aug(n_x_, n_x_) = std_a_ * std_a_;\n   177\t  P_aug(n_x_ + 1, n_x_ + 1) = std_yawdd_ * std_yawdd_;\n   178\t\n   179\t  // Create square root matrix\n   180\t  MatrixXd L = P_aug.llt().matrixL();\n   181\t\n   182\t  // Create augmented sigma points\n   183\t  MatrixXd Xsig_aug = MatrixXd(n_aug_, n_sig_);\n   184\t  Xsig_aug.col(0) = x_aug;\n   185\t\n   186\t  double sqrt_lambda_n_aug = sqrt(lambda_ + n_aug_);\n   187\t\n   188\t  for (int i = 0; i < n_aug_; ++i) {\n   189\t    Xsig_aug.col(i + 1) = x_aug + sqrt_lambda_n_aug * L.col(i);\n   190\t    Xsig_aug.col(i + 1 + n_aug_) = x_aug - sqrt_lambda_n_aug * L.col(i);\n   191\t  }\n   192\t\n   193\t  *Xsig_out = Xsig_aug;\n   194\t}\n   195\t\n   196\tvoid UKF::SigmaPointPrediction(const MatrixXd& Xsig_aug, double delta_t) {\n   197\t  // Predict sigma points\n   198\t  for (int i = 0; i < n_sig_; ++i) {\n   199\t    // Extract values for better readability\n   200\t    double p_x = Xsig_aug(0, i);\n   201\t    double p_y = Xsig_aug(1, i);\n   202\t    double v = Xsig_aug(2, i);\n   203\t    double yaw = Xsig_aug(3, i);\n   204\t    double yawd = Xsig_aug(4, i);\n   205\t    double nu_a = Xsig_aug(5, i);\n   206\t    double nu_yawdd = Xsig_aug(6, i);\n   207\t\n   208\t    // Predicted state values\n   209\t    double px_p, py_p;\n   210\t\n   211\t    // Avoid division by zero\n   212\t    if (fabs(yawd) > 0.001) {\n   213\t      px_p = p_x + v / yawd * (sin(yaw + yawd * delta_t) - sin(yaw));\n   214\t      py_p = p_y + v / yawd * (cos(yaw) - cos(yaw + yawd * delta_t));\n   215\t    } else {\n   216\t      px_p = p_x + v * delta_t * cos(yaw);\n   217\t      py_p = p_y + v * delta_t * sin(yaw);\n   218\t    }\n   219\t\n   220\t    double v_p = v;\n   221\t    double yaw_p = yaw + yawd * delta_t;\n   222\t    double yawd_p = yawd;\n   223\t\n   224\t    // Add noise\n   225\t    px_p = px_p + 0.5 * nu_a * delta_t * delta_t * cos(yaw);\n   226\t    py_p = py_p + 0.5 * nu_a * delta_t * delta_t * sin(yaw);\n   227\t    v_p = v_p + nu_a * delta_t;\n   228\t    yaw_p = yaw_p + 0.5 * nu_yawdd * delta_t * delta_t;\n   229\t    yawd_p = yawd_p + nu_yawdd * delta_t;\n   230\t\n   231\t    // Write predicted sigma point into right column\n   232\t    Xsig_pred_(0, i) = px_p;\n   233\t    Xsig_pred_(1, i) = py_p;\n   234\t    Xsig_pred_(2, i) = v_p;\n   235\t    Xsig_pred_(3, i) = yaw_p;\n   236\t    Xsig_pred_(4, i) = yawd_p;\n   237\t  }\n   238\t}\n   239\t\n   240\tvoid UKF::PredictMeanAndCovariance() {\n   241\t  // Predict state mean\n   242\t  x_.fill(0.0);\n   243\t  for (int i = 0; i < n_sig_; ++i) {\n   244\t    x_ = x_ + weights_(i) * Xsig_pred_.col(i);\n   245\t  }\n   246\t\n   247\t  // Predict state covariance matrix\n   248\t  P_.fill(0.0);\n   249\t  for (int i = 0; i < n_sig_; ++i) {\n   250\t    // State difference\n   251\t    VectorXd x_diff = Xsig_pred_.col(i) - x_;\n   252\t\n   253\t    // Angle normalization\n   254\t    x_diff(3) = NormalizeAngle(x_diff(3));\n   255\t\n   256\t    P_ = P_ + weights_(i) * x_diff * x_diff.transpose();\n   257\t  }\n   258\t}\n   259\t\n   260\tdouble UKF::NormalizeAngle(double angle) {\n   261\t  while (angle > M_PI) angle -= 2.0 * M_PI;\n   262\t  while (angle < -M_PI) angle += 2.0 * M_PI;\n   263\t  return angle;\n   264\t}\n   265\t\n   266\tvoid UKF::UpdateLidar(MeasurementPackage meas_package) {\n   267\t  /**\n   268\t   * TODO: Complete this function! Use lidar data to update the belief\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","isError":false,"requestId":""}},"a8c8c78c-d784-4c15-8750-173aad611876;toolu_vrtx_0163EZ2oC7XMo5oE8LXjAC4C":{"requestId":"a8c8c78c-d784-4c15-8750-173aad611876","toolUseId":"toolu_vrtx_0163EZ2oC7XMo5oE8LXjAC4C","phase":5,"result":{"text":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n   262\t  while (angle < -M_PI) angle += 2.0 * M_PI;\n   263\t  return angle;\n   264\t}\n   265\t\n   266\tvoid UKF::UpdateLidar(MeasurementPackage meas_package) {\n   267\t  // Set measurement dimension (px, py)\n   268\t  int n_z = 2;\n   269\t\n   270\t  // Create matrix for sigma points in measurement space\n   271\t  MatrixXd Zsig = MatrixXd(n_z, n_sig_);\n   272\t\n   273\t  // Mean predicted measurement\n   274\t  VectorXd z_pred = VectorXd(n_z);\n   275\t\n   276\t  // Measurement covariance matrix S\n   277\t  MatrixXd S = MatrixXd(n_z, n_z);\n   278\t\n   279\t  // Transform sigma points into measurement space\n   280\t  for (int i = 0; i < n_sig_; ++i) {\n   281\t    // Extract values for better readability\n   282\t    double p_x = Xsig_pred_(0, i);\n   283\t    double p_y = Xsig_pred_(1, i);\n   284\t\n   285\t    // Measurement model - lidar directly measures px and py\n   286\t    Zsig(0, i) = p_x;  // px\n   287\t    Zsig(1, i) = p_y;  // py\n   288\t  }\n   289\t\n   290\t  // Calculate mean predicted measurement\n   291\t  z_pred.fill(0.0);\n   292\t  for (int i = 0; i < n_sig_; ++i) {\n   293\t    z_pred = z_pred + weights_(i) * Zsig.col(i);\n   294\t  }\n   295\t\n   296\t  // Calculate innovation covariance matrix S\n   297\t  S.fill(0.0);\n   298\t  for (int i = 0; i < n_sig_; ++i) {\n   299\t    // Residual\n   300\t    VectorXd z_diff = Zsig.col(i) - z_pred;\n   301\t\n   302\t    S = S + weights_(i) * z_diff * z_diff.transpose();\n   303\t  }\n   304\t\n   305\t  // Add measurement noise covariance matrix\n   306\t  MatrixXd R = MatrixXd(n_z, n_z);\n   307\t  R << std_laspx_ * std_laspx_, 0,\n   308\t       0, std_laspy_ * std_laspy_;\n   309\t  S = S + R;\n   310\t\n   311\t  // Create matrix for cross correlation Tc\n   312\t  MatrixXd Tc = MatrixXd(n_x_, n_z);\n   313\t\n   314\t  // Calculate cross correlation matrix\n   315\t  Tc.fill(0.0);\n   316\t  for (int i = 0; i < n_sig_; ++i) {\n   317\t    // Residual\n   318\t    VectorXd z_diff = Zsig.col(i) - z_pred;\n   319\t\n   320\t    // State difference\n   321\t    VectorXd x_diff = Xsig_pred_.col(i) - x_;\n   322\t    // Angle normalization\n   323\t    x_diff(3) = NormalizeAngle(x_diff(3));\n   324\t\n   325\t    Tc = Tc + weights_(i) * x_diff * z_diff.transpose();\n   326\t  }\n   327\t\n   328\t  // Kalman gain K\n   329\t  MatrixXd K = Tc * S.inverse();\n   330\t\n   331\t  // Residual\n   332\t  VectorXd z = meas_package.raw_measurements_;\n   333\t  VectorXd z_diff = z - z_pred;\n   334\t\n   335\t  // Update state mean and covariance matrix\n   336\t  x_ = x_ + K * z_diff;\n   337\t  P_ = P_ - K * S * K.transpose();\n   338\t\n   339\t  // Calculate NIS (Normalized Innovation Squared)\n   340\t  double NIS_lidar = z_diff.transpose() * S.inverse() * z_diff;\n   341\t}\n   342\t\n   343\tvoid UKF::UpdateRadar(MeasurementPackage meas_package) {\n   344\t  /**\n   345\t   * TODO: Complete this function! Use radar data to update the belief\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","isError":false,"requestId":""}},"516c33ed-f210-4995-9d17-a45cc26614df;toolu_vrtx_01JFt9kd6EeQyuJzWfomHP8o":{"requestId":"516c33ed-f210-4995-9d17-a45cc26614df","toolUseId":"toolu_vrtx_01JFt9kd6EeQyuJzWfomHP8o","phase":5,"result":{"text":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n   339\t  // Calculate NIS (Normalized Innovation Squared)\n   340\t  double NIS_lidar = z_diff.transpose() * S.inverse() * z_diff;\n   341\t}\n   342\t\n   343\tvoid UKF::UpdateRadar(MeasurementPackage meas_package) {\n   344\t  // Set measurement dimension (r, phi, r_dot)\n   345\t  int n_z = 3;\n   346\t\n   347\t  // Create matrix for sigma points in measurement space\n   348\t  MatrixXd Zsig = MatrixXd(n_z, n_sig_);\n   349\t\n   350\t  // Mean predicted measurement\n   351\t  VectorXd z_pred = VectorXd(n_z);\n   352\t\n   353\t  // Measurement covariance matrix S\n   354\t  MatrixXd S = MatrixXd(n_z, n_z);\n   355\t\n   356\t  // Transform sigma points into measurement space\n   357\t  for (int i = 0; i < n_sig_; ++i) {\n   358\t    // Extract values for better readability\n   359\t    double p_x = Xsig_pred_(0, i);\n   360\t    double p_y = Xsig_pred_(1, i);\n   361\t    double v = Xsig_pred_(2, i);\n   362\t    double yaw = Xsig_pred_(3, i);\n   363\t\n   364\t    double v1 = cos(yaw) * v;\n   365\t    double v2 = sin(yaw) * v;\n   366\t\n   367\t    // Measurement model\n   368\t    double rho = sqrt(p_x * p_x + p_y * p_y);                // r\n   369\t    double phi = atan2(p_y, p_x);                            // phi\n   370\t    double rho_dot = (p_x * v1 + p_y * v2) / (rho + 1e-6);   // r_dot (avoid division by zero)\n   371\t\n   372\t    Zsig(0, i) = rho;\n   373\t    Zsig(1, i) = phi;\n   374\t    Zsig(2, i) = rho_dot;\n   375\t  }\n   376\t\n   377\t  // Calculate mean predicted measurement\n   378\t  z_pred.fill(0.0);\n   379\t  for (int i = 0; i < n_sig_; ++i) {\n   380\t    z_pred = z_pred + weights_(i) * Zsig.col(i);\n   381\t  }\n   382\t\n   383\t  // Calculate innovation covariance matrix S\n   384\t  S.fill(0.0);\n   385\t  for (int i = 0; i < n_sig_; ++i) {\n   386\t    // Residual\n   387\t    VectorXd z_diff = Zsig.col(i) - z_pred;\n   388\t\n   389\t    // Angle normalization\n   390\t    z_diff(1) = NormalizeAngle(z_diff(1));\n   391\t\n   392\t    S = S + weights_(i) * z_diff * z_diff.transpose();\n   393\t  }\n   394\t\n   395\t  // Add measurement noise covariance matrix\n   396\t  MatrixXd R = MatrixXd(n_z, n_z);\n   397\t  R << std_radr_ * std_radr_, 0, 0,\n   398\t       0, std_radphi_ * std_radphi_, 0,\n   399\t       0, 0, std_radrd_ * std_radrd_;\n   400\t  S = S + R;\n   401\t\n   402\t  // Create matrix for cross correlation Tc\n   403\t  MatrixXd Tc = MatrixXd(n_x_, n_z);\n   404\t\n   405\t  // Calculate cross correlation matrix\n   406\t  Tc.fill(0.0);\n   407\t  for (int i = 0; i < n_sig_; ++i) {\n   408\t    // Residual\n   409\t    VectorXd z_diff = Zsig.col(i) - z_pred;\n   410\t    // Angle normalization\n   411\t    z_diff(1) = NormalizeAngle(z_diff(1));\n   412\t\n   413\t    // State difference\n   414\t    VectorXd x_diff = Xsig_pred_.col(i) - x_;\n   415\t    // Angle normalization\n   416\t    x_diff(3) = NormalizeAngle(x_diff(3));\n   417\t\n   418\t    Tc = Tc + weights_(i) * x_diff * z_diff.transpose();\n   419\t  }\n   420\t\n   421\t  // Kalman gain K\n   422\t  MatrixXd K = Tc * S.inverse();\n   423\t\n   424\t  // Residual\n   425\t  VectorXd z = meas_package.raw_measurements_;\n   426\t  VectorXd z_diff = z - z_pred;\n   427\t\n   428\t  // Angle normalization\n   429\t  z_diff(1) = NormalizeAngle(z_diff(1));\n   430\t\n   431\t  // Update state mean and covariance matrix\n   432\t  x_ = x_ + K * z_diff;\n   433\t  P_ = P_ - K * S * K.transpose();\n   434\t\n   435\t  // Calculate NIS (Normalized Innovation Squared)\n   436\t  double NIS_radar = z_diff.transpose() * S.inverse() * z_diff;\n   437\t}\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","isError":false,"requestId":""}},"ab965853-990c-48c1-be52-e7f3ce3b7bf9;toolu_vrtx_017s5ZD8fmVfQV5KJeZQxcTn":{"requestId":"ab965853-990c-48c1-be52-e7f3ce3b7bf9","toolUseId":"toolu_vrtx_017s5ZD8fmVfQV5KJeZQxcTn","phase":5,"result":{"text":"Here are the results from executing the command.\n        <return-code>\n        1\n        </return-code>\n        <stdout>\n        \u001b[0mCMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):\n  Compatibility with CMake < 3.5 will be removed from a future version of\n  CMake.\n\n  Update the VERSION argument <min> value or use a ...<max> suffix to tell\n  CMake that the project does not need compatibility with older versions.\n\n\u001b[0m\n-- The C compiler identification is GNU 13.3.0\n-- The CXX compiler identification is GNU 13.3.0\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working C compiler: /usr/bin/cc - skipped\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Check for working CXX compiler: /usr/bin/c++ - skipped\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n\u001b[31mCMake Error at CMakeLists.txt:10 (find_package):\n  By not providing \"FindPCL.cmake\" in CMAKE_MODULE_PATH this project has\n  asked CMake to find a package configuration file provided by \"PCL\", but\n  CMake did not find one.\n\n  Could not find a package configuration file provided by \"PCL\" (requested\n  version 1.2) with any of the following names:\n\n    PCLConfig.cmake\n    pcl-config.cmake\n\n  Add the installation prefix of \"PCL\" to CMAKE_PREFIX_PATH or set \"PCL_DIR\"\n  to a directory containing one of the above files.  If \"PCL\" provides a\n  separate development package or SDK, be sure it has been installed.\n\n\u001b[0m\n-- Configuring incomplete, errors occurred!\n\n        </stdout>\n        <stderr>\n        \n        </stderr>","isError":false,"requestId":""}},"99866c58-8ba5-46d9-8791-f17ca4dd3652;toolu_vrtx_01MEoQGkGpzZ3Nd6QekGBd1R":{"requestId":"99866c58-8ba5-46d9-8791-f17ca4dd3652","toolUseId":"toolu_vrtx_01MEoQGkGpzZ3Nd6QekGBd1R","phase":5,"result":{"text":"Here are the results from executing the command.\n        <return-code>\n        0\n        </return-code>\n        <stdout>\n        [sudo] password for krillavilla: ****************\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\b \b\n\n0% [Working]\n            \nHit:1 https://downloads.1password.com/linux/debian/amd64 stable InRelease\n\n0% [Connecting to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Connecting to repository.mullvad.net (45.149.104.1)] [Connected to repo.nextdns.io (104.26.11.186)] [Connecting\n                                                                                                                                                                                                                                                                     \nHit:2 https://download.docker.com/linux/ubuntu noble InRelease\n\n0% [Connecting to ppa.launchpadcontent.net (185.125.190.80)] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Connecting to repository.mullvad.net (45.149.104.1)] [Waiting for headers] [Connecting to security.ubuntu.com (185.125.190.81)] [Wait\n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Connecting to repository.mullvad.net (45.149.104.1)] [Waiting for headers] [Connecting to security.ubuntu.com (185.125.190.81)] [Waiti\n                                                                                                                                                                                                                                                                     \nIgn:3 https://repository.mullvad.net/deb/stable noble InRelease\n\n                                                                                                                                                                                                                                                                     \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                                                                                                                 \nHit:4 http://archive.ubuntu.com/ubuntu noble InRelease\n\n                                                                                                                                                                                                                                                                 \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                                                                                           \nHit:5 https://packages.microsoft.com/repos/code stable InRelease\n\n                                                                                                                                                                                                                                           \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Connected to pkgs.k8s.io (34.107.204.206)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                                                                     \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                                               \nIgn:6 https://releases.warp.dev/linux/deb stable InRelease\n\n                                                                                                                                                                                               \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                                               \nHit:7 https://packages.mozilla.org/apt mozilla InRelease\n\n                                                                                                                                                                                               \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                                         \nHit:8 https://releases.warp.dev/linux/deb stable Release\n\n                                                                                                                                                                         \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                                                   \nHit:9 http://security.ubuntu.com/ubuntu noble-security InRelease\n\n                                                                                                                                                   \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                             \n0% [Connected to ppa.launchpadcontent.net (185.125.190.80)] [Waiting for headers] [Waiting for headers]\n0% [Connecting to prod-cdn.packages.k8s.io] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n0% [Connected to prod-cdn.packages.k8s.io (18.238.96.49)] [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                                                                           \nHit:11 https://repo.nextdns.io/deb stable InRelease\n\n                                                                                                                           \n0% [Connected to prod-cdn.packages.k8s.io (18.238.96.49)] [Waiting for headers] [Waiting for headers]\n0% [Connected to prod-cdn.packages.k8s.io (18.238.96.49)] [Waiting for headers] [Waiting for headers]\n                                                                                                     \nIgn:13 https://repo.vivaldi.com/snapshot/deb stable InRelease\n\n                                                                                                     \n0% [Waiting for headers] [Waiting for headers]\n0% [Waiting for headers] [Waiting for headers] [Waiting for headers]\n                                                                    \nHit:10 https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.30/deb  InRelease\n\n                                                                    \n0% [Waiting for headers] [Waiting for headers]\n0% [Waiting for headers] [Waiting for headers]\n0% [Waiting for headers] [Waiting for headers]\n                                              \nHit:14 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu noble InRelease\n\n                                              \n0% [Waiting for headers]\n                        \nIgn:15 https://repo.vivaldi.com/stable/deb stable InRelease\n\n                        \n0% [Working]\n0% [Waiting for headers]\n                        \nHit:16 https://repo.vivaldi.com/snapshot/deb stable Release\n\n                        \n0% [Working]\n            \nHit:17 https://repo.vivaldi.com/stable/deb stable Release\n\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n            \nIgn:3 https://repository.mullvad.net/deb/stable noble InRelease\n\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n            \nIgn:3 https://repository.mullvad.net/deb/stable noble InRelease\n\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n0% [Working]\n            \nErr:3 https://repository.mullvad.net/deb/stable noble InRelease\n  Could not handshake: An unexpected TLS packet was received. [IP: 45.149.104.1 443]\n\n20% [Working]\n             \n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 0%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 3%\n\nReading package lists... 6%\n\nReading package lists... 6%\n\nReading package lists... 7%\n\nReading package lists... 7%\n\nReading package lists... 10%\n\nReading package lists... 10%\n\nReading package lists... 12%\n\nReading package lists... 12%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 17%\n\nReading package lists... 22%\n\nReading package lists... 22%\n\nReading package lists... 25%\n\nReading package lists... 25%\n\nReading package lists... 63%\n\nReading package lists... 71%\n\nReading package lists... 71%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 96%\n\nReading package lists... 97%\n\nReading package lists... 97%\n\nReading package lists... 97%\n\nReading package lists... 97%\n\nReading package lists... 97%\n\nReading package lists... 97%\n\nReading package lists... Done\n\nW: Failed to fetch https://repository.mullvad.net/deb/stable/dists/noble/InRelease  Could not handshake: An unexpected TLS packet was received. [IP: 45.149.104.1 443]\nW: Some index files failed to download. They have been ignored, or old ones used instead.\n\nReading package lists... 0%\n\nReading package lists... 100%\n\nReading package lists... Done\n\n\nBuilding dependency tree... 0%\n\nBuilding dependency tree... 0%\n\nBuilding dependency tree... 50%\n\nBuilding dependency tree... 50%\n\nBuilding dependency tree... Done\n\n\nReading state information... 0% \n\nReading state information... 0%\n\nReading state information... Done\n\nThe following additional packages will be installed:\n  default-jdk default-jdk-headless default-libmysqlclient-dev hdf5-helpers libaec-dev libarmadillo-dev libarpack2-dev libblas-dev libblosc-dev libcfitsio-dev libcfitsio-doc libclang1-15t64 libdouble-conversion-dev libeigen3-dev libflann-dev libflann1.9\n  libfreexl-dev libfyba-dev libgdal-dev libgeotiff-dev libgif-dev libgl2ps-dev libglew-dev libglut3.12 libhdf4-alt-dev libhdf5-cpp-103-1t64 libhdf5-dev libhdf5-fortran-102t64 libhdf5-hl-cpp-100t64 libhdf5-hl-fortran-100t64 libhdf5-mpi-dev\n  libhdf5-openmpi-103-1t64 libhdf5-openmpi-cpp-103-1t64 libhdf5-openmpi-dev libhdf5-openmpi-fortran-102t64 libhdf5-openmpi-hl-100t64 libhdf5-openmpi-hl-cpp-100t64 libhdf5-openmpi-hl-fortran-100t64 libjson-c-dev libjsoncpp-dev libkml-dev libkmlconvenience1t64\n  libkmlregionator1t64 libkmlxsd1t64 liblapack-dev libllvm15t64 liblz4-dev libminizip-dev libmysqlclient-dev libnetcdf-dev libodbccr2 libogdi-dev libogg-dev libopenjp2-7-dev libopenni-dev libopenni-sensor-pointclouds0 libopenni0t64 libopenni2-dev\n  libpcl-apps1.14 libpcl-common1.14 libpcl-features1.14 libpcl-filters1.14 libpcl-io1.14 libpcl-kdtree1.14 libpcl-keypoints1.14 libpcl-ml1.14 libpcl-octree1.14 libpcl-outofcore1.14 libpcl-people1.14 libpcl-recognition1.14 libpcl-registration1.14\n  libpcl-sample-consensus1.14 libpcl-search1.14 libpcl-segmentation1.14 libpcl-stereo1.14 libpcl-surface1.14 libpcl-tracking1.14 libpcl-visualization1.14 libpoppler-dev libpoppler-private-dev libproj-dev libqhull-dev libqhull8.0 libqhullcpp8.0\n  libqt5designercomponents5 libqt5webkit5-dev librttopo-dev libspatialite-dev libsuperlu-dev libtheora-dev libtinyxml2.6.2v5 libtirpc-dev liburiparser-dev libusb-1.0-0-dev libusb-1.0-doc libutfcpp-dev libvtk9-dev libvtk9-java libvtk9-qt-dev libvtk9.1t64-qt\n  libxerces-c-dev openjdk-21-jdk openjdk-21-jdk-headless openni-utils python3-mpi4py python3-vtk9 qdoc-qt5 qhelpgenerator-qt5 qt5-assistant qtattributionsscanner-qt5 qttools5-dev qttools5-dev-tools qttools5-private-dev unixodbc-dev vtk9\nSuggested packages:\n  libitpp-dev liblapack-doc libeigen3-doc libmpfrc++-dev libgeotiff-epsg libhdf5-doc netcdf-bin netcdf-doc openni-doc openni2-doc libpcl-doc libsuperlu-doc vtk9-doc vtk9-examples java-virtual-machine libxerces-c-doc openjdk-21-demo openjdk-21-source visualvm\n  mayavi2 qt5-doc\nThe following NEW packages will be installed:\n  default-jdk default-jdk-headless default-libmysqlclient-dev hdf5-helpers libaec-dev libarmadillo-dev libarpack2-dev libblas-dev libblosc-dev libcfitsio-dev libcfitsio-doc libclang1-15t64 libdouble-conversion-dev libeigen3-dev libflann-dev libflann1.9\n  libfreexl-dev libfyba-dev libgdal-dev libgeotiff-dev libgif-dev libgl2ps-dev libglew-dev libglut3.12 libhdf4-alt-dev libhdf5-cpp-103-1t64 libhdf5-dev libhdf5-fortran-102t64 libhdf5-hl-cpp-100t64 libhdf5-hl-fortran-100t64 libhdf5-mpi-dev\n  libhdf5-openmpi-103-1t64 libhdf5-openmpi-cpp-103-1t64 libhdf5-openmpi-dev libhdf5-openmpi-fortran-102t64 libhdf5-openmpi-hl-100t64 libhdf5-openmpi-hl-cpp-100t64 libhdf5-openmpi-hl-fortran-100t64 libjson-c-dev libjsoncpp-dev libkml-dev libkmlconvenience1t64\n  libkmlregionator1t64 libkmlxsd1t64 liblapack-dev libllvm15t64 liblz4-dev libminizip-dev libmysqlclient-dev libnetcdf-dev libodbccr2 libogdi-dev libogg-dev libopenjp2-7-dev libopenni-dev libopenni-sensor-pointclouds0 libopenni0t64 libopenni2-dev\n  libpcl-apps1.14 libpcl-common1.14 libpcl-dev libpcl-features1.14 libpcl-filters1.14 libpcl-io1.14 libpcl-kdtree1.14 libpcl-keypoints1.14 libpcl-ml1.14 libpcl-octree1.14 libpcl-outofcore1.14 libpcl-people1.14 libpcl-recognition1.14 libpcl-registration1.14\n  libpcl-sample-consensus1.14 libpcl-search1.14 libpcl-segmentation1.14 libpcl-stereo1.14 libpcl-surface1.14 libpcl-tracking1.14 libpcl-visualization1.14 libpoppler-dev libpoppler-private-dev libproj-dev libqhull-dev libqhull8.0 libqhullcpp8.0\n  libqt5designercomponents5 libqt5webkit5-dev librttopo-dev libspatialite-dev libsuperlu-dev libtheora-dev libtinyxml2.6.2v5 libtirpc-dev liburiparser-dev libusb-1.0-0-dev libusb-1.0-doc libutfcpp-dev libvtk9-dev libvtk9-java libvtk9-qt-dev libvtk9.1t64-qt\n  libxerces-c-dev openjdk-21-jdk openjdk-21-jdk-headless openni-utils python3-mpi4py python3-vtk9 qdoc-qt5 qhelpgenerator-qt5 qt5-assistant qtattributionsscanner-qt5 qttools5-dev qttools5-dev-tools qttools5-private-dev unixodbc-dev vtk9\n0 upgraded, 116 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 184 MB of archives.\nAfter this operation, 642 MB of additional disk space will be used.\n\n0% [Working]\n            \nGet:1 http://archive.ubuntu.com/ubuntu noble/universe amd64 libqt5webkit5-dev amd64 5.212.0~alpha4-36 [54.6 kB]\n\n0% [1 libqt5webkit5-dev 4,096 B/54.6 kB 8%] [Waiting for headers]\n                                                                 \nGet:2 http://security.ubuntu.com/ubuntu noble-security/main amd64 openjdk-21-jdk-headless amd64 21.0.7+6~us1-0ubuntu1~24.04 [82.6 MB]\n\n0% [1 libqt5webkit5-dev 14.2 kB/54.6 kB 26%] [2 openjdk-21-jdk-headless 5,496 B/82.6 MB 0%]\n                                                                                           \n0% [2 openjdk-21-jdk-headless 43.1 kB/82.6 MB 0%]\n                                                 \nGet:3 http://archive.ubuntu.com/ubuntu noble/main amd64 default-jdk-headless amd64 2:1.21-75+exp1 [960 B]\n\n0% [3 default-jdk-headless 960 B/960 B 100%] [2 openjdk-21-jdk-headless 96.7 kB/82.6 MB 0%]\n                                                                                           \n0% [Waiting for headers] [2 openjdk-21-jdk-headless 96.7 kB/82.6 MB 0%]\n                                                                       \nGet:4 http://archive.ubuntu.com/ubuntu noble/main amd64 default-jdk amd64 2:1.21-75+exp1 [926 B]\n\n0% [4 default-jdk 926 B/926 B 100%] [2 openjdk-21-jdk-headless 96.7 kB/82.6 MB 0%]\n                                                                                  \n1% [Waiting for headers] [2 openjdk-21-jdk-headless 96.7 kB/82.6 MB 0%]\n                                                                       \nGet:5 http://archive.ubuntu.com/ubuntu noble/main amd64 default-libmysqlclient-dev amd64 1.1.0build1 [3,132 B]\n\n1% [5 default-libmysqlclient-dev 2,608 B/3,132 B 83%] [2 openjdk-21-jdk-headless 96.7 kB/82.6 MB 0%]\n                                                                                                    \n1% [Waiting for headers] [2 openjdk-21-jdk-headless 99.6 kB/82.6 MB 0%]\n                                                                       \nGet:6 http://archive.ubuntu.com/ubuntu noble/universe amd64 hdf5-helpers amd64 1.10.10+repack-3.1ubuntu4 [15.8 kB]\n\n1% [6 hdf5-helpers 2,082 B/15.8 kB 13%] [2 openjdk-21-jdk-headless 99.6 kB/82.6 MB 0%]\n                                                                                      \n1% [Waiting for headers] [2 openjdk-21-jdk-headless 111 kB/82.6 MB 0%]\n                                                                      \nGet:7 http://archive.ubuntu.com/ubuntu noble/main amd64 libblas-dev amd64 3.12.0-3build1 [170 kB]\n\n1% [7 libblas-dev 476 B/170 kB 0%] [2 openjdk-21-jdk-headless 111 kB/82.6 MB 0%]\n                                                                                \n1% [Waiting for headers] [2 openjdk-21-jdk-headless 417 kB/82.6 MB 1%]\n                                                                      \nGet:8 http://archive.ubuntu.com/ubuntu noble/main amd64 liblapack-dev amd64 3.12.0-3build1 [5,196 kB]\n\n1% [8 liblapack-dev 2,472 B/5,196 kB 0%] [2 openjdk-21-jdk-headless 417 kB/82.6 MB 1%]\n6% [8 liblapack-dev 5,041 kB/5,196 kB 97%] [2 openjdk-21-jdk-headless 7,116 kB/82.6 MB 9%]\n                                                                                          \n8% [Waiting for headers] [2 openjdk-21-jdk-headless 9,270 kB/82.6 MB 11%]\n                                                                         \nGet:9 http://archive.ubuntu.com/ubuntu noble/universe amd64 libarpack2-dev amd64 3.9.1-1.1build2 [122 kB]\n\n8% [9 libarpack2-dev 41.9 kB/122 kB 34%] [2 openjdk-21-jdk-headless 9,270 kB/82.6 MB 11%]\n                                                                                         \n8% [Waiting for headers] [2 openjdk-21-jdk-headless 9,362 kB/82.6 MB 11%]\n                                                                         \nGet:10 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-fortran-102t64 amd64 1.10.10+repack-3.1ubuntu4 [85.2 kB]\n\n8% [10 libhdf5-fortran-102t64 50.6 kB/85.2 kB 59%] [2 openjdk-21-jdk-headless 9,362 kB/82.6 MB 11%]\n                                                                                                   \n8% [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                   \nGet:11 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-hl-fortran-100t64 amd64 1.10.10+repack-3.1ubuntu4 [31.5 kB]\n\n8% [11 libhdf5-hl-fortran-100t64 30.7 kB/31.5 kB 98%] [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                                                                      \n8% [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                   \nGet:12 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-cpp-103-1t64 amd64 1.10.10+repack-3.1ubuntu4 [128 kB]\n\n8% [12 libhdf5-cpp-103-1t64 18.4 kB/128 kB 14%] [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                                                                \n9% [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                   \nGet:13 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-hl-cpp-100t64 amd64 1.10.10+repack-3.1ubuntu4 [11.2 kB]\n\n9% [13 libhdf5-hl-cpp-100t64 11.2 kB/11.2 kB 100%] [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                                                                   \n9% [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                   \nGet:14 http://archive.ubuntu.com/ubuntu noble/universe amd64 libaec-dev amd64 1.1.2-1build1 [19.8 kB]\n\n9% [14 libaec-dev 9,985 B/19.8 kB 50%] [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                                                       \n9% [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                   \nGet:15 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-dev amd64 1.10.10+repack-3.1ubuntu4 [2,777 kB]\n\n9% [15 libhdf5-dev 55.4 kB/2,777 kB 2%] [2 openjdk-21-jdk-headless 9,431 kB/82.6 MB 11%]\n                                                                                        \n12% [Waiting for headers] [2 openjdk-21-jdk-headless 13.5 MB/82.6 MB 16%]\n                                                                         \nGet:16 http://archive.ubuntu.com/ubuntu noble/universe amd64 libsuperlu-dev amd64 6.0.1+dfsg1-1build1 [20.7 kB]\n\n12% [16 libsuperlu-dev 14.6 kB/20.7 kB 71%] [2 openjdk-21-jdk-headless 13.5 MB/82.6 MB 16%]\n                                                                                           \n12% [2 openjdk-21-jdk-headless 13.5 MB/82.6 MB 16%]\n                                                   \nGet:17 http://archive.ubuntu.com/ubuntu noble/universe amd64 libarmadillo-dev amd64 1:12.6.7+dfsg-1build2 [409 kB]\n\n12% [17 libarmadillo-dev 9,579 B/409 kB 2%] [2 openjdk-21-jdk-headless 13.5 MB/82.6 MB 16%]\n                                                                                           \n13% [Waiting for headers] [2 openjdk-21-jdk-headless 13.8 MB/82.6 MB 17%]\n                                                                         \nGet:18 http://archive.ubuntu.com/ubuntu noble/universe amd64 libblosc-dev amd64 1.21.5+ds-1build1 [43.7 kB]\n\n13% [18 libblosc-dev 12.7 kB/43.7 kB 29%] [2 openjdk-21-jdk-headless 13.8 MB/82.6 MB 17%]\n                                                                                         \n13% [Waiting for headers] [2 openjdk-21-jdk-headless 13.9 MB/82.6 MB 17%]\n                                                                         \nGet:19 http://archive.ubuntu.com/ubuntu noble/universe amd64 libcfitsio-dev amd64 4.3.1-1.1build2 [598 kB]\n\n13% [19 libcfitsio-dev 15.4 kB/598 kB 3%] [2 openjdk-21-jdk-headless 13.9 MB/82.6 MB 17%]\n                                                                                         \n14% [Waiting for headers] [2 openjdk-21-jdk-headless 14.5 MB/82.6 MB 18%]\n                                                                         \nGet:20 http://archive.ubuntu.com/ubuntu noble/universe amd64 libcfitsio-doc all 4.3.1-1.1build2 [2,076 kB]\n\n14% [20 libcfitsio-doc 12.0 kB/2,076 kB 1%] [2 openjdk-21-jdk-headless 14.5 MB/82.6 MB 18%]\n                                                                                           \n16% [Waiting for headers] [2 openjdk-21-jdk-headless 16.9 MB/82.6 MB 20%]\n                                                                         \nGet:21 http://archive.ubuntu.com/ubuntu noble/universe amd64 libllvm15t64 amd64 1:15.0.7-14build3 [25.5 MB]\n\n16% [21 libllvm15t64 5,360 B/25.5 MB 0%] [2 openjdk-21-jdk-headless 16.9 MB/82.6 MB 20%]\n24% [21 libllvm15t64 9,046 kB/25.5 MB 35%] [2 openjdk-21-jdk-headless 26.3 MB/82.6 MB 32%]\n                                                                                          \n30% [21 libllvm15t64 16.5 MB/25.5 MB 65%] [2 openjdk-21-jdk-headless 34.0 MB/82.6 MB 41%]\n37% [21 libllvm15t64 23.4 MB/25.5 MB 92%] [2 openjdk-21-jdk-headless 41.3 MB/82.6 MB 50%]\n                                                                                         \n39% [Waiting for headers] [2 openjdk-21-jdk-headless 43.8 MB/82.6 MB 53%]\n                                                                         \nGet:22 http://archive.ubuntu.com/ubuntu noble/universe amd64 libclang1-15t64 amd64 1:15.0.7-14build3 [6,958 kB]\n\n39% [22 libclang1-15t64 16.4 kB/6,958 kB 0%] [2 openjdk-21-jdk-headless 43.8 MB/82.6 MB 53%]\n                                                                                            \nGet:23 http://archive.ubuntu.com/ubuntu noble/universe amd64 libflann1.9 amd64 1.9.2+dfsg-2build1 [794 kB]\n\n                                                                                            \n45% [23 libflann1.9 70.5 kB/794 kB 9%] [2 openjdk-21-jdk-headless 50.3 MB/82.6 MB 61%]\n                                                                                      \n46% [2 openjdk-21-jdk-headless 51.0 MB/82.6 MB 62%]\n                                                   \nGet:24 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-103-1t64 amd64 1.10.10+repack-3.1ubuntu4 [1,325 kB]\n\n46% [24 libhdf5-openmpi-103-1t64 18.8 kB/1,325 kB 1%] [2 openjdk-21-jdk-headless 51.0 MB/82.6 MB 62%]\n                                                                                                     \n47% [2 openjdk-21-jdk-headless 52.3 MB/82.6 MB 63%]\n                                                   \nGet:25 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-fortran-102t64 amd64 1.10.10+repack-3.1ubuntu4 [85.5 kB]\n\n47% [25 libhdf5-openmpi-fortran-102t64 31.6 kB/85.5 kB 37%] [2 openjdk-21-jdk-headless 52.3 MB/82.6 MB 63%]\n                                                                                                           \n47% [Waiting for headers] [2 openjdk-21-jdk-headless 52.3 MB/82.6 MB 63%]\n                                                                         \nGet:26 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-hl-100t64 amd64 1.10.10+repack-3.1ubuntu4 [56.4 kB]\n\n47% [26 libhdf5-openmpi-hl-100t64 4,096 B/56.4 kB 7%] [2 openjdk-21-jdk-headless 52.3 MB/82.6 MB 63%]\n                                                                                                     \n47% [Waiting for headers] [2 openjdk-21-jdk-headless 52.4 MB/82.6 MB 63%]\n                                                                         \nGet:27 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-hl-fortran-100t64 amd64 1.10.10+repack-3.1ubuntu4 [31.7 kB]\n\n47% [27 libhdf5-openmpi-hl-fortran-100t64 2,420 B/31.7 kB 8%] [2 openjdk-21-jdk-headless 52.4 MB/82.6 MB 63%]\n                                                                                                             \n48% [Waiting for headers] [2 openjdk-21-jdk-headless 52.4 MB/82.6 MB 63%]\n                                                                         \nGet:28 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-cpp-103-1t64 amd64 1.10.10+repack-3.1ubuntu4 [127 kB]\n\n48% [28 libhdf5-openmpi-cpp-103-1t64 20.5 kB/127 kB 16%] [2 openjdk-21-jdk-headless 52.4 MB/82.6 MB 63%]\n                                                                                                        \n48% [Waiting for headers] [2 openjdk-21-jdk-headless 52.5 MB/82.6 MB 64%]\n                                                                         \nGet:29 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-hl-cpp-100t64 amd64 1.10.10+repack-3.1ubuntu4 [11.2 kB]\n\n48% [29 libhdf5-openmpi-hl-cpp-100t64 11.2 kB/11.2 kB 100%] [2 openjdk-21-jdk-headless 52.5 MB/82.6 MB 64%]\n                                                                                                           \n48% [2 openjdk-21-jdk-headless 52.5 MB/82.6 MB 64%]\n                                                   \nGet:30 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-openmpi-dev amd64 1.10.10+repack-3.1ubuntu4 [2,850 kB]\n\n48% [30 libhdf5-openmpi-dev 1,017 B/2,850 kB 0%] [2 openjdk-21-jdk-headless 52.5 MB/82.6 MB 64%]\n                                                                                                \n51% [Waiting for headers] [2 openjdk-21-jdk-headless 55.5 MB/82.6 MB 67%]\n                                                                         \nGet:31 http://archive.ubuntu.com/ubuntu noble/universe amd64 libhdf5-mpi-dev amd64 1.10.10+repack-3.1ubuntu4 [4,622 B]\n\n51% [31 libhdf5-mpi-dev 4,622 B/4,622 B 100%] [2 openjdk-21-jdk-headless 55.5 MB/82.6 MB 67%]\n                                                                                             \n51% [2 openjdk-21-jdk-headless 55.5 MB/82.6 MB 67%]\n                                                   \nGet:32 http://archive.ubuntu.com/ubuntu noble/main amd64 liblz4-dev amd64 1.9.4-1build1 [87.6 kB]\n\n51% [32 liblz4-dev 20.5 kB/87.6 kB 23%] [2 openjdk-21-jdk-headless 55.5 MB/82.6 MB 67%]\n                                                                                       \n51% [Waiting for headers] [2 openjdk-21-jdk-headless 55.6 MB/82.6 MB 67%]\n                                                                         \nGet:33 http://archive.ubuntu.com/ubuntu noble/universe amd64 libflann-dev amd64 1.9.2+dfsg-2build1 [816 kB]\n\n51% [33 libflann-dev 13.6 kB/816 kB 2%] [2 openjdk-21-jdk-headless 55.6 MB/82.6 MB 67%]\n                                                                                       \n52% [2 openjdk-21-jdk-headless 56.4 MB/82.6 MB 68%]\n                                                   \nGet:34 http://archive.ubuntu.com/ubuntu noble/universe amd64 libfyba-dev amd64 4.1.1-11build1 [178 kB]\n\n... additional lines truncated ...\n(Reading database ... 35%\n(Reading database ... 40%\n(Reading database ... 45%\n(Reading database ... 50%\n(Reading database ... 55%\n(Reading database ... 60%\n(Reading database ... 65%\n(Reading database ... 70%\n(Reading database ... 75%\n(Reading database ... 80%\n(Reading database ... 85%\n(Reading database ... 90%\n(Reading database ... 95%\n(Reading database ... 100%\n(Reading database ... 484325 files and directories currently installed.)\nPreparing to unpack .../000-libqt5webkit5-dev_5.212.0~alpha4-36_amd64.deb ...\nUnpacking libqt5webkit5-dev:amd64 (5.212.0~alpha4-36) ...\nSelecting previously unselected package openjdk-21-jdk-headless:amd64.\nPreparing to unpack .../001-openjdk-21-jdk-headless_21.0.7+6~us1-0ubuntu1~24.04_amd64.deb ...\nUnpacking openjdk-21-jdk-headless:amd64 (21.0.7+6~us1-0ubuntu1~24.04) ...\nSelecting previously unselected package default-jdk-headless.\nPreparing to unpack .../002-default-jdk-headless_2%3a1.21-75+exp1_amd64.deb ...\nUnpacking default-jdk-headless (2:1.21-75+exp1) ...\nSelecting previously unselected package openjdk-21-jdk:amd64.\nPreparing to unpack .../003-openjdk-21-jdk_21.0.7+6~us1-0ubuntu1~24.04_amd64.deb ...\nUnpacking openjdk-21-jdk:amd64 (21.0.7+6~us1-0ubuntu1~24.04) ...\nSelecting previously unselected package default-jdk.\nPreparing to unpack .../004-default-jdk_2%3a1.21-75+exp1_amd64.deb ...\nUnpacking default-jdk (2:1.21-75+exp1) ...\nSelecting previously unselected package libmysqlclient-dev.\nPreparing to unpack .../005-libmysqlclient-dev_8.0.42-0ubuntu0.24.04.1_amd64.deb ...\nUnpacking libmysqlclient-dev (8.0.42-0ubuntu0.24.04.1) ...\nSelecting previously unselected package default-libmysqlclient-dev:amd64.\nPreparing to unpack .../006-default-libmysqlclient-dev_1.1.0build1_amd64.deb ...\nUnpacking default-libmysqlclient-dev:amd64 (1.1.0build1) ...\nSelecting previously unselected package hdf5-helpers.\nPreparing to unpack .../007-hdf5-helpers_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking hdf5-helpers (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libblas-dev:amd64.\nPreparing to unpack .../008-libblas-dev_3.12.0-3build1_amd64.deb ...\nUnpacking libblas-dev:amd64 (3.12.0-3build1) ...\nSelecting previously unselected package liblapack-dev:amd64.\nPreparing to unpack .../009-liblapack-dev_3.12.0-3build1_amd64.deb ...\nUnpacking liblapack-dev:amd64 (3.12.0-3build1) ...\nSelecting previously unselected package libarpack2-dev:amd64.\nPreparing to unpack .../010-libarpack2-dev_3.9.1-1.1build2_amd64.deb ...\nUnpacking libarpack2-dev:amd64 (3.9.1-1.1build2) ...\nSelecting previously unselected package libhdf5-fortran-102t64:amd64.\nPreparing to unpack .../011-libhdf5-fortran-102t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-fortran-102t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-hl-fortran-100t64:amd64.\nPreparing to unpack .../012-libhdf5-hl-fortran-100t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-hl-fortran-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-cpp-103-1t64:amd64.\nPreparing to unpack .../013-libhdf5-cpp-103-1t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-cpp-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-hl-cpp-100t64:amd64.\nPreparing to unpack .../014-libhdf5-hl-cpp-100t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-hl-cpp-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libaec-dev:amd64.\nPreparing to unpack .../015-libaec-dev_1.1.2-1build1_amd64.deb ...\nUnpacking libaec-dev:amd64 (1.1.2-1build1) ...\nSelecting previously unselected package libhdf5-dev.\nPreparing to unpack .../016-libhdf5-dev_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-dev (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libsuperlu-dev:amd64.\nPreparing to unpack .../017-libsuperlu-dev_6.0.1+dfsg1-1build1_amd64.deb ...\nUnpacking libsuperlu-dev:amd64 (6.0.1+dfsg1-1build1) ...\nSelecting previously unselected package libarmadillo-dev.\nPreparing to unpack .../018-libarmadillo-dev_1%3a12.6.7+dfsg-1build2_amd64.deb ...\nUnpacking libarmadillo-dev (1:12.6.7+dfsg-1build2) ...\nSelecting previously unselected package libblosc-dev:amd64.\nPreparing to unpack .../019-libblosc-dev_1.21.5+ds-1build1_amd64.deb ...\nUnpacking libblosc-dev:amd64 (1.21.5+ds-1build1) ...\nSelecting previously unselected package libcfitsio-dev:amd64.\nPreparing to unpack .../020-libcfitsio-dev_4.3.1-1.1build2_amd64.deb ...\nUnpacking libcfitsio-dev:amd64 (4.3.1-1.1build2) ...\nSelecting previously unselected package libcfitsio-doc.\nPreparing to unpack .../021-libcfitsio-doc_4.3.1-1.1build2_all.deb ...\nUnpacking libcfitsio-doc (4.3.1-1.1build2) ...\nSelecting previously unselected package libllvm15t64:amd64.\nPreparing to unpack .../022-libllvm15t64_1%3a15.0.7-14build3_amd64.deb ...\nUnpacking libllvm15t64:amd64 (1:15.0.7-14build3) ...\nSelecting previously unselected package libclang1-15t64.\nPreparing to unpack .../023-libclang1-15t64_1%3a15.0.7-14build3_amd64.deb ...\nUnpacking libclang1-15t64 (1:15.0.7-14build3) ...\nSelecting previously unselected package libflann1.9:amd64.\nPreparing to unpack .../024-libflann1.9_1.9.2+dfsg-2build1_amd64.deb ...\nUnpacking libflann1.9:amd64 (1.9.2+dfsg-2build1) ...\nSelecting previously unselected package libhdf5-openmpi-103-1t64:amd64.\nPreparing to unpack .../025-libhdf5-openmpi-103-1t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-fortran-102t64:amd64.\nPreparing to unpack .../026-libhdf5-openmpi-fortran-102t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-fortran-102t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-hl-100t64:amd64.\nPreparing to unpack .../027-libhdf5-openmpi-hl-100t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-hl-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-hl-fortran-100t64:amd64.\nPreparing to unpack .../028-libhdf5-openmpi-hl-fortran-100t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-hl-fortran-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-cpp-103-1t64:amd64.\nPreparing to unpack .../029-libhdf5-openmpi-cpp-103-1t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-cpp-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-hl-cpp-100t64:amd64.\nPreparing to unpack .../030-libhdf5-openmpi-hl-cpp-100t64_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-hl-cpp-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-openmpi-dev.\nPreparing to unpack .../031-libhdf5-openmpi-dev_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-openmpi-dev (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package libhdf5-mpi-dev.\nPreparing to unpack .../032-libhdf5-mpi-dev_1.10.10+repack-3.1ubuntu4_amd64.deb ...\nUnpacking libhdf5-mpi-dev (1.10.10+repack-3.1ubuntu4) ...\nSelecting previously unselected package liblz4-dev:amd64.\nPreparing to unpack .../033-liblz4-dev_1.9.4-1build1_amd64.deb ...\nUnpacking liblz4-dev:amd64 (1.9.4-1build1) ...\nSelecting previously unselected package libflann-dev:amd64.\nPreparing to unpack .../034-libflann-dev_1.9.2+dfsg-2build1_amd64.deb ...\nUnpacking libflann-dev:amd64 (1.9.2+dfsg-2build1) ...\nSelecting previously unselected package libfyba-dev:amd64.\nPreparing to unpack .../035-libfyba-dev_4.1.1-11build1_amd64.deb ...\nUnpacking libfyba-dev:amd64 (4.1.1-11build1) ...\nSelecting previously unselected package libgif-dev:amd64.\nPreparing to unpack .../036-libgif-dev_5.2.2-1ubuntu1_amd64.deb ...\nUnpacking libgif-dev:amd64 (5.2.2-1ubuntu1) ...\nSelecting previously unselected package libgl2ps-dev.\nPreparing to unpack .../037-libgl2ps-dev_1.4.2+dfsg1-2build1_amd64.deb ...\nUnpacking libgl2ps-dev (1.4.2+dfsg1-2build1) ...\nSelecting previously unselected package libglew-dev:amd64.\nPreparing to unpack .../038-libglew-dev_2.2.0-4build1_amd64.deb ...\nUnpacking libglew-dev:amd64 (2.2.0-4build1) ...\nSelecting previously unselected package libglut3.12:amd64.\nPreparing to unpack .../039-libglut3.12_3.4.0-1build1_amd64.deb ...\nUnpacking libglut3.12:amd64 (3.4.0-1build1) ...\nSelecting previously unselected package libkmlconvenience1t64:amd64.\nPreparing to unpack .../040-libkmlconvenience1t64_1.3.0-12build1_amd64.deb ...\nUnpacking libkmlconvenience1t64:amd64 (1.3.0-12build1) ...\nSelecting previously unselected package libkmlregionator1t64:amd64.\nPreparing to unpack .../041-libkmlregionator1t64_1.3.0-12build1_amd64.deb ...\nUnpacking libkmlregionator1t64:amd64 (1.3.0-12build1) ...\nSelecting previously unselected package libkmlxsd1t64:amd64.\nPreparing to unpack .../042-libkmlxsd1t64_1.3.0-12build1_amd64.deb ...\nUnpacking libkmlxsd1t64:amd64 (1.3.0-12build1) ...\nSelecting previously unselected package libminizip-dev:amd64.\nPreparing to unpack .../043-libminizip-dev_1%3a1.3.dfsg-3.1ubuntu2_amd64.deb ...\nUnpacking libminizip-dev:amd64 (1:1.3.dfsg-3.1ubuntu2) ...\nSelecting previously unselected package libnetcdf-dev.\nPreparing to unpack .../044-libnetcdf-dev_1%3a4.9.2-5ubuntu4_amd64.deb ...\nUnpacking libnetcdf-dev (1:4.9.2-5ubuntu4) ...\nSelecting previously unselected package libodbccr2:amd64.\nPreparing to unpack .../045-libodbccr2_2.3.12-1ubuntu0.24.04.1_amd64.deb ...\nUnpacking libodbccr2:amd64 (2.3.12-1ubuntu0.24.04.1) ...\nSelecting previously unselected package libtirpc-dev:amd64.\nPreparing to unpack .../046-libtirpc-dev_1.3.4+ds-1.1build1_amd64.deb ...\nUnpacking libtirpc-dev:amd64 (1.3.4+ds-1.1build1) ...\nSelecting previously unselected package libogdi-dev.\nPreparing to unpack .../047-libogdi-dev_4.1.1+ds-3build1_amd64.deb ...\nUnpacking libogdi-dev (4.1.1+ds-3build1) ...\nSelecting previously unselected package libogg-dev:amd64.\nPreparing to unpack .../048-libogg-dev_1.3.5-3build1_amd64.deb ...\nUnpacking libogg-dev:amd64 (1.3.5-3build1) ...\nSelecting previously unselected package libtinyxml2.6.2v5:amd64.\nPreparing to unpack .../049-libtinyxml2.6.2v5_2.6.2-6.1_amd64.deb ...\nUnpacking libtinyxml2.6.2v5:amd64 (2.6.2-6.1) ...\nSelecting previously unselected package libopenni0t64.\nPreparing to unpack .../050-libopenni0t64_1.5.4.0+dfsg-7.1build1_amd64.deb ...\nUnpacking libopenni0t64 (1.5.4.0+dfsg-7.1build1) ...\nSelecting previously unselected package libopenni-dev:amd64.\nPreparing to unpack .../051-libopenni-dev_1.5.4.0+dfsg-7.1build1_amd64.deb ...\nUnpacking libopenni-dev:amd64 (1.5.4.0+dfsg-7.1build1) ...\nSelecting previously unselected package openni-utils.\nPreparing to unpack .../052-openni-utils_1.5.4.0+dfsg-7.1build1_amd64.deb ...\nUnpacking openni-utils (1.5.4.0+dfsg-7.1build1) ...\nSelecting previously unselected package libopenni-sensor-pointclouds0.\nPreparing to unpack .../053-libopenni-sensor-pointclouds0_5.1.0.41.11-1build2_amd64.deb ...\nUnpacking libopenni-sensor-pointclouds0 (5.1.0.41.11-1build2) ...\nSelecting previously unselected package libopenni2-dev:amd64.\nPreparing to unpack .../054-libopenni2-dev_2.2.0.33+dfsg-18_amd64.deb ...\nUnpacking libopenni2-dev:amd64 (2.2.0.33+dfsg-18) ...\nSelecting previously unselected package libpcl-common1.14:amd64.\nPreparing to unpack .../055-libpcl-common1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-common1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-kdtree1.14:amd64.\nPreparing to unpack .../056-libpcl-kdtree1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-kdtree1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-octree1.14:amd64.\nPreparing to unpack .../057-libpcl-octree1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-octree1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-sample-consensus1.14:amd64.\nPreparing to unpack .../058-libpcl-sample-consensus1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-sample-consensus1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-search1.14:amd64.\nPreparing to unpack .../059-libpcl-search1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-search1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-filters1.14:amd64.\nPreparing to unpack .../060-libpcl-filters1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-filters1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-features1.14:amd64.\nPreparing to unpack .../061-libpcl-features1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-features1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-ml1.14:amd64.\nPreparing to unpack .../062-libpcl-ml1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-ml1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-segmentation1.14:amd64.\nPreparing to unpack .../063-libpcl-segmentation1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-segmentation1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-surface1.14:amd64.\nPreparing to unpack .../064-libpcl-surface1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-surface1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-apps1.14:amd64.\nPreparing to unpack .../065-libpcl-apps1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-apps1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-io1.14:amd64.\nPreparing to unpack .../066-libpcl-io1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-io1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-keypoints1.14:amd64.\nPreparing to unpack .../067-libpcl-keypoints1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-keypoints1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-outofcore1.14:amd64.\nPreparing to unpack .../068-libpcl-outofcore1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-outofcore1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-people1.14:amd64.\nPreparing to unpack .../069-libpcl-people1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-people1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-registration1.14:amd64.\nPreparing to unpack .../070-libpcl-registration1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-registration1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-recognition1.14:amd64.\nPreparing to unpack .../071-libpcl-recognition1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-recognition1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-stereo1.14:amd64.\nPreparing to unpack .../072-libpcl-stereo1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-stereo1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-tracking1.14:amd64.\nPreparing to unpack .../073-libpcl-tracking1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-tracking1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpcl-visualization1.14:amd64.\nPreparing to unpack .../074-libpcl-visualization1.14_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-visualization1.14:amd64 (1.14.0+dfsg-1) ...\nSelecting previously unselected package libpoppler-dev:amd64.\nPreparing to unpack .../075-libpoppler-dev_24.02.0-1ubuntu9.4_amd64.deb ...\nUnpacking libpoppler-dev:amd64 (24.02.0-1ubuntu9.4) ...\nSelecting previously unselected package libpoppler-private-dev:amd64.\nPreparing to unpack .../076-libpoppler-private-dev_24.02.0-1ubuntu9.4_amd64.deb ...\nUnpacking libpoppler-private-dev:amd64 (24.02.0-1ubuntu9.4) ...\nSelecting previously unselected package libqhull8.0:amd64.\nPreparing to unpack .../077-libqhull8.0_2020.2-6build1_amd64.deb ...\nUnpacking libqhull8.0:amd64 (2020.2-6build1) ...\nSelecting previously unselected package libqhullcpp8.0:amd64.\nPreparing to unpack .../078-libqhullcpp8.0_2020.2-6build1_amd64.deb ...\nUnpacking libqhullcpp8.0:amd64 (2020.2-6build1) ...\nSelecting previously unselected package libqhull-dev:amd64.\nPreparing to unpack .../079-libqhull-dev_2020.2-6build1_amd64.deb ...\nUnpacking libqhull-dev:amd64 (2020.2-6build1) ...\nSelecting previously unselected package libqt5designercomponents5:amd64.\nPreparing to unpack .../080-libqt5designercomponents5_5.15.13-1_amd64.deb ...\nUnpacking libqt5designercomponents5:amd64 (5.15.13-1) ...\nSelecting previously unselected package librttopo-dev:amd64.\nPreparing to unpack .../081-librttopo-dev_1.1.0-3build2_amd64.deb ...\nUnpacking librttopo-dev:amd64 (1.1.0-3build2) ...\nSelecting previously unselected package libtheora-dev:amd64.\nPreparing to unpack .../082-libtheora-dev_1.1.1+dfsg.1-16.1build3_amd64.deb ...\nUnpacking libtheora-dev:amd64 (1.1.1+dfsg.1-16.1build3) ...\nSelecting previously unselected package liburiparser-dev.\nPreparing to unpack .../083-liburiparser-dev_0.9.7+dfsg-2build1_amd64.deb ...\nUnpacking liburiparser-dev (0.9.7+dfsg-2build1) ...\nSelecting previously unselected package libusb-1.0-0-dev:amd64.\nPreparing to unpack .../084-libusb-1.0-0-dev_2%3a1.0.27-1_amd64.deb ...\nUnpacking libusb-1.0-0-dev:amd64 (2:1.0.27-1) ...\nSelecting previously unselected package libusb-1.0-doc.\nPreparing to unpack .../085-libusb-1.0-doc_2%3a1.0.27-1_all.deb ...\nUnpacking libusb-1.0-doc (2:1.0.27-1) ...\nSelecting previously unselected package libutfcpp-dev.\nPreparing to unpack .../086-libutfcpp-dev_3.2.5+really3.2.4-1_all.deb ...\nUnpacking libutfcpp-dev (3.2.5+really3.2.4-1) ...\nSelecting previously unselected package libdouble-conversion-dev:amd64.\nPreparing to unpack .../087-libdouble-conversion-dev_3.3.0-1build1_amd64.deb ...\nUnpacking libdouble-conversion-dev:amd64 (3.3.0-1build1) ...\nSelecting previously unselected package libeigen3-dev.\nPreparing to unpack .../088-libeigen3-dev_3.4.0-4_all.deb ...\nUnpacking libeigen3-dev (3.4.0-4) ...\nSelecting previously unselected package libfreexl-dev:amd64.\nPreparing to unpack .../089-libfreexl-dev_2.0.0-1build2_amd64.deb ...\nUnpacking libfreexl-dev:amd64 (2.0.0-1build2) ...\nSelecting previously unselected package libproj-dev:amd64.\nPreparing to unpack .../090-libproj-dev_9.4.0-1build2_amd64.deb ...\nUnpacking libproj-dev:amd64 (9.4.0-1build2) ...\nSelecting previously unselected package libgeotiff-dev:amd64.\nPreparing to unpack .../091-libgeotiff-dev_1.7.1-5build1_amd64.deb ...\nUnpacking libgeotiff-dev:amd64 (1.7.1-5build1) ...\nSelecting previously unselected package libhdf4-alt-dev.\nPreparing to unpack .../092-libhdf4-alt-dev_4.2.16-4build1_amd64.deb ...\nUnpacking libhdf4-alt-dev (4.2.16-4build1) ...\nSelecting previously unselected package libjson-c-dev:amd64.\nPreparing to unpack .../093-libjson-c-dev_0.17-1build1_amd64.deb ...\nUnpacking libjson-c-dev:amd64 (0.17-1build1) ...\nSelecting previously unselected package libkml-dev:amd64.\nPreparing to unpack .../094-libkml-dev_1.3.0-12build1_amd64.deb ...\nUnpacking libkml-dev:amd64 (1.3.0-12build1) ...\nSelecting previously unselected package libopenjp2-7-dev:amd64.\nPreparing to unpack .../095-libopenjp2-7-dev_2.5.0-2ubuntu0.3_amd64.deb ...\nUnpacking libopenjp2-7-dev:amd64 (2.5.0-2ubuntu0.3) ...\nSelecting previously unselected package libspatialite-dev:amd64.\nPreparing to unpack .../096-libspatialite-dev_5.1.0-3build1_amd64.deb ...\nUnpacking libspatialite-dev:amd64 (5.1.0-3build1) ...\nSelecting previously unselected package libxerces-c-dev:amd64.\nPreparing to unpack .../097-libxerces-c-dev_3.2.4+debian-1.2ubuntu2_amd64.deb ...\nUnpacking libxerces-c-dev:amd64 (3.2.4+debian-1.2ubuntu2) ...\nSelecting previously unselected package unixodbc-dev:amd64.\nPreparing to unpack .../098-unixodbc-dev_2.3.12-1ubuntu0.24.04.1_amd64.deb ...\nUnpacking unixodbc-dev:amd64 (2.3.12-1ubuntu0.24.04.1) ...\nSelecting previously unselected package libgdal-dev.\nPreparing to unpack .../099-libgdal-dev_3.8.4+dfsg-3ubuntu3_amd64.deb ...\nUnpacking libgdal-dev (3.8.4+dfsg-3ubuntu3) ...\nSelecting previously unselected package libjsoncpp-dev:amd64.\nPreparing to unpack .../100-libjsoncpp-dev_1.9.5-6build1_amd64.deb ...\nUnpacking libjsoncpp-dev:amd64 (1.9.5-6build1) ...\nSelecting previously unselected package libvtk9.1t64-qt:amd64.\nPreparing to unpack .../101-libvtk9.1t64-qt_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking libvtk9.1t64-qt:amd64 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package libvtk9-java.\nPreparing to unpack .../102-libvtk9-java_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking libvtk9-java (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package python3-mpi4py.\nPreparing to unpack .../103-python3-mpi4py_3.1.5-5ubuntu2_amd64.deb ...\nUnpacking python3-mpi4py (3.1.5-5ubuntu2) ...\nSelecting previously unselected package python3-vtk9.\nPreparing to unpack .../104-python3-vtk9_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking python3-vtk9 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package vtk9.\nPreparing to unpack .../105-vtk9_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking vtk9 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package libvtk9-dev.\nPreparing to unpack .../106-libvtk9-dev_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking libvtk9-dev (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package qdoc-qt5.\nPreparing to unpack .../107-qdoc-qt5_5.15.13-1_amd64.deb ...\nUnpacking qdoc-qt5 (5.15.13-1) ...\nSelecting previously unselected package qhelpgenerator-qt5.\nPreparing to unpack .../108-qhelpgenerator-qt5_5.15.13-1_amd64.deb ...\nUnpacking qhelpgenerator-qt5 (5.15.13-1) ...\nSelecting previously unselected package qt5-assistant.\nPreparing to unpack .../109-qt5-assistant_5.15.13-1_amd64.deb ...\nUnpacking qt5-assistant (5.15.13-1) ...\nSelecting previously unselected package qtattributionsscanner-qt5.\nPreparing to unpack .../110-qtattributionsscanner-qt5_5.15.13-1_amd64.deb ...\nUnpacking qtattributionsscanner-qt5 (5.15.13-1) ...\nSelecting previously unselected package qttools5-dev-tools.\nPreparing to unpack .../111-qttools5-dev-tools_5.15.13-1_amd64.deb ...\nUnpacking qttools5-dev-tools (5.15.13-1) ...\nSelecting previously unselected package qttools5-dev:amd64.\nPreparing to unpack .../112-qttools5-dev_5.15.13-1_amd64.deb ...\nUnpacking qttools5-dev:amd64 (5.15.13-1) ...\nSelecting previously unselected package qttools5-private-dev:amd64.\nPreparing to unpack .../113-qttools5-private-dev_5.15.13-1_amd64.deb ...\nUnpacking qttools5-private-dev:amd64 (5.15.13-1) ...\nSelecting previously unselected package libvtk9-qt-dev:amd64.\nPreparing to unpack .../114-libvtk9-qt-dev_9.1.0+really9.1.0+dfsg2-7.1build3_amd64.deb ...\nUnpacking libvtk9-qt-dev:amd64 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSelecting previously unselected package libpcl-dev.\nPreparing to unpack .../115-libpcl-dev_1.14.0+dfsg-1_amd64.deb ...\nUnpacking libpcl-dev (1.14.0+dfsg-1) ...\nSetting up libpoppler-dev:amd64 (24.02.0-1ubuntu9.4) ...\nSetting up librttopo-dev:amd64 (1.1.0-3build2) ...\nSetting up libjsoncpp-dev:amd64 (1.9.5-6build1) ...\nSetting up libkmlxsd1t64:amd64 (1.3.0-12build1) ...\nSetting up openjdk-21-jdk-headless:amd64 (21.0.7+6~us1-0ubuntu1~24.04) ...\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jar to provide /usr/bin/jar (jar) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jarsigner to provide /usr/bin/jarsigner (jarsigner) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/javadoc to provide /usr/bin/javadoc (javadoc) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/javap to provide /usr/bin/javap (javap) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jcmd to provide /usr/bin/jcmd (jcmd) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jdb to provide /usr/bin/jdb (jdb) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jdeprscan to provide /usr/bin/jdeprscan (jdeprscan) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jdeps to provide /usr/bin/jdeps (jdeps) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jfr to provide /usr/bin/jfr (jfr) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jimage to provide /usr/bin/jimage (jimage) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jinfo to provide /usr/bin/jinfo (jinfo) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jlink to provide /usr/bin/jlink (jlink) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jmap to provide /usr/bin/jmap (jmap) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jmod to provide /usr/bin/jmod (jmod) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jps to provide /usr/bin/jps (jps) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jrunscript to provide /usr/bin/jrunscript (jrunscript) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jshell to provide /usr/bin/jshell (jshell) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jstack to provide /usr/bin/jstack (jstack) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jstat to provide /usr/bin/jstat (jstat) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jstatd to provide /usr/bin/jstatd (jstatd) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jwebserver to provide /usr/bin/jwebserver (jwebserver) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/serialver to provide /usr/bin/serialver (serialver) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jhsdb to provide /usr/bin/jhsdb (jhsdb) in auto mode\nSetting up libcfitsio-dev:amd64 (4.3.1-1.1build2) ...\nSetting up hdf5-helpers (1.10.10+repack-3.1ubuntu4) ...\nSetting up libllvm15t64:amd64 (1:15.0.7-14build3) ...\nSetting up libqhull8.0:amd64 (2020.2-6build1) ...\nSetting up libblosc-dev:amd64 (1.21.5+ds-1build1) ...\nSetting up libjson-c-dev:amd64 (0.17-1build1) ...\nSetting up libfyba-dev:amd64 (4.1.1-11build1) ...\nSetting up libpoppler-private-dev:amd64 (24.02.0-1ubuntu9.4) ...\nSetting up libhdf5-cpp-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libusb-1.0-doc (2:1.0.27-1) ...\nSetting up libaec-dev:amd64 (1.1.2-1build1) ...\nSetting up libusb-1.0-0-dev:amd64 (2:1.0.27-1) ...\nSetting up qhelpgenerator-qt5 (5.15.13-1) ...\nSetting up libhdf5-fortran-102t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libqt5designercomponents5:amd64 (5.15.13-1) ...\nSetting up libogg-dev:amd64 (1.3.5-3build1) ...\nSetting up libqt5webkit5-dev:amd64 (5.212.0~alpha4-36) ...\nSetting up python3-mpi4py (3.1.5-5ubuntu2) ...\nSetting up libgl2ps-dev (1.4.2+dfsg1-2build1) ...\nSetting up libhdf5-openmpi-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up liburiparser-dev (0.9.7+dfsg-2build1) ...\nSetting up openjdk-21-jdk:amd64 (21.0.7+6~us1-0ubuntu1~24.04) ...\nupdate-alternatives: using /usr/lib/jvm/java-21-openjdk-amd64/bin/jconsole to provide /usr/bin/jconsole (jconsole) in auto mode\nSetting up libminizip-dev:amd64 (1:1.3.dfsg-3.1ubuntu2) ...\nSetting up libglew-dev:amd64 (2.2.0-4build1) ...\nSetting up libtirpc-dev:amd64 (1.3.4+ds-1.1build1) ...\nSetting up libutfcpp-dev (3.2.5+really3.2.4-1) ...\nSetting up libtheora-dev:amd64 (1.1.1+dfsg.1-16.1build3) ...\nSetting up default-jdk-headless (2:1.21-75+exp1) ...\nSetting up libpcl-common1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-people1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libopenjp2-7-dev:amd64 (2.5.0-2ubuntu0.3) ...\nSetting up libxerces-c-dev:amd64 (3.2.4+debian-1.2ubuntu2) ...\nSetting up libglut3.12:amd64 (3.4.0-1build1) ...\nSetting up qtattributionsscanner-qt5 (5.15.13-1) ...\nSetting up libproj-dev:amd64 (9.4.0-1build2) ...\nSetting up libeigen3-dev (3.4.0-4) ...\nSetting up libflann1.9:amd64 (1.9.2+dfsg-2build1) ...\nSetting up liblz4-dev:amd64 (1.9.4-1build1) ...\nSetting up libqhullcpp8.0:amd64 (2020.2-6build1) ...\nSetting up libvtk9.1t64-qt:amd64 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSetting up libclang1-15t64 (1:15.0.7-14build3) ...\nSetting up libtinyxml2.6.2v5:amd64 (2.6.2-6.1) ...\nSetting up libvtk9-java (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSetting up libpcl-ml1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libqhull-dev:amd64 (2020.2-6build1) ...\nSetting up vtk9 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSetting up libdouble-conversion-dev:amd64 (3.3.0-1build1) ...\nSetting up qt5-assistant (5.15.13-1) ...\nSetting up libgif-dev:amd64 (5.2.2-1ubuntu1) ...\nSetting up libhdf5-openmpi-fortran-102t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libhdf5-openmpi-cpp-103-1t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libopenni2-dev:amd64 (2.2.0.33+dfsg-18) ...\nSetting up libkmlconvenience1t64:amd64 (1.3.0-12build1) ...\nSetting up libpcl-kdtree1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libhdf5-hl-cpp-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libogdi-dev (4.1.1+ds-3build1) ...\nSetting up libcfitsio-doc (4.3.1-1.1build2) ...\nSetting up libpcl-sample-consensus1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-stereo1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libblas-dev:amd64 (3.12.0-3build1) ...\nupdate-alternatives: using /usr/lib/x86_64-linux-gnu/blas/libblas.so to provide /usr/lib/x86_64-linux-gnu/libblas.so (libblas.so-x86_64-linux-gnu) in auto mode\nSetting up libmysqlclient-dev (8.0.42-0ubuntu0.24.04.1) ...\nSetting up libodbccr2:amd64 (2.3.12-1ubuntu0.24.04.1) ...\nSetting up default-libmysqlclient-dev:amd64 (1.1.0build1) ...\nSetting up libpcl-outofcore1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libkmlregionator1t64:amd64 (1.3.0-12build1) ...\nSetting up python3-vtk9 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\n/usr/lib/python3/dist-packages/vtkmodules/util/vtkMethodParser.py:304: SyntaxWarning: invalid escape sequence '\\S'\n  patn = re.compile (\"  \\S\")\nSetting up libgeotiff-dev:amd64 (1.7.1-5build1) ...\nSetting up libfreexl-dev:amd64 (2.0.0-1build2) ...\nSetting up qdoc-qt5 (5.15.13-1) ...\nSetting up libhdf5-hl-fortran-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up default-jdk (2:1.21-75+exp1) ...\nSetting up libhdf5-openmpi-hl-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libhdf5-openmpi-hl-fortran-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libopenni0t64 (1.5.4.0+dfsg-7.1build1) ...\nSetting up libpcl-octree1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-io1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libhdf5-dev (1.10.10+repack-3.1ubuntu4) ...\nupdate-alternatives: using /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5-serial.pc to provide /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5.pc (hdf5.pc) in auto mode\nSetting up liblapack-dev:amd64 (3.12.0-3build1) ...\nupdate-alternatives: using /usr/lib/x86_64-linux-gnu/lapack/liblapack.so to provide /usr/lib/x86_64-linux-gnu/liblapack.so (liblapack.so-x86_64-linux-gnu) in auto mode\nSetting up libnetcdf-dev (1:4.9.2-5ubuntu4) ...\nSetting up libspatialite-dev:amd64 (5.1.0-3build1) ...\nSetting up qttools5-dev-tools (5.15.13-1) ...\nSetting up libhdf5-openmpi-hl-cpp-100t64:amd64 (1.10.10+repack-3.1ubuntu4) ...\nSetting up libsuperlu-dev:amd64 (6.0.1+dfsg1-1build1) ...\nSetting up libpcl-search1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libhdf5-openmpi-dev (1.10.10+repack-3.1ubuntu4) ...\nupdate-alternatives: using /usr/bin/h5pcc.openmpi to provide /usr/bin/h5pcc (h5pcc) in auto mode\nupdate-alternatives: using /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5-openmpi.pc to provide /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5.pc (hdf5.pc) in auto mode\nupdate-alternatives: updating alternative /usr/bin/mpicc.openmpi because link group mpi has changed slave links\nupdate-alternatives: using /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5-mpi.pc to provide /usr/lib/x86_64-linux-gnu/pkgconfig/hdf5.pc (hdf5.pc) in auto mode\nSetting up openni-utils (1.5.4.0+dfsg-7.1build1) ...\nSetting up unixodbc-dev:amd64 (2.3.12-1ubuntu0.24.04.1) ...\nSetting up libkml-dev:amd64 (1.3.0-12build1) ...\nSetting up libarpack2-dev:amd64 (3.9.1-1.1build2) ...\nSetting up libpcl-visualization1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libopenni-dev:amd64 (1.5.4.0+dfsg-7.1build1) ...\nSetting up libopenni-sensor-pointclouds0 (5.1.0.41.11-1build2) ...\nSetting up libarmadillo-dev (1:12.6.7+dfsg-1build2) ...\nSetting up libpcl-surface1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-filters1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-registration1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libhdf5-mpi-dev (1.10.10+repack-3.1ubuntu4) ...\nSetting up qttools5-dev:amd64 (5.15.13-1) ...\nSetting up libhdf4-alt-dev (4.2.16-4build1) ...\nSetting up libgdal-dev (3.8.4+dfsg-3ubuntu3) ...\nSetting up qttools5-private-dev:amd64 (5.15.13-1) ...\nSetting up libpcl-tracking1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libvtk9-dev (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSetting up libflann-dev:amd64 (1.9.2+dfsg-2build1) ...\nSetting up libvtk9-qt-dev:amd64 (9.1.0+really9.1.0+dfsg2-7.1build3) ...\nSetting up libpcl-features1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-keypoints1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-segmentation1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-recognition1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-apps1.14:amd64 (1.14.0+dfsg-1) ...\nSetting up libpcl-dev (1.14.0+dfsg-1) ...\nProcessing triggers for hicolor-icon-theme (0.17-2) ...\nProcessing triggers for libc-bin (2.39-0ubuntu8.4) ...\nProcessing triggers for man-db (2.12.0-4build2) ...\nProcessing triggers for desktop-file-utils (0.27-2build1) ...\n\n        </stdout>\n        <stderr>\n        \n        </stderr>","isError":false,"requestId":""}},"5ddb73a9-b353-4ed7-af99-f303fcef3969;toolu_vrtx_01KFjagyi4qDjsFzJHLY2T5M":{"requestId":"5ddb73a9-b353-4ed7-af99-f303fcef3969","toolUseId":"toolu_vrtx_01KFjagyi4qDjsFzJHLY2T5M","phase":5,"result":{"text":"Here are the results from executing the command.\n        <return-code>\n        2\n        </return-code>\n        <stdout>\n        \u001b[0mCMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):\n  Compatibility with CMake < 3.5 will be removed from a future version of\n  CMake.\n\n  Update the VERSION argument <min> value or use a ...<max> suffix to tell\n  CMake that the project does not need compatibility with older versions.\n\n\u001b[0m\n-- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.83.0/BoostConfig.cmake (found suitable version \"1.83.0\", minimum required is \"1.65.0\") found components: system filesystem iostreams serialization \n\u001b[33mCMake Warning (dev) at /usr/lib/x86_64-linux-gnu/cmake/pcl/Modules/FindFLANN.cmake:45 (find_package):\n  Policy CMP0144 is not set: find_package uses upper-case <PACKAGENAME>_ROOT\n  variables.  Run \"cmake --help-policy CMP0144\" for policy details.  Use the\n  cmake_policy command to set the policy and suppress this warning.\n\n  CMake variable FLANN_ROOT is set to:\n\n    /usr\n\n  For compatibility, find_package is ignoring the variable, but code in a\n  .cmake module might still use it.\nCall Stack (most recent call first):\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:261 (find_package)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:306 (find_flann)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:570 (find_external_library)\n  CMakeLists.txt:10 (find_package)\nThis warning is for project developers.  Use -Wno-dev to suppress it.\n\u001b[0m\n-- Found flann version 1.9.2\n-- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \n-- Found OpenMP: TRUE (found version \"4.5\") found components: CXX \n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\n-- Found Threads: TRUE  \n-- Found GLEW: /usr/lib/x86_64-linux-gnu/libGLEW.so  \n-- Found OpenGL: /usr/lib/x86_64-linux-gnu/libOpenGL.so  found components: OpenGL GLX \n-- Found MPI_C: /usr/lib/x86_64-linux-gnu/libmpi.so (found version \"3.1\") \n-- Found MPI: TRUE (found version \"3.1\") found components: C \n-- Found JsonCpp: /usr/lib/x86_64-linux-gnu/libjsoncpp.so (found suitable version \"1.9.5\", minimum required is \"0.7.0\") \n-- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.so (found version \"1.3\")  \n-- Found PNG: /usr/lib/x86_64-linux-gnu/libpng.so (found version \"1.6.43\") \n-- Found Eigen3: /usr/include/eigen3 (found version \"3.4.0\") \n-- Found X11: /usr/include   \n-- Looking for XOpenDisplay in /usr/lib/x86_64-linux-gnu/libX11.so;/usr/lib/x86_64-linux-gnu/libXext.so\n-- Looking for XOpenDisplay in /usr/lib/x86_64-linux-gnu/libX11.so;/usr/lib/x86_64-linux-gnu/libXext.so - found\n-- Looking for gethostbyname\n-- Looking for gethostbyname - found\n-- Looking for connect\n-- Looking for connect - found\n-- Looking for remove\n-- Looking for remove - found\n-- Looking for shmat\n-- Looking for shmat - found\n-- Looking for IceConnectionNumber in ICE\n-- Looking for IceConnectionNumber in ICE - found\n-- Found EXPAT: /usr/lib/x86_64-linux-gnu/libexpat.so (found version \"2.6.1\") \n-- Found double-conversion: /usr/lib/x86_64-linux-gnu/libdouble-conversion.so  \n-- Found LZ4: /usr/lib/x86_64-linux-gnu/liblz4.so (found version \"1.9.4\") \n-- Found LZMA: /usr/lib/x86_64-linux-gnu/liblzma.so (found version \"5.4.5\") \n-- Found JPEG: /usr/lib/x86_64-linux-gnu/libjpeg.so (found version \"80\") \n-- Found TIFF: /usr/lib/x86_64-linux-gnu/libtiff.so (found version \"4.5.1\")  \n-- Found Freetype: /usr/lib/x86_64-linux-gnu/libfreetype.so (found version \"2.13.2\") \n-- Found utf8cpp: /usr/include/utf8cpp  \n-- Checking for module 'libusb-1.0'\n--   Found libusb-1.0, version 1.0.27\n-- Found libusb: /usr/lib/x86_64-linux-gnu/libusb-1.0.so  \n-- Found OpenNI: /usr/lib/libOpenNI.so;libusb::libusb (found version \"1.5.4.0\") \n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- Found OpenNI2: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb (found version \"2.2.0.33\") \n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Could NOT find Pcap (missing: PCAP_LIBRARIES PCAP_INCLUDE_DIRS) \n\u001b[0m** WARNING ** io features related to pcap will be disabled\u001b[0m\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Found Qhull version 8.0.2\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- looking for PCL_COMMON\n-- Found PCL_COMMON: /usr/lib/x86_64-linux-gnu/libpcl_common.so  \n-- looking for PCL_KDTREE\n-- Found PCL_KDTREE: /usr/lib/x86_64-linux-gnu/libpcl_kdtree.so  \n-- looking for PCL_OCTREE\n-- Found PCL_OCTREE: /usr/lib/x86_64-linux-gnu/libpcl_octree.so  \n-- looking for PCL_SEARCH\n-- Found PCL_SEARCH: /usr/lib/x86_64-linux-gnu/libpcl_search.so  \n-- looking for PCL_SAMPLE_CONSENSUS\n-- Found PCL_SAMPLE_CONSENSUS: /usr/lib/x86_64-linux-gnu/libpcl_sample_consensus.so  \n-- looking for PCL_FILTERS\n-- Found PCL_FILTERS: /usr/lib/x86_64-linux-gnu/libpcl_filters.so  \n-- looking for PCL_2D\n-- Found PCL_2D: /usr/include/pcl-1.14  \n-- looking for PCL_GEOMETRY\n-- Found PCL_GEOMETRY: /usr/include/pcl-1.14  \n-- looking for PCL_IO\n-- Found PCL_IO: /usr/lib/x86_64-linux-gnu/libpcl_io.so  \n-- looking for PCL_FEATURES\n-- Found PCL_FEATURES: /usr/lib/x86_64-linux-gnu/libpcl_features.so  \n-- looking for PCL_ML\n-- Found PCL_ML: /usr/lib/x86_64-linux-gnu/libpcl_ml.so  \n-- looking for PCL_SEGMENTATION\n-- Found PCL_SEGMENTATION: /usr/lib/x86_64-linux-gnu/libpcl_segmentation.so  \n-- looking for PCL_VISUALIZATION\n-- Found PCL_VISUALIZATION: /usr/lib/x86_64-linux-gnu/libpcl_visualization.so  \n-- looking for PCL_SURFACE\n-- Found PCL_SURFACE: /usr/lib/x86_64-linux-gnu/libpcl_surface.so  \n-- looking for PCL_REGISTRATION\n-- Found PCL_REGISTRATION: /usr/lib/x86_64-linux-gnu/libpcl_registration.so  \n-- looking for PCL_KEYPOINTS\n-- Found PCL_KEYPOINTS: /usr/lib/x86_64-linux-gnu/libpcl_keypoints.so  \n-- looking for PCL_TRACKING\n-- Found PCL_TRACKING: /usr/lib/x86_64-linux-gnu/libpcl_tracking.so  \n-- looking for PCL_RECOGNITION\n-- Found PCL_RECOGNITION: /usr/lib/x86_64-linux-gnu/libpcl_recognition.so  \n-- looking for PCL_STEREO\n-- Found PCL_STEREO: /usr/lib/x86_64-linux-gnu/libpcl_stereo.so  \n-- looking for PCL_APPS\n-- Found PCL_APPS: /usr/lib/x86_64-linux-gnu/libpcl_apps.so  \n-- looking for PCL_IN_HAND_SCANNER\n-- Found PCL_IN_HAND_SCANNER: /usr/include/pcl-1.14  \n-- looking for PCL_MODELER\n-- Found PCL_MODELER: /usr/include/pcl-1.14  \n-- looking for PCL_POINT_CLOUD_EDITOR\n-- Found PCL_POINT_CLOUD_EDITOR: /usr/include/pcl-1.14  \n-- looking for PCL_OUTOFCORE\n-- Found PCL_OUTOFCORE: /usr/lib/x86_64-linux-gnu/libpcl_outofcore.so  \n-- looking for PCL_PEOPLE\n-- Found PCL_PEOPLE: /usr/lib/x86_64-linux-gnu/libpcl_people.so  \n-- Found PCL: pcl_common;pcl_kdtree;pcl_octree;pcl_search;pcl_sample_consensus;pcl_filters;pcl_io;pcl_features;pcl_ml;pcl_segmentation;pcl_visualization;pcl_surface;pcl_registration;pcl_keypoints;pcl_tracking;pcl_recognition;pcl_stereo;pcl_apps;pcl_outofcore;pcl_people;Boost::system;Boost::filesystem;Boost::iostreams;Boost::serialization;/usr/lib/libOpenNI.so;libusb::libusb;/usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb;VTK::ChartsCore;VTK::CommonColor;VTK::CommonComputationalGeometry;VTK::CommonCore;VTK::CommonDataModel;VTK::CommonExecutionModel;VTK::CommonMath;VTK::CommonMisc;VTK::CommonTransforms;VTK::FiltersCore;VTK::FiltersExtraction;VTK::FiltersGeneral;VTK::FiltersGeometry;VTK::FiltersModeling;VTK::FiltersSources;VTK::ImagingCore;VTK::ImagingSources;VTK::InteractionImage;VTK::InteractionStyle;VTK::InteractionWidgets;VTK::IOCore;VTK::IOGeometry;VTK::IOImage;VTK::IOLegacy;VTK::IOPLY;VTK::RenderingAnnotation;VTK::RenderingCore;VTK::RenderingContext2D;VTK::RenderingLOD;VTK::RenderingFreeType;VTK::ViewsCore;VTK::ViewsContext2D;VTK::RenderingOpenGL2;VTK::RenderingContextOpenGL2;VTK::GUISupportQt;FLANN::FLANN;QHULL::QHULL (Required is at least version \"1.2\") \n-- Configuring done (4.5s)\n-- Generating done (0.1s)\n-- Build files have been written to: /home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/build\n[ 20%] \u001b[32mBuilding CXX object CMakeFiles/ukf_highway.dir/src/main.cpp.o\u001b[0m\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_macros.h:74\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_base.h:47\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/correspondence.h:45\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:42\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:7\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/highway.h:4\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/main.cpp:6\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_config.h:7:4:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K#error PCL requires C++14 or above\n    7 |   #\u001b[01;31m\u001b[Kerror\u001b[m\u001b[K PCL requires C++14 or above\n      |    \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/types.h:46\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/point_cloud.h:52\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_base.h:50\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_config.h:7:4:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K#error PCL requires C++14 or above\n    7 |   #\u001b[01;31m\u001b[Kerror\u001b[m\u001b[K PCL requires C++14 or above\n      |    \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/console/print.h:43\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/point_cloud.h:53\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_config.h:7:4:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K#error PCL requires C++14 or above\n    7 |   #\u001b[01;31m\u001b[Kerror\u001b[m\u001b[K PCL requires C++14 or above\n      |    \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:40\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:46\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/pcl_base.h:46\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/point_struct_traits.h:70:21:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_all_extents_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type; did you mean ‘\u001b[01m\u001b[Kremove_all_extents\u001b[m\u001b[K’?\n   70 |   using type = std::\u001b[01;31m\u001b[Kremove_all_extents_t\u001b[m\u001b[K<T>;\n      |                     \u001b[01;31m\u001b[K^~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n      |                     \u001b[32m\u001b[Kremove_all_extents\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/point_struct_traits.h:71:59:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Ktype\u001b[m\u001b[K’ was not declared in this scope\n   71 |   static const std::uint32_t value = sizeof (T) / sizeof (\u001b[01;31m\u001b[Ktype\u001b[m\u001b[K);\n      |                                                           \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:282:57:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_reference_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’; did you mean ‘\u001b[01m\u001b[Kremove_reference\u001b[m\u001b[K’?\n  282 |                             std::reference_wrapper<std::\u001b[01;31m\u001b[Kremove_reference_t\u001b[m\u001b[K<F>>>::value;\n      |                                                         \u001b[01;31m\u001b[K^~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n      |                                                         \u001b[32m\u001b[Kremove_reference\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:282:57:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_reference_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’; did you mean ‘\u001b[01m\u001b[Kremove_reference\u001b[m\u001b[K’?\n  282 |                             std::reference_wrapper<std::\u001b[01;31m\u001b[Kremove_reference_t\u001b[m\u001b[K<F>>>::value;\n      |                                                         \u001b[01;31m\u001b[K^~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n      |                                                         \u001b[32m\u001b[Kremove_reference\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:282:76:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktemplate argument 1 is invalid\n  282 |                             std::reference_wrapper<std::remove_reference_t<\u001b[01;31m\u001b[KF\u001b[m\u001b[K>>>::value;\n      |                                                                            \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:282:77:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktemplate argument 2 is invalid\n  282 |                             std::reference_wrapper<std::remove_reference_t<F\u001b[01;31m\u001b[K>>\u001b[m\u001b[K>::value;\n      |                                                                             \u001b[01;31m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:282:82:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[K::value\u001b[m\u001b[K’ has not been declared\n  282 |                             std::reference_wrapper<std::remove_reference_t<F>>>::\u001b[01;31m\u001b[Kvalue\u001b[m\u001b[K;\n      |                                                                                  \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:287:57:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_reference_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’; did you mean ‘\u001b[01m\u001b[Kremove_reference\u001b[m\u001b[K’?\n  287 |                             std::reference_wrapper<std::\u001b[01;31m\u001b[Kremove_reference_t\u001b[m\u001b[K<F>>>::value;\n      |                                                         \u001b[01;31m\u001b[K^~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n      |                                                         \u001b[32m\u001b[Kremove_reference\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:287:57:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_reference_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’; did you mean ‘\u001b[01m\u001b[Kremove_reference\u001b[m\u001b[K’?\n  287 |                             std::reference_wrapper<std::\u001b[01;31m\u001b[Kremove_reference_t\u001b[m\u001b[K<F>>>::value;\n      |                                                         \u001b[01;31m\u001b[K^~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n      |                                                         \u001b[32m\u001b[Kremove_reference\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:287:76:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktemplate argument 1 is invalid\n  287 |                             std::reference_wrapper<std::remove_reference_t<\u001b[01;31m\u001b[KF\u001b[m\u001b[K>>>::value;\n      |                                                                            \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:287:77:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktemplate argument 2 is invalid\n  287 |                             std::reference_wrapper<std::remove_reference_t<F\u001b[01;31m\u001b[K>>\u001b[m\u001b[K>::value;\n      |                                                                             \u001b[01;31m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:287:82:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[K::value\u001b[m\u001b[K’ has not been declared\n  287 |                             std::reference_wrapper<std::remove_reference_t<F>>>::\u001b[01;31m\u001b[Kvalue\u001b[m\u001b[K;\n      |                                                                                  \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:298:31:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kremove_cv_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type; did you mean ‘\u001b[01m\u001b[Kremove_cv\u001b[m\u001b[K’?\n  298 |   using remove_cvref_t = std::\u001b[01;31m\u001b[Kremove_cv_t\u001b[m\u001b[K<std::remove_reference_t<T>>;\n      |                               \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n      |                               \u001b[32m\u001b[Kremove_cv\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:116:6:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  116 | std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<has_custom_allocator<T>::value, shared_ptr<T>> make_shared(Args&&... args)\n      |      \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:116:1:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  116 | \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<has_custom_allocator<T>::value, shared_ptr<T>> make_shared(Args&&... args)\n      | \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:122:6:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  122 | std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<!has_custom_allocator<T>::value, shared_ptr<T>> make_shared(Args&&... args)\n      |      \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:122:1:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  122 | \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<!has_custom_allocator<T>::value, shared_ptr<T>> make_shared(Args&&... args)\n      | \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:44\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:\u001b[m\u001b[K In static member function ‘\u001b[01m\u001b[Kstatic bool pcl::PolygonMesh::\u001b[01;32m\u001b[Kconcatenate\u001b[m\u001b[K(pcl::PolygonMesh&, const pcl::PolygonMesh&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:44:37:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n   44 |                      [point_offset](\u001b[01;31m\u001b[Kauto\u001b[m\u001b[K polygon)\n      |                                     \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:\u001b[m\u001b[K In lambda function:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:46:48:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kvertices\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kpolygon\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’\n   46 |                         std::transform(polygon.\u001b[01;31m\u001b[Kvertices\u001b[m\u001b[K.begin (),\n      |                                                \u001b[01;31m\u001b[K^~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:47:48:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kvertices\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kpolygon\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’\n   47 |                                        polygon.\u001b[01;31m\u001b[Kvertices\u001b[m\u001b[K.end (),\n      |                                                \u001b[01;31m\u001b[K^~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:48:48:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kvertices\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kpolygon\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’\n   48 |                                        polygon.\u001b[01;31m\u001b[Kvertices\u001b[m\u001b[K.begin (),\n      |                                                \u001b[01;31m\u001b[K^~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:49:55:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n   49 |                                        [point_offset](\u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& point_idx)\n      |                                                       \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_geometry_handlers.h:47\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/common/actor_map.h:40\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:48\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const PCLPointCloud2&, const std::string&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:65:29:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n   65 |         [&field_name](const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K field) { return field.name == field_name; });\n      |                             \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:\u001b[m\u001b[K In lambda function:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:65:56:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kname\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kfield\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kconst int\u001b[m\u001b[K’\n   65 |         [&field_name](const auto field) { return field.\u001b[01;31m\u001b[Kname\u001b[m\u001b[K == field_name; });\n      |                                                        \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kstd::string pcl::\u001b[01;32m\u001b[KgetFieldsList\u001b[m\u001b[K(const PCLPointCloud2&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:118:20:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n  118 |           [](const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& acc, const auto& field) { return acc + \" \" + field.name; });\n      |                    \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:118:37:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n  118 |           [](const auto& acc, const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& field) { return acc + \" \" + field.name; });\n      |                                     \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:\u001b[m\u001b[K In lambda function:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:118:77:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kname\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kfield\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kconst int\u001b[m\u001b[K’\n  118 |           [](const auto& acc, const auto& field) { return acc + \" \" + field.\u001b[01;31m\u001b[Kname\u001b[m\u001b[K; });\n      |                                                                             \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kconstexpr bool pcl::\u001b[01;32m\u001b[KisSamePointType\u001b[m\u001b[K()\u001b[m\u001b[K’:\n... additional lines truncated ...\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:91:29:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:91:29:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:91:29:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:97:148:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktype/value mismatch at argument 3 in template parameter list for ‘\u001b[01m\u001b[Ktemplate<class PointInT, class PointOutT, class Enable> struct pcl::detail::CopyPointHelper\u001b[m\u001b[K’\n   97 |                                                                                           pcl::traits::has_field<PointOutT, pcl::fields::rgba>>>>::\u001b[01;31m\u001b[Kvalue\u001b[m\u001b[K>>\n      |                                                                                                                                                    \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:97:148:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  expected a type, got ‘\u001b[01m\u001b[K(<expression error> < boost::mpl::and_<boost::mpl::not_<std::is_same<PointInT, PointOutT> >, boost::mpl::or_<boost::mpl::not_<pcl::traits::has_color<PointInT> >, boost::mpl::not_<pcl::traits::has_color<PointOutT> >, boost::mpl::and_<pcl::traits::has_field<PointInT, pcl::fields::rgb>, pcl::traits::has_field<PointOutT, pcl::fields::rgb> >, boost::mpl::and_<pcl::traits::has_field<PointInT, pcl::fields::rgba>, pcl::traits::has_field<PointOutT, pcl::fields::rgba> > > >::value)\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:97:153:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected unqualified-id before ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ token\n   97 |                                                                                           pcl::traits::has_field<PointOutT, pcl::fields::rgba>>>>::value\u001b[01;31m\u001b[K>>\u001b[m\u001b[K\n      |                                                                                                                                                         \u001b[01;31m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:110:29:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’\n  110 |                        std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<boost::mpl::and_<boost::mpl::not_<std::is_same<PointInT, PointOutT>>,\n      |                             \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:110:29:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:110:29:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ is not a member of ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:110:29:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:114:130:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Ktype/value mismatch at argument 3 in template parameter list for ‘\u001b[01m\u001b[Ktemplate<class PointInT, class PointOutT, class Enable> struct pcl::detail::CopyPointHelper\u001b[m\u001b[K’\n  114 |                                                                          pcl::traits::has_field<PointOutT, pcl::fields::rgb>>>>::\u001b[01;31m\u001b[Kvalue\u001b[m\u001b[K>>\n      |                                                                                                                                  \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:114:130:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  expected a type, got ‘\u001b[01m\u001b[K(<expression error> < boost::mpl::and_<boost::mpl::not_<std::is_same<PointInT, PointOutT> >, boost::mpl::or_<boost::mpl::and_<pcl::traits::has_field<PointInT, pcl::fields::rgb>, pcl::traits::has_field<PointOutT, pcl::fields::rgba> >, boost::mpl::and_<pcl::traits::has_field<PointInT, pcl::fields::rgba>, pcl::traits::has_field<PointOutT, pcl::fields::rgb> > > >::value)\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/copy_point.hpp:114:135:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected unqualified-id before ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ token\n  114 |                                                                          pcl::traits::has_field<PointOutT, pcl::fields::rgb>>>>::value\u001b[01;31m\u001b[K>>\u001b[m\u001b[K\n      |                                                                                                                                       \u001b[01;31m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, const std::vector<PCLPointField>&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:27:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n   75 |       [&field_name](const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& field) { return field.name == field_name; });\n      |                           \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:\u001b[m\u001b[K In lambda function:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:55:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kname\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kfield\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kconst int\u001b[m\u001b[K’\n   75 |       [&field_name](const auto& field) { return field.\u001b[01;31m\u001b[Kname\u001b[m\u001b[K == field_name; });\n      |                                                       \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid pcl::\u001b[01;32m\u001b[KcopyPointCloud\u001b[m\u001b[K(const PointCloud<PointT>&, const std::vector<PointIndices>&, PointCloud<PointOutT>&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:270:16:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n  270 |       [](const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& acc, const auto& index) { return index.indices.size() + acc; });\n      |                \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:270:33:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kuse of ‘\u001b[01m\u001b[Kauto\u001b[m\u001b[K’ in lambda parameter declaration only available with ‘\u001b[01m\u001b[K-std=c++14\u001b[m\u001b[K’ or ‘\u001b[01m\u001b[K-std=gnu++14\u001b[m\u001b[K’\n  270 |       [](const auto& acc, const \u001b[01;31m\u001b[Kauto\u001b[m\u001b[K& index) { return index.indices.size() + acc; });\n      |                                 \u001b[01;31m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:\u001b[m\u001b[K In lambda function:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:270:61:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Krequest for member ‘\u001b[01m\u001b[Kindices\u001b[m\u001b[K’ in ‘\u001b[01m\u001b[Kindex\u001b[m\u001b[K’, which is of non-class type ‘\u001b[01m\u001b[Kconst int\u001b[m\u001b[K’\n  270 |       [](const auto& acc, const auto& index) { return index.\u001b[01;31m\u001b[Kindices\u001b[m\u001b[K.size() + acc; });\n      |                                                             \u001b[01;31m\u001b[K^~~~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/point_cloud_color_handlers.hpp:46\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_color_handlers.h:842\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/common/actor_map.h:41\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:\u001b[m\u001b[K At global scope:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:118:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasNoXY\u001b[m\u001b[K’ has not been declared\n  118 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasNoXY\u001b[m\u001b[K<PointT> = true> constexpr inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:118:45:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  118 |   template <typename PointT, traits::HasNoXY\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> constexpr inline bool\n      |                                             \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:124:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasNoXYZ\u001b[m\u001b[K’ has not been declared\n  124 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasNoXYZ\u001b[m\u001b[K<PointT> = true> constexpr inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:124:46:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  124 |   template <typename PointT, traits::HasNoXYZ\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> constexpr inline bool\n      |                                              \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:130:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasNoNormal\u001b[m\u001b[K’ has not been declared\n  130 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasNoNormal\u001b[m\u001b[K<PointT> = true> constexpr inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:130:49:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  130 |   template <typename PointT, traits::HasNoNormal\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> constexpr inline bool\n      |                                                 \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:137:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasXY\u001b[m\u001b[K’ has not been declared\n  137 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasXY\u001b[m\u001b[K<PointT> = true> inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:137:43:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  137 |   template <typename PointT, traits::HasXY\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> inline bool\n      |                                           \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:138:3:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kredefinition of ‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > bool pcl::\u001b[01;32m\u001b[KisXYFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’\n  138 |   \u001b[01;31m\u001b[KisXYFinite\u001b[m\u001b[K (const PointT& pt) noexcept\n      |   \u001b[01;31m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:119:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > constexpr bool pcl::\u001b[01;32m\u001b[KisXYFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’ previously declared here\n  119 |   \u001b[01;36m\u001b[KisXYFinite\u001b[m\u001b[K (const PointT&) noexcept\n      |   \u001b[01;36m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:143:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasXYZ\u001b[m\u001b[K’ has not been declared\n  143 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasXYZ\u001b[m\u001b[K<PointT> = true> inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:143:44:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  143 |   template <typename PointT, traits::HasXYZ\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> inline bool\n      |                                            \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:144:3:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kredefinition of ‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > bool pcl::\u001b[01;32m\u001b[KisXYZFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’\n  144 |   \u001b[01;31m\u001b[KisXYZFinite\u001b[m\u001b[K (const PointT& pt) noexcept\n      |   \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:125:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > constexpr bool pcl::\u001b[01;32m\u001b[KisXYZFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’ previously declared here\n  125 |   \u001b[01;36m\u001b[KisXYZFinite\u001b[m\u001b[K (const PointT&) noexcept\n      |   \u001b[01;36m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:149:38:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kpcl::traits::HasNormal\u001b[m\u001b[K’ has not been declared\n  149 |   template <typename PointT, traits::\u001b[01;31m\u001b[KHasNormal\u001b[m\u001b[K<PointT> = true> inline bool\n      |                                      \u001b[01;31m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:149:47:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[K>\u001b[m\u001b[K’ before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  149 |   template <typename PointT, traits::HasNormal\u001b[01;31m\u001b[K<\u001b[m\u001b[KPointT> = true> inline bool\n      |                                               \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:150:3:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kredefinition of ‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > bool pcl::\u001b[01;32m\u001b[KisNormalFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’\n  150 |   \u001b[01;31m\u001b[KisNormalFinite\u001b[m\u001b[K (const PointT& pt) noexcept\n      |   \u001b[01;31m\u001b[K^~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/point_tests.h:131:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Ktemplate<class PointT, <typeprefixerror><anonymous> > constexpr bool pcl::\u001b[01;32m\u001b[KisNormalFinite\u001b[m\u001b[K(const PointT&)\u001b[m\u001b[K’ previously declared here\n  131 |   \u001b[01;36m\u001b[KisNormalFinite\u001b[m\u001b[K (const PointT&) noexcept\n      |   \u001b[01;36m\u001b[K^~~~~~~~~~~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/pcd_io.h:45\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.h:6\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/highway.h:6\u001b[m\u001b[K:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:236:8:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  236 |   std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<std::is_floating_point<Type>::value>\n      |        \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:236:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  236 |   \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<std::is_floating_point<Type>::value>\n      |   \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:253:8:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  253 |   std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<std::is_integral<Type>::value>\n      |        \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:253:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  253 |   \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<std::is_integral<Type>::value>\n      |   \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:267:18:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected initializer before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  267 |   copyValueString\u001b[01;31m\u001b[K<\u001b[m\u001b[Kstd::int8_t> (const pcl::PCLPointCloud2 &cloud,\n      |                  \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:281:18:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kexpected initializer before ‘\u001b[01m\u001b[K<\u001b[m\u001b[K’ token\n  281 |   copyValueString\u001b[01;31m\u001b[K<\u001b[m\u001b[Kstd::uint8_t> (const pcl::PCLPointCloud2 &cloud,\n      |                  \u001b[01;31m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:305:8:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  305 |   std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<std::is_floating_point<Type>::value, bool>\n      |        \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:305:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  305 |   \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<std::is_floating_point<Type>::value, bool>\n      |   \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:318:8:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[K‘\u001b[01m\u001b[Kenable_if_t\u001b[m\u001b[K’ in namespace ‘\u001b[01m\u001b[Kstd\u001b[m\u001b[K’ does not name a template type\n  318 |   std::\u001b[01;31m\u001b[Kenable_if_t\u001b[m\u001b[K<std::is_integral<Type>::value, bool>\n      |        \u001b[01;31m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/io/file_io.h:318:3:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[Kstd::enable_if_t\u001b[m\u001b[K’ is only available from C++14 onwards\n  318 |   \u001b[01;36m\u001b[Kstd\u001b[m\u001b[K::enable_if_t<std::is_integral<Type>::value, bool>\n      |   \u001b[01;36m\u001b[K^~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/usr/include/c++/13/algorithm:61\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/eigen3/Eigen/Core:95\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/memory.h:48\u001b[m\u001b[K:\n/usr/include/c++/13/bits/stl_algo.h: In instantiation of ‘\u001b[01m\u001b[K_OIter std::\u001b[01;32m\u001b[Ktransform\u001b[m\u001b[K(_IIter, _IIter, _OIter, _UnaryOperation) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::Vertices*, vector<pcl::Vertices> >; _OIter = back_insert_iterator<vector<pcl::Vertices> >; _UnaryOperation = pcl::PolygonMesh::concatenate(pcl::PolygonMesh&, const pcl::PolygonMesh&)::<lambda(int)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:41:21:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:4309:31:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::PolygonMesh::concatenate(pcl::PolygonMesh&, const pcl::PolygonMesh&)::<lambda(int)>) (const pcl::Vertices&)\u001b[m\u001b[K’\n 4309 |         *__result = \u001b[01;31m\u001b[K__unary_op(*__first)\u001b[m\u001b[K;\n      |                     \u001b[01;31m\u001b[K~~~~~~~~~~^~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:44:22:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::PolygonMesh::concatenate(pcl::PolygonMesh&, const pcl::PolygonMesh&)::<lambda(int)>\u001b[m\u001b[K’\n   44 |                      \u001b[01;36m\u001b[K[\u001b[m\u001b[Kpoint_offset](auto polygon)\n      |                      \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/PolygonMesh.h:44:22:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::Vertices\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’\nIn file included from \u001b[01m\u001b[K/usr/include/c++/13/numeric:62\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:43\u001b[m\u001b[K:\n/usr/include/c++/13/bits/stl_numeric.h: In instantiation of ‘\u001b[01m\u001b[K_Tp std::\u001b[01;32m\u001b[Kaccumulate\u001b[m\u001b[K(_InputIterator, _InputIterator, _Tp, _BinaryOperation) \u001b[35m\u001b[K[with _InputIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Tp = __cxx11::basic_string<char>; _BinaryOperation = pcl::getFieldsList(const PCLPointCloud2&)::<lambda(const int&, const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:117:29:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_numeric.h:169:29:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldsList(const PCLPointCloud2&)::<lambda(const int&, const int&)>) (std::__cxx11::basic_string<char>&, const pcl::PCLPointField&)\u001b[m\u001b[K’\n  169 |         __init = \u001b[01;31m\u001b[K__binary_op(_GLIBCXX_MOVE_IF_20(__init), *__first)\u001b[m\u001b[K;\n      |                  \u001b[01;31m\u001b[K~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:118:11:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldsList(const PCLPointCloud2&)::<lambda(const int&, const int&)>\u001b[m\u001b[K’\n  118 |           \u001b[01;36m\u001b[K[\u001b[m\u001b[K](const auto& acc, const auto& field) { return acc + \" \" + field.name; });\n      |           \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:118:11:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kstd::__cxx11::basic_string<char>\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\nIn file included from \u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:71\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/c++/13/string:51\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/type_traits.h:46\u001b[m\u001b[K:\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:64:37:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:65:9:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldIndex(const PCLPointCloud2&, const std::string&)::<lambda(int)>\u001b[m\u001b[K’\n   65 |         \u001b[01;36m\u001b[K[\u001b[m\u001b[K&field_name](const auto field) { return field.name == field_name; });\n      |         \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/io.h:65:9:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/conversions.h:342:37:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/conversions.h:341:28:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::toPCLPointCloud2(const PCLPointCloud2&, PCLImage&)::<lambda(const int&)>\u001b[m\u001b[K’\n  341 |     const auto predicate = \u001b[01;36m\u001b[K[\u001b[m\u001b[K](const auto& field) { return field.name == \"rgb\"; };\n      |                            \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/conversions.h:341:28:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:74:35:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, const std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZRGB; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:66:37:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZRGB; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/point_cloud_color_handlers.hpp:121:43:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid pcl::visualization::PointCloudColorHandlerRGBField<PointT>::\u001b[01;32m\u001b[KsetInputCloud\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZRGB; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGB> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_color_handlers.h:264:11:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kpcl::visualization::PointCloudColorHandlerRGBField<PointT>::\u001b[01;32m\u001b[KPointCloudColorHandlerRGBField\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZRGB; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGB> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:889:100:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldIndex<PointXYZRGB>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>\u001b[m\u001b[K’\n   75 |       \u001b[01;36m\u001b[K[\u001b[m\u001b[K&field_name](const auto& field) { return field.name == field_name; });\n      |       \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:74:35:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, const std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZRGBA; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:66:37:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZRGBA; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/point_cloud_color_handlers.hpp:448:43:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid pcl::visualization::PointCloudColorHandlerRGBAField<PointT>::\u001b[01;32m\u001b[KsetInputCloud\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZRGBA; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGBA> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_color_handlers.h:425:11:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kpcl::visualization::PointCloudColorHandlerRGBAField<PointT>::\u001b[01;32m\u001b[KPointCloudColorHandlerRGBAField\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZRGBA; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGBA> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:902:102:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldIndex<PointXYZRGBA>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>\u001b[m\u001b[K’\n   75 |       \u001b[01;36m\u001b[K[\u001b[m\u001b[K&field_name](const auto& field) { return field.name == field_name; });\n      |       \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:74:35:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, const std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZL; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:66:37:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZL; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/point_cloud_color_handlers.hpp:514:43:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid pcl::visualization::PointCloudColorHandlerLabelField<PointT>::\u001b[01;32m\u001b[KsetInputCloud\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZL; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZL> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_color_handlers.h:486:11:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kpcl::visualization::PointCloudColorHandlerLabelField<PointT>::\u001b[01;32m\u001b[KPointCloudColorHandlerLabelField\u001b[m\u001b[K(const PointCloudConstPtr&, bool) \u001b[35m\u001b[K[with PointT = pcl::PointXYZL; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZL> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:915:100:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldIndex<PointXYZL>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>\u001b[m\u001b[K’\n   75 |       \u001b[01;36m\u001b[K[\u001b[m\u001b[K&field_name](const auto& field) { return field.name == field_name; });\n      |       \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\n/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘\u001b[01m\u001b[Kbool __gnu_cxx::__ops::_Iter_pred<_Predicate>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(_Iterator) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, std::vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2072:14:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_RandomAccessIterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) \u001b[35m\u001b[K[with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algobase.h:2117:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_Iterator std::\u001b[01;32m\u001b[K__find_if\u001b[m\u001b[K(_Iterator, _Iterator, _Predicate) \u001b[35m\u001b[K[with _Iterator = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = __gnu_cxx::__ops::_Iter_pred<pcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/c++/13/bits/stl_algo.h:3923:28:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[K_IIter std::\u001b[01;32m\u001b[Kfind_if\u001b[m\u001b[K(_IIter, _IIter, _Predicate) \u001b[35m\u001b[K[with _IIter = __gnu_cxx::__normal_iterator<const pcl::PCLPointField*, vector<pcl::PCLPointField> >; _Predicate = pcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:74:35:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, const std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZ; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:66:37:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kint pcl::\u001b[01;32m\u001b[KgetFieldIndex\u001b[m\u001b[K(const std::string&, std::vector<PCLPointField>&) \u001b[35m\u001b[K[with PointT = PointXYZ; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/point_cloud_color_handlers.hpp:121:43:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid pcl::visualization::PointCloudColorHandlerRGBField<PointT>::\u001b[01;32m\u001b[KsetInputCloud\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZ; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/point_cloud_color_handlers.h:264:11:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kpcl::visualization::PointCloudColorHandlerRGBField<PointT>::\u001b[01;32m\u001b[KPointCloudColorHandlerRGBField\u001b[m\u001b[K(const PointCloudConstPtr&) \u001b[35m\u001b[K[with PointT = pcl::PointXYZ; PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/pcl_visualizer.hpp:101:44:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kbool pcl::visualization::PCLVisualizer::\u001b[01;32m\u001b[KaddPointCloud\u001b[m\u001b[K(const typename pcl::PointCloud<PointT>::ConstPtr&, const pcl::visualization::PointCloudGeometryHandler<PointT>&, const std::string&, int) \u001b[35m\u001b[K[with PointT = pcl::PointXYZ; typename pcl::PointCloud<PointT>::ConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/impl/pcl_visualizer.hpp:83:33:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kbool pcl::visualization::PCLVisualizer::\u001b[01;32m\u001b[KaddPointCloud\u001b[m\u001b[K(const typename pcl::PointCloud<PointT>::ConstPtr&, const std::string&, int) \u001b[35m\u001b[K[with PointT = pcl::PointXYZ; typename pcl::PointCloud<PointT>::ConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >; std::string = std::__cxx11::basic_string<char>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/visualization/pcl_visualizer.h:876:48:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/usr/include/c++/13/bits/predefined_ops.h:318:30:\u001b[m\u001b[K \u001b[01;31m\u001b[Kerror: \u001b[m\u001b[Kno match for call to ‘\u001b[01m\u001b[K(pcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>) (const pcl::PCLPointField&)\u001b[m\u001b[K’\n  318 |         { return bool(\u001b[01;31m\u001b[K_M_pred(*__it)\u001b[m\u001b[K); }\n      |                       \u001b[01;31m\u001b[K~~~~~~~^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kcandidate: ‘\u001b[01m\u001b[Kpcl::getFieldIndex<PointXYZ>(const std::string&, const std::vector<PCLPointField>&)::<lambda(const int&)>\u001b[m\u001b[K’\n   75 |       \u001b[01;36m\u001b[K[\u001b[m\u001b[K&field_name](const auto& field) { return field.name == field_name; });\n      |       \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n\u001b[01m\u001b[K/usr/include/pcl-1.14/pcl/common/impl/io.hpp:75:7:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K  no known conversion for argument 1 from ‘\u001b[01m\u001b[Kconst pcl::PCLPointField\u001b[m\u001b[K’ to ‘\u001b[01m\u001b[Kconst int&\u001b[m\u001b[K’\nmake[2]: *** [CMakeFiles/ukf_highway.dir/build.make:76: CMakeFiles/ukf_highway.dir/src/main.cpp.o] Error 1\nmake[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/ukf_highway.dir/all] Error 2\nmake: *** [Makefile:91: all] Error 2\n\n        </stdout>\n        <stderr>\n        \n        </stderr>","isError":false,"requestId":""}},"1156f178-28d7-4eff-a84a-852c0db9cb10;toolu_vrtx_01G1HbP1q8yQ73rntjXsWYm4":{"requestId":"1156f178-28d7-4eff-a84a-852c0db9cb10","toolUseId":"toolu_vrtx_01G1HbP1q8yQ73rntjXsWYm4","phase":5,"result":{"text":"Here's the result of running `cat -n` on CMakeLists.txt:\n     1\tcmake_minimum_required(VERSION 2.8 FATAL_ERROR)\n     2\t\n     3\tadd_definitions(-std=c++11)\n     4\t\n     5\tset(CXX_FLAGS \"-Wall\")\n     6\tset(CMAKE_CXX_FLAGS, \"${CXX_FLAGS}\")\n     7\t\n     8\tproject(playback)\n     9\t\n    10\tfind_package(PCL 1.2 REQUIRED)\n    11\t\n    12\tinclude_directories(${PCL_INCLUDE_DIRS})\n    13\tlink_directories(${PCL_LIBRARY_DIRS})\n    14\tadd_definitions(${PCL_DEFINITIONS})\n    15\tlist(REMOVE_ITEM PCL_LIBRARIES \"vtkproj4\")\n    16\t\n    17\t\n    18\tadd_executable (ukf_highway src/main.cpp src/ukf.cpp src/tools.cpp src/render/render.cpp)\n    19\ttarget_link_libraries (ukf_highway ${PCL_LIBRARIES})\n    20\t\n    21\t\n    22\t\n    23\t\n    24\t\nTotal lines in file: 24\n","isError":false,"requestId":""}},"99958342-6951-4334-8ff9-17a58ca04dd2;toolu_vrtx_01WWyULpjRCZxWS7ZtzfuR7e":{"requestId":"99958342-6951-4334-8ff9-17a58ca04dd2","toolUseId":"toolu_vrtx_01WWyULpjRCZxWS7ZtzfuR7e","phase":5,"result":{"text":"Successfully edited the file CMakeLists.txt.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n     1\tcmake_minimum_required(VERSION 3.5 FATAL_ERROR)\n     2\t\n     3\tadd_definitions(-std=c++14)\n     4\t\n     5\tset(CXX_FLAGS \"-Wall\")\n     6\tset(CMAKE_CXX_FLAGS \"${CXX_FLAGS}\")\n     7\t\n     8\tproject(playback)\n     9\t\n    10\tfind_package(PCL 1.2 REQUIRED)\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","isError":false,"requestId":""}},"2890a299-688c-41a3-b388-614e954d2d88;toolu_vrtx_01BS2ErXSLJg7iPSXkq1j1pr":{"requestId":"2890a299-688c-41a3-b388-614e954d2d88","toolUseId":"toolu_vrtx_01BS2ErXSLJg7iPSXkq1j1pr","phase":5,"result":{"text":"Here are the results from executing the command.\n        <return-code>\n        0\n        </return-code>\n        <stdout>\n        \u001b[33mCMake Warning (dev) at /usr/lib/x86_64-linux-gnu/cmake/pcl/Modules/FindFLANN.cmake:45 (find_package):\n  Policy CMP0144 is not set: find_package uses upper-case <PACKAGENAME>_ROOT\n  variables.  Run \"cmake --help-policy CMP0144\" for policy details.  Use the\n  cmake_policy command to set the policy and suppress this warning.\n\n  CMake variable FLANN_ROOT is set to:\n\n    /usr\n\n  For compatibility, find_package is ignoring the variable, but code in a\n  .cmake module might still use it.\nCall Stack (most recent call first):\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:261 (find_package)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:306 (find_flann)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:570 (find_external_library)\n  CMakeLists.txt:10 (find_package)\nThis warning is for project developers.  Use -Wno-dev to suppress it.\n\u001b[0m\n-- Found flann version 1.9.2\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Could NOT find Pcap (missing: PCAP_LIBRARIES PCAP_INCLUDE_DIRS) \n\u001b[0m** WARNING ** io features related to pcap will be disabled\u001b[0m\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Found Qhull version 8.0.2\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- looking for PCL_COMMON\n-- looking for PCL_KDTREE\n-- looking for PCL_OCTREE\n-- looking for PCL_SEARCH\n-- looking for PCL_SAMPLE_CONSENSUS\n-- looking for PCL_FILTERS\n-- looking for PCL_2D\n-- looking for PCL_GEOMETRY\n-- looking for PCL_IO\n-- looking for PCL_FEATURES\n-- looking for PCL_ML\n-- looking for PCL_SEGMENTATION\n-- looking for PCL_VISUALIZATION\n-- looking for PCL_SURFACE\n-- looking for PCL_REGISTRATION\n-- looking for PCL_KEYPOINTS\n-- looking for PCL_TRACKING\n-- looking for PCL_RECOGNITION\n-- looking for PCL_STEREO\n-- looking for PCL_APPS\n-- looking for PCL_IN_HAND_SCANNER\n-- looking for PCL_MODELER\n-- looking for PCL_POINT_CLOUD_EDITOR\n-- looking for PCL_OUTOFCORE\n-- looking for PCL_PEOPLE\n-- Configuring done (4.1s)\n-- Generating done (0.0s)\n-- Build files have been written to: /home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/build\n[ 20%] \u001b[32mBuilding CXX object CMakeFiles/ukf_highway.dir/src/main.cpp.o\u001b[0m\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/highway.h:4\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/main.cpp:6\u001b[m\u001b[K:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:\u001b[m\u001b[K In constructor ‘\u001b[01m\u001b[KCar::\u001b[01;32m\u001b[KCar\u001b[m\u001b[K(Vect3, Vect3, Color, float, float, float, std::string)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:69:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[KCar::Lf\u001b[m\u001b[K’ will be initialized after [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   69 |         float \u001b[01;35m\u001b[KLf\u001b[m\u001b[K;\n      |               \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:62:21:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K  ‘\u001b[01m\u001b[Kstd::string Car::name\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   62 |         std::string \u001b[01;35m\u001b[Kname\u001b[m\u001b[K;\n      |                     \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:84:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K  when initialized here [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   84 |         \u001b[01;35m\u001b[KCar\u001b[m\u001b[K(Vect3 setPosition, Vect3 setDimensions, Color setColor, float setVelocity, float setAngle, float setLf, std::string setName)\n      |         \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/highway.h:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid Highway::\u001b[01;32m\u001b[KstepHighway\u001b[m\u001b[K(double, long long int, int, pcl::visualization::PCLVisualizer::Ptr&)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/highway.h:122:35:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison of integer expressions of different signedness: ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’ and ‘\u001b[01m\u001b[Kstd::vector<Car>::size_type\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare\u0007-Wsign-compare\u001b]8;;\u0007\u001b[m\u001b[K]\n  122 |                 for (int i = 0; \u001b[01;35m\u001b[Ki < traffic.size()\u001b[m\u001b[K; i++)\n      |                                 \u001b[01;35m\u001b[K~~^~~~~~~~~~~~~~~~\u001b[m\u001b[K\n[ 40%] \u001b[32mBuilding CXX object CMakeFiles/ukf_highway.dir/src/ukf.cpp.o\u001b[0m\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Core:326\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Dense:1\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.h:4\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:1\u001b[m\u001b[K:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(ResScalar*, Index, const LhsScalar*, const RhsScalar*, Index, Index, Index, ResScalar, Index, Index, Index, Index, RhsScalar*)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:574:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  574 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) traits.initAcc(C3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:575:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  575 |                   \u001b[01;36m\u001b[Ktraits\u001b[m\u001b[K.initAcc(C4);\n      |                   \u001b[01;36m\u001b[K^~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:946:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  946 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) R3 = ploadu<ResPacket>(r3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:948:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  948 |                   \u001b[01;36m\u001b[Ktraits\u001b[m\u001b[K.acc(C0, alphav, R0);\n      |                   \u001b[01;36m\u001b[K^~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:951:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  951 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) traits.acc(C3, alphav, R3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:953:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  953 |                   \u001b[01;36m\u001b[Kpstoreu\u001b[m\u001b[K(r0, R0);\n      |                   \u001b[01;36m\u001b[K^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KProcessMeasurement\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:103:14:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Krho_dot\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  103 |       double \u001b[01;35m\u001b[Krho_dot\u001b[m\u001b[K = meas_package.raw_measurements_(2);  // velocity of rho\n      |              \u001b[01;35m\u001b[K^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KUpdateLidar\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:340:10:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[KNIS_lidar\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  340 |   double \u001b[01;35m\u001b[KNIS_lidar\u001b[m\u001b[K = z_diff.transpose() * S.inverse() * z_diff;\n      |          \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KUpdateRadar\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:436:10:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[KNIS_radar\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  436 |   double \u001b[01;35m\u001b[KNIS_radar\u001b[m\u001b[K = z_diff.transpose() * S.inverse() * z_diff;\n      |          \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Core:284\u001b[m\u001b[K:\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, Eigen::Matrix<double, -1, 1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; OtherDerived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:169:22:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Matrix<double, -1, -1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; OtherDerived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:175:37:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::Matrix<double, -1, 1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; OtherDerived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:184:21:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> > > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n... additional lines truncated ...\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::Matrix<double, -1, -1>; Derived2 = Eigen::Matrix<double, -1, -1>; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:507:85:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:653:72:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_noalias\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:303:25:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&) \u001b[35m\u001b[K[with _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/../ukf.h:7:7:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::\u001b[01;35m\u001b[KDstIsAligned ? 0\u001b[m\u001b[K\n      |                                                                  \u001b[01;35m\u001b[K~~~~~~~~~~~~~^~~\u001b[m\u001b[K\n  403 | \u001b[01;35m\u001b[K                             : internal::first_aligned(&dst.coeffRef(0), size)\u001b[m\u001b[K;\n      |                              \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K \n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:507:85:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:653:72:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_noalias\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:296:25:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:106:54:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:483:22:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:184:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:109:46:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && \u001b[01;35m\u001b[Kint(DstIsAligned)\u001b[m\u001b[K && int(SrcIsAligned),\n      |                           \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:54:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   54 |                        && \u001b[01;35m\u001b[K(DstIsAligned || MaxSizeAtCompileTime == Dynamic)\u001b[m\u001b[K,\n      |                           \u001b[01;35m\u001b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; Derived2 = Eigen::Matrix<double, -1, 1>; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with RhsDerived = Eigen::Matrix<double, -1, 1>; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; OtherDerived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Rhs&) \u001b[35m\u001b[K[with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/CwiseBinaryOp.h:224:7:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator+=\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:110:11:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::\u001b[01;35m\u001b[KDstIsAligned ? 0\u001b[m\u001b[K\n      |                                                                  \u001b[01;35m\u001b[K~~~~~~~~~~~~~^~~\u001b[m\u001b[K\n  403 | \u001b[01;35m\u001b[K                             : internal::first_aligned(&dst.coeffRef(0), size)\u001b[m\u001b[K;\n      |                              \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K \n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:483:22:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:184:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:117:27:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && \u001b[01;35m\u001b[Kint(DstIsAligned)\u001b[m\u001b[K && int(SrcIsAligned),\n      |                           \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:54:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   54 |                        && \u001b[01;35m\u001b[K(DstIsAligned || MaxSizeAtCompileTime == Dynamic)\u001b[m\u001b[K,\n      |                           \u001b[01;35m\u001b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:507:85:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:483:22:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:184:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:109:46:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::\u001b[01;35m\u001b[KDstIsAligned ? 0\u001b[m\u001b[K\n      |                                                                  \u001b[01;35m\u001b[K~~~~~~~~~~~~~^~~\u001b[m\u001b[K\n  403 | \u001b[01;35m\u001b[K                             : internal::first_aligned(&dst.coeffRef(0), size)\u001b[m\u001b[K;\n      |                              \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K \n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:653:72:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_noalias\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:638:114:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_selector\u001b[m\u001b[K(const OtherDerived&, const Eigen::internal::false_type&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:630:20:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:172:24:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:114:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && \u001b[01;35m\u001b[Kint(DstIsAligned)\u001b[m\u001b[K && int(SrcIsAligned),\n      |                           \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:54:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   54 |                        && \u001b[01;35m\u001b[K(DstIsAligned || MaxSizeAtCompileTime == Dynamic)\u001b[m\u001b[K,\n      |                           \u001b[01;35m\u001b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:507:85:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:483:22:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:184:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::EigenBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:117:27:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n  402 |     const Index alignedStart = assign_traits<Derived1,Derived2>::\u001b[01;35m\u001b[KDstIsAligned ? 0\u001b[m\u001b[K\n      |                                                                  \u001b[01;35m\u001b[K~~~~~~~~~~~~~^~~\u001b[m\u001b[K\n  403 | \u001b[01;35m\u001b[K                             : internal::first_aligned(&dst.coeffRef(0), size)\u001b[m\u001b[K;\n      |                              \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K \n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstatic void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived1&, const Derived2&) \u001b[35m\u001b[K[with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; int Version = 0]\u001b[m\u001b[K\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:507:85:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:653:72:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_noalias\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:638:114:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_selector\u001b[m\u001b[K(const OtherDerived&, const Eigen::internal::false_type&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:630:20:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:172:24:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/tools.cpp:114:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:402:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n[ 80%] \u001b[32mBuilding CXX object CMakeFiles/ukf_highway.dir/src/render/render.cpp.o\u001b[0m\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.cpp:5\u001b[m\u001b[K:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:\u001b[m\u001b[K In constructor ‘\u001b[01m\u001b[KCar::\u001b[01;32m\u001b[KCar\u001b[m\u001b[K(Vect3, Vect3, Color, float, float, float, std::string)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:69:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[KCar::Lf\u001b[m\u001b[K’ will be initialized after [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   69 |         float \u001b[01;35m\u001b[KLf\u001b[m\u001b[K;\n      |               \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:62:21:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K  ‘\u001b[01m\u001b[Kstd::string Car::name\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   62 |         std::string \u001b[01;35m\u001b[Kname\u001b[m\u001b[K;\n      |                     \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/render/render.h:84:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K  when initialized here [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\u0007-Wreorder\u001b]8;;\u0007\u001b[m\u001b[K]\n   84 |         \u001b[01;35m\u001b[KCar\u001b[m\u001b[K(Vect3 setPosition, Vect3 setDimensions, Color setColor, float setVelocity, float setAngle, float setLf, std::string setName)\n      |         \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n[100%] \u001b[32m\u001b[1mLinking CXX executable ukf_highway\u001b[0m\n[100%] Built target ukf_highway\n\n        </stdout>\n        <stderr>\n        \n        </stderr>","isError":false,"requestId":""}},"48c05bcd-566c-4d08-94bc-b4e715a628cb;toolu_vrtx_01LL88XyqhF51rKbTBjD2kC6":{"requestId":"48c05bcd-566c-4d08-94bc-b4e715a628cb","toolUseId":"toolu_vrtx_01LL88XyqhF51rKbTBjD2kC6","phase":5,"result":{"text":"Process launched with PID 38","isError":false,"requestId":""}},"a6166f65-d2be-432c-b5a7-a26aa947fac7;toolu_vrtx_01XfXAmVhrGY6Bic3LPbb17F":{"requestId":"a6166f65-d2be-432c-b5a7-a26aa947fac7","toolUseId":"toolu_vrtx_01XfXAmVhrGY6Bic3LPbb17F","phase":5,"result":{"text":"Here are all known processes:\n\nTerminal 38: cd build && ./ukf_highway - killed (return code: 0)","isError":false,"requestId":""}},"05abff02-64da-49e2-8dc6-cc053b867364;toolu_vrtx_011eamFgKERFYtuFgcdQ19KX":{"requestId":"05abff02-64da-49e2-8dc6-cc053b867364","toolUseId":"toolu_vrtx_011eamFgKERFYtuFgcdQ19KX","phase":5,"result":{"text":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n    44\t  for (int i = 1; i < n_sig_; ++i) {\n    45\t    weights_(i) = 0.5 / (lambda_ + n_aug_);\n    46\t  }\n    47\t\n    48\t  // Process noise standard deviation longitudinal acceleration in m/s^2\n    49\t  // Reduced from default 30 to a more reasonable value for cars\n    50\t  // Fine-tuned to achieve better RMSE values\n    51\t  std_a_ = 1.5;\n    52\t\n    53\t  // Process noise standard deviation yaw acceleration in rad/s^2\n    54\t  // Reduced from default 30 to a more reasonable value for cars\n    55\t  // Fine-tuned to achieve better RMSE values\n    56\t  std_yawdd_ = 0.5;\n    57\t\n    58\t  /**\n    59\t   * DO NOT MODIFY measurement noise values below.\n    60\t   * These are provided by the sensor manufacturer.\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","isError":false,"requestId":""}},"c49b576d-468c-4beb-891f-cb84dc6617fd;toolu_vrtx_01QG671qB5TmigRLbs5ad2ow":{"requestId":"c49b576d-468c-4beb-891f-cb84dc6617fd","toolUseId":"toolu_vrtx_01QG671qB5TmigRLbs5ad2ow","phase":5,"result":{"text":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n   119\t      // so we initialize them to 0\n   120\t      x_ << meas_package.raw_measurements_(0), meas_package.raw_measurements_(1), 0, 0, 0;\n   121\t    }\n   122\t\n   123\t    // Initialize covariance matrix with appropriate uncertainty values\n   124\t    // Higher uncertainty for velocity, yaw, and yaw_rate since they're not directly measured\n   125\t    P_.fill(0.0);\n   126\t    P_(0, 0) = 0.15 * 0.15;  // px uncertainty - related to lidar measurement noise\n   127\t    P_(1, 1) = 0.15 * 0.15;  // py uncertainty - related to lidar measurement noise\n   128\t    P_(2, 2) = 1.0;          // v uncertainty - higher since not directly measured\n   129\t    P_(3, 3) = 0.1;          // yaw uncertainty - moderate uncertainty in heading\n   130\t    P_(4, 4) = 0.1;          // yaw rate uncertainty - moderate uncertainty in turning rate\n   131\t\n   132\t    // Save timestamp\n   133\t    time_us_ = meas_package.timestamp_;\n   134\t\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","isError":false,"requestId":""}},"5aad9b30-8b3d-45aa-976d-760d87e03549;toolu_vrtx_01VfatKUYFpbaYY8vXqqZex5":{"requestId":"5aad9b30-8b3d-45aa-976d-760d87e03549","toolUseId":"toolu_vrtx_01VfatKUYFpbaYY8vXqqZex5","phase":5,"result":{"text":"Successfully edited the file src/ukf.cpp.\nResult for str_replace for entry with index [1]:\nReplacement successful.\nEdited section after IDE auto-formatting was applied:\n   195\t\n   196\t  *Xsig_out = Xsig_aug;\n   197\t}\n   198\t\n   199\tvoid UKF::SigmaPointPrediction(const MatrixXd& Xsig_aug, double delta_t) {\n   200\t  // Predict sigma points\n   201\t  for (int i = 0; i < n_sig_; ++i) {\n   202\t    // Extract values for better readability\n   203\t    double p_x = Xsig_aug(0, i);\n   204\t    double p_y = Xsig_aug(1, i);\n   205\t    double v = Xsig_aug(2, i);\n   206\t    double yaw = Xsig_aug(3, i);\n   207\t    double yawd = Xsig_aug(4, i);\n   208\t    double nu_a = Xsig_aug(5, i);\n   209\t    double nu_yawdd = Xsig_aug(6, i);\n   210\t\n   211\t    // Predicted state values\n   212\t    double px_p, py_p;\n   213\t\n   214\t    // Avoid division by zero and ensure numerical stability\n   215\t    if (fabs(yawd) > 0.001) {\n   216\t      // Use CTRV model equations when yaw rate is not close to zero\n   217\t      px_p = p_x + v / yawd * (sin(yaw + yawd * delta_t) - sin(yaw));\n   218\t      py_p = p_y + v / yawd * (cos(yaw) - cos(yaw + yawd * delta_t));\n   219\t    } else {\n   220\t      // Use constant velocity model when yaw rate is close to zero\n   221\t      px_p = p_x + v * delta_t * cos(yaw);\n   222\t      py_p = p_y + v * delta_t * sin(yaw);\n   223\t    }\n   224\t\n   225\t    double v_p = v;\n   226\t    double yaw_p = yaw + yawd * delta_t;\n   227\t    double yawd_p = yawd;\n   228\t\n   229\t    // Add process noise\n   230\t    px_p = px_p + 0.5 * nu_a * delta_t * delta_t * cos(yaw);\n   231\t    py_p = py_p + 0.5 * nu_a * delta_t * delta_t * sin(yaw);\n   232\t    v_p = v_p + nu_a * delta_t;\n   233\t    yaw_p = yaw_p + 0.5 * nu_yawdd * delta_t * delta_t;\n   234\t    yawd_p = yawd_p + nu_yawdd * delta_t;\n   235\t\n   236\t    // Normalize yaw angle to be between -pi and pi\n   237\t    yaw_p = NormalizeAngle(yaw_p);\n   238\t\n   239\t    // Write predicted sigma point into right column\n   240\t    Xsig_pred_(0, i) = px_p;\n   241\t    Xsig_pred_(1, i) = py_p;\n   242\t    Xsig_pred_(2, i) = v_p;\n   243\t    Xsig_pred_(3, i) = yaw_p;\n   244\t    Xsig_pred_(4, i) = yawd_p;\n   245\t  }\n   246\t}\n   247\t\n   248\tvoid UKF::PredictMeanAndCovariance() {\n   249\t  // Predict state mean\n   250\t  x_.fill(0.0);\n\nReview the changes and make sure they are as expected (correct indentation, no duplicate lines, etc).\nEdit the file again if necessary.\n","isError":false,"requestId":""}},"1633a8d7-3caa-49e8-91f2-0b59eec1e17d;toolu_vrtx_01WX7BQiiKWsumjjaaECet1L":{"requestId":"1633a8d7-3caa-49e8-91f2-0b59eec1e17d","toolUseId":"toolu_vrtx_01WX7BQiiKWsumjjaaECet1L","phase":5,"result":{"text":"Here are the results from executing the command.\n        <return-code>\n        0\n        </return-code>\n        <stdout>\n        \u001b[33mCMake Warning (dev) at /usr/lib/x86_64-linux-gnu/cmake/pcl/Modules/FindFLANN.cmake:45 (find_package):\n  Policy CMP0144 is not set: find_package uses upper-case <PACKAGENAME>_ROOT\n  variables.  Run \"cmake --help-policy CMP0144\" for policy details.  Use the\n  cmake_policy command to set the policy and suppress this warning.\n\n  CMake variable FLANN_ROOT is set to:\n\n    /usr\n\n  For compatibility, find_package is ignoring the variable, but code in a\n  .cmake module might still use it.\nCall Stack (most recent call first):\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:261 (find_package)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:306 (find_flann)\n  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:570 (find_external_library)\n  CMakeLists.txt:10 (find_package)\nThis warning is for project developers.  Use -Wno-dev to suppress it.\n\u001b[0m\n-- Found flann version 1.9.2\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Could NOT find Pcap (missing: PCAP_LIBRARIES PCAP_INCLUDE_DIRS) \n\u001b[0m** WARNING ** io features related to pcap will be disabled\u001b[0m\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)\n-- Found Qhull version 8.0.2\n-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)\n-- looking for PCL_COMMON\n-- looking for PCL_KDTREE\n-- looking for PCL_OCTREE\n-- looking for PCL_SEARCH\n-- looking for PCL_SAMPLE_CONSENSUS\n-- looking for PCL_FILTERS\n-- looking for PCL_2D\n-- looking for PCL_GEOMETRY\n-- looking for PCL_IO\n-- looking for PCL_FEATURES\n-- looking for PCL_ML\n-- looking for PCL_SEGMENTATION\n-- looking for PCL_VISUALIZATION\n-- looking for PCL_SURFACE\n-- looking for PCL_REGISTRATION\n-- looking for PCL_KEYPOINTS\n-- looking for PCL_TRACKING\n-- looking for PCL_RECOGNITION\n-- looking for PCL_STEREO\n-- looking for PCL_APPS\n-- looking for PCL_IN_HAND_SCANNER\n-- looking for PCL_MODELER\n-- looking for PCL_POINT_CLOUD_EDITOR\n-- looking for PCL_OUTOFCORE\n-- looking for PCL_PEOPLE\n-- Configuring done (2.5s)\n-- Generating done (0.0s)\n-- Build files have been written to: /home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/build\n[ 20%] \u001b[32mBuilding CXX object CMakeFiles/ukf_highway.dir/src/ukf.cpp.o\u001b[0m\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Core:326\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Dense:1\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.h:4\u001b[m\u001b[K,\n                 from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:1\u001b[m\u001b[K:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::\u001b[01;32m\u001b[Koperator()\u001b[m\u001b[K(ResScalar*, Index, const LhsScalar*, const RhsScalar*, Index, Index, Index, ResScalar, Index, Index, Index, Index, RhsScalar*)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:574:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  574 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) traits.initAcc(C3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:575:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  575 |                   \u001b[01;36m\u001b[Ktraits\u001b[m\u001b[K.initAcc(C4);\n      |                   \u001b[01;36m\u001b[K^~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:946:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  946 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) R3 = ploadu<ResPacket>(r3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:948:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  948 |                   \u001b[01;36m\u001b[Ktraits\u001b[m\u001b[K.acc(C0, alphav, R0);\n      |                   \u001b[01;36m\u001b[K^~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:951:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmisleading-indentation\u0007-Wmisleading-indentation\u001b]8;;\u0007\u001b[m\u001b[K]\n  951 |         \u001b[01;35m\u001b[Kif\u001b[m\u001b[K(nr==4) traits.acc(C3, alphav, R3);\n      |         \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralBlockPanelKernel.h:953:19:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n  953 |                   \u001b[01;36m\u001b[Kpstoreu\u001b[m\u001b[K(r0, R0);\n      |                   \u001b[01;36m\u001b[K^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KProcessMeasurement\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:105:14:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Krho_dot\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  105 |       double \u001b[01;35m\u001b[Krho_dot\u001b[m\u001b[K = meas_package.raw_measurements_(2);  // velocity of rho\n      |              \u001b[01;35m\u001b[K^~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KUpdateLidar\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:348:10:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[KNIS_lidar\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  348 |   double \u001b[01;35m\u001b[KNIS_lidar\u001b[m\u001b[K = z_diff.transpose() * S.inverse() * z_diff;\n      |          \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kvoid UKF::\u001b[01;32m\u001b[KUpdateRadar\u001b[m\u001b[K(MeasurementPackage)\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:444:10:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[KNIS_radar\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\u0007-Wunused-variable\u001b]8;;\u0007\u001b[m\u001b[K]\n  444 |   double \u001b[01;35m\u001b[KNIS_radar\u001b[m\u001b[K = z_diff.transpose() * S.inverse() * z_diff;\n      |          \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\nIn file included from \u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/Core:284\u001b[m\u001b[K:\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, Eigen::Matrix<double, -1, 1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; OtherDerived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:172:22:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Matrix<double, -1, -1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; OtherDerived = Eigen::Matrix<double, -1, -1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:178:37:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::Matrix<double, -1, 1> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; OtherDerived = Eigen::Matrix<double, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:187:21:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:48:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && int(DstIsAligned) && \u001b[01;35m\u001b[Kint(SrcIsAligned)\u001b[m\u001b[K,\n      |                                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> > > >\u001b[m\u001b[K’:\n... additional lines truncated ...\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:183:25:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && \u001b[01;35m\u001b[Kint(DstIsAligned)\u001b[m\u001b[K && int(SrcIsAligned),\n      |                           \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:54:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   54 |                        && \u001b[01;35m\u001b[K(DstIsAligned || MaxSizeAtCompileTime == Dynamic)\u001b[m\u001b[K,\n      |                           \u001b[01;35m\u001b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with RhsDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Rhs&) \u001b[35m\u001b[K[with BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:185:7:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[Koperator/=\u001b[m\u001b[K(const Scalar&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Scalar = double]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/LU/PartialPivLU.h:274:31:\u001b[m\u001b[K   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; OtherDerived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:564:57:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::MatrixBase<Derived>&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/MapBase.h:238:39:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MapBase<Derived, 1>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::MapBase<Derived, 1>&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Block.h:321:5:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>& Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>&) \u001b[35m\u001b[K[with XprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Block.h:155:5:\u001b[m\u001b[K   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with RhsDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Rhs&) \u001b[35m\u001b[K[with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/CwiseBinaryOp.h:210:7:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator-=\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:268:137:\u001b[m\u001b[K   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Derived = Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/DenseBase.h:375:49:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[Kswap\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&, int) \u001b[35m\u001b[K[with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PermutationMatrix.h:610:18:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::internal::permut_matrix_product_retval<PermutationType, MatrixType, Side, Transposed>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; PermutationType = Eigen::PermutationMatrix<-1, -1, int>; MatrixType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; int Side = 1; bool Transposed = false]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<-1, -1, int>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:529:113:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(ActualDerived&, const ActualOtherDerived&) \u001b[35m\u001b[K[with ActualDerived = Eigen::Matrix<double, -1, -1>; ActualOtherDerived = Eigen::ReturnByValue<Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<-1, -1, int>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, false> >; Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<-1, -1, int>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:585:71:\u001b[m\u001b[K   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false> >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; OtherDerived = Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:571:62:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator=\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PermutationMatrix.h:625:11:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::internal::permut_matrix_product_retval<PermutationType, MatrixType, Side, Transposed>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; PermutationType = Eigen::PermutationMatrix<-1, -1, int>; MatrixType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; int Side = 1; bool Transposed = false]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<-1, -1, int>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, false>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:529:113:\u001b[m\u001b[K   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h: In instantiation of ‘\u001b[01m\u001b[Kstruct Eigen::internal::assign_traits<Eigen::Matrix<bool, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> > >\u001b[m\u001b[K’:\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:506:116:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::DenseBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Derived = Eigen::Matrix<bool, -1, 1, 0, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:414:30:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[KlazyAssign\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Derived = Eigen::Matrix<bool, -1, 1, 0, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:527:107:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::\u001b[01;32m\u001b[Krun\u001b[m\u001b[K(Derived&, const OtherDerived&) \u001b[35m\u001b[K[with Derived = Eigen::Matrix<bool, -1, 1, 0, -1, 1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:653:72:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KDerived& Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_noalias\u001b[m\u001b[K(const Eigen::DenseBase<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Derived = Eigen::Matrix<bool, -1, 1, 0, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:638:114:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::PlainObjectBase<Derived>::\u001b[01;32m\u001b[K_set_selector\u001b[m\u001b[K(const OtherDerived&, const Eigen::internal::false_type&) \u001b[35m\u001b[K[with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Derived = Eigen::Matrix<bool, -1, 1, 0, -1, 1>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/PlainObjectBase.h:630:20:\u001b[m\u001b[K   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ReturnByValue.h:61:48:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kvoid Eigen::ReturnByValue<Derived>::\u001b[01;32m\u001b[KevalTo\u001b[m\u001b[K(Dest&) const \u001b[35m\u001b[K[with Dest = Eigen::Matrix<double, -1, -1>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Matrix.h:311:19:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::\u001b[01;32m\u001b[KMatrix\u001b[m\u001b[K(const Eigen::ReturnByValue<OtherDerived>&) \u001b[35m\u001b[K[with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/ProductBase.h:98:23:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::ProductBase<Derived, Lhs, Rhs>::\u001b[01;32m\u001b[KProductBase\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/products/GeneralMatrixMatrix.h:393:66:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[KEigen::GeneralProduct<Lhs, Rhs, 5>::\u001b[01;32m\u001b[KGeneralProduct\u001b[m\u001b[K(const Lhs&, const Rhs&) \u001b[35m\u001b[K[with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/GeneralProduct.h:593:60:\u001b[m\u001b[K   required from ‘\u001b[01m\u001b[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::\u001b[01;32m\u001b[Koperator*\u001b[m\u001b[K(const Eigen::MatrixBase<OtherDerived>&) const \u001b[35m\u001b[K[with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, -1, -1> > >, 5>]\u001b[m\u001b[K\u001b[m\u001b[K’\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/ukf.cpp:337:31:\u001b[m\u001b[K   required from here\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:51:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   51 |                        && \u001b[01;35m\u001b[Kint(DstIsAligned)\u001b[m\u001b[K && int(SrcIsAligned),\n      |                           \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:53:57:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   53 |     MayLinearVectorize = \u001b[01;35m\u001b[KMightVectorize && MayLinearize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:54:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   54 |                        && \u001b[01;35m\u001b[K(DstIsAligned || MaxSizeAtCompileTime == Dynamic)\u001b[m\u001b[K,\n      |                           \u001b[01;35m\u001b[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n\u001b[01m\u001b[K/home/krillavilla/Documents/Sensor_Fusion/SFND_Unscented_Kalman_Filter/src/Eigen/src/Core/Assign.h:57:41:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenum constant in boolean context [\u001b[01;35m\u001b[K\u001b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wint-in-bool-context\u0007-Wint-in-bool-context\u001b]8;;\u0007\u001b[m\u001b[K]\n   57 |     MaySliceVectorize  = \u001b[01;35m\u001b[KMightVectorize && DstHasDirectAccess\u001b[m\u001b[K\n      |                          \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n[ 40%] \u001b[32m\u001b[1mLinking CXX executable ukf_highway\u001b[0m\n[100%] Built target ukf_highway\n\n        </stdout>\n        <stderr>\n        \n        </stderr>","isError":false,"requestId":""}},"860d124f-4bdb-4282-bc6a-a20efe2db0f9;toolu_vrtx_01HZpEnQePb1rs3sqmGamf4i":{"requestId":"860d124f-4bdb-4282-bc6a-a20efe2db0f9","toolUseId":"toolu_vrtx_01HZpEnQePb1rs3sqmGamf4i","phase":5,"result":{"text":"Process launched with PID 40","isError":false,"requestId":""}},"1ddcb530-7bbf-451a-87ad-29d17f6c1d67;toolu_vrtx_01YPhFoRsRJqbue5vKAFuoYg":{"requestId":"1ddcb530-7bbf-451a-87ad-29d17f6c1d67","toolUseId":"toolu_vrtx_01YPhFoRsRJqbue5vKAFuoYg","phase":5,"result":{"text":"File saved.  Saved file {.gitignore}","isError":false,"requestId":""}}},"draftExchange":{"request_message":"","rich_text_json_repr":{"type":"doc","content":[{"type":"paragraph"}]},"status":"draft"},"requestIds":[],"isPinned":false,"isShareable":true,"extraData":{"isAgentConversation":true,"hasDirtyEdits":false,"baselineTimestamp":1747977880302},"personaType":0,"rootTaskUuid":"eafa6cc6-e260-4afd-8247-ad159fa1fa7a"}},"agentExecutionMode":"manual","isPanelCollapsed":true,"sortConversationsBy":"lastMessageTimestamp"}" />
      </map>
    </option>
  </component>
</project>